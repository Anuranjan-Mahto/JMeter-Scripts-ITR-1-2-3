<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">ui1.prd.dna.informa-labs.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pUsername" elementType="Argument">
            <stringProp name="Argument.name">pUsername</stringProp>
            <stringProp name="Argument.value">QA_USER1@meenakshimuralidharanmindtr.onmicrosoft.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pPassword" elementType="Argument">
            <stringProp name="Argument.name">pPassword</stringProp>
            <stringProp name="Argument.value">Mindtree@123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pUserNo" elementType="Argument">
            <stringProp name="Argument.name">pUserNo</stringProp>
            <stringProp name="Argument.value">201</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">ui1.prd.dna.informa-labs.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pThinkTime" elementType="Argument">
            <stringProp name="Argument.name">pThinkTime</stringProp>
            <stringProp name="Argument.value">2000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pTestDuration" elementType="Argument">
            <stringProp name="Argument.name">pTestDuration</stringProp>
            <stringProp name="Argument.value">1200</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pRampupDuration" elementType="Argument">
            <stringProp name="Argument.name">pRampupDuration</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pUsers_ClinicalTrials" elementType="Argument">
            <stringProp name="Argument.name">pUsers_ClinicalTrials</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pUsers_AncData" elementType="Argument">
            <stringProp name="Argument.name">pUsers_AncData</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pUsers_Drugs" elementType="Argument">
            <stringProp name="Argument.name">pUsers_Drugs</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pUsers_Person" elementType="Argument">
            <stringProp name="Argument.name">pUsers_Person</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pUsers_Organization" elementType="Argument">
            <stringProp name="Argument.name">pUsers_Organization</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pUsers_Company" elementType="Argument">
            <stringProp name="Argument.name">pUsers_Company</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pUsers_Admin" elementType="Argument">
            <stringProp name="Argument.name">pUsers_Admin</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pUsers_AgeingReport" elementType="Argument">
            <stringProp name="Argument.name">pUsers_AgeingReport</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pUsers_ComplexSearch" elementType="Argument">
            <stringProp name="Argument.name">pUsers_ComplexSearch</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">ui1.prd.dna.informa-labs.com</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
        <stringProp name="filename">D:\Users\MahtoA\OneDrive - Informa plc\Desktop\apache-jmeter-5.4.1\bin\Users.csv</stringProp>
        <stringProp name="fileEncoding">UTF-8</stringProp>
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="variableNames">pUsername,pPassword,pUserNo</stringProp>
        <boolProp name="randomOrder">true</boolProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <boolProp name="rewindOnTheEndOfList">true</boolProp>
        <boolProp name="independentListPerThread">false</boolProp>
      </com.blazemeter.jmeter.RandomCSVDataSetConfig>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="S01_ClinicalTrials" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(pRampupDuration)}</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller [Login]" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ClinicalTrials_T001z_Login" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T001a_Login_Landing" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">ui1.prd.dna.informa-labs.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T001b_Login_discovery_instance" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="api-version" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">api-version</stringProp>
                    <stringProp name="Argument.value">1.1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="authorization_endpoint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">authorization_endpoint</stringProp>
                    <stringProp name="Argument.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/common//discovery/instance</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T001c_Login_openid_configuration" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/v2.0/.well-known/openid-configuration</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T001d_Login_authorize_1" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">id_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="canary" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">canary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ctx" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ctx</stringProp>
                <stringProp name="RegexExtractor.regex">ctx%3d(.+?)\\</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="flowToken" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">flowToken</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sFT&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">hpgrequestid</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Me.htm-50" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Me.htm</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Moz" elementType="Header">
                    <stringProp name="Header.name">X-Moz</stringProp>
                    <stringProp name="Header.value">prefetch</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T001e_Login_GetCredentialType" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;username&quot;:&quot;${pUsername}&quot;,&quot;isOtherIdpSupported&quot;:true,&quot;checkPhones&quot;:false,&quot;isRemoteNGCSupported&quot;:true,&quot;isCookieBannerShown&quot;:false,&quot;isFidoSupported&quot;:true,&quot;originalRequest&quot;:&quot;${ctx}&quot;,&quot;country&quot;:&quot;PL&quot;,&quot;forceotclogin&quot;:false,&quot;isExternalFederationDisallowed&quot;:false,&quot;isRemoteConnectSupported&quot;:false,&quot;federationFlags&quot;:0,&quot;isSignup&quot;:false,&quot;flowToken&quot;:&quot;${flowToken}&quot;,&quot;isAccessPassSupported&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/GetCredentialType?mkt=en-US</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize?response_type=id_token&amp;scope=${scheme}%3A%2F%2Fmeenakshimuralidharanmindtr.onmicrosoft.com%2Fec9d67a6-4db3-4c2b-9629-829003e10247%2Fuser%20openid%20profile&amp;client_id=7f2d1e8b-4209-482f-b1d9-470c988a3a0a&amp;redirect_uri=${scheme}%3A%2F%2Fui1.prd.dna.informa-labs.com&amp;state=eyJpZCI6ImRkOTc2N2QyLTY4MWMtNGM3Zi04OTY5LTQ2YjkwOWEzZTM3MCIsInRzIjoxNjM0NzIwNTQ0LCJtZXRob2QiOiJyZWRpcmVjdEludGVyYWN0aW9uIn0%3D&amp;nonce=4c1a38ad-64f5-42df-b0c3-ff53167f0e1d&amp;client_info=1&amp;x-client-SKU=MSAL.JS&amp;x-client-Ver=1.4.14&amp;client-request-id=db3e0e67-a0c5-43e8-acb1-41fe59887d30&amp;response_mode=fragment</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">1800</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">AQABAAAAAAD--DLA3VO7QrddgJg7WevrWAiEmTLPW-qImBEU9wOnFRjt-1R3fEW1AN1Dcy71PBjgcAg3oLENFSL6p2jLWKXuLzQBUU4kS0Llp4oDnSb4VAzTddCyOvjOXBs6NXVYF47NaBPlhMNDa6wyolntBJbG8M5G56DMExb5zJz-mmAOq6S6s8X3uX5cz00eh_utlEUL8ri4zJgvN2_yZL3JSmztyw1LCV84JtpJdpOex6KIzCAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">ac7e0214-5c43-485a-858a-f83153fcb800</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1104</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">db3e0e67-a0c5-43e8-acb1-41fe59887d30</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T001f_Login_login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="i13" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i13</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="loginfmt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">loginfmt</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrt</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrtPartition" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrtPartition</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisRegion" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisRegion</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisScaleUnit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisScaleUnit</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="passwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">passwd</stringProp>
                    <stringProp name="Argument.value">${pPassword}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ps" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ps</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCDefaultType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCDefaultType</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCEntropy" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCEntropy</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCSLK" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCSLK</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                    <stringProp name="Argument.value">${canary}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                    <stringProp name="Argument.value">${ctx}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                    <stringProp name="Argument.value">${hpgrequestid}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                    <stringProp name="Argument.value">${flowToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PPSX" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">PPSX</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="NewUser" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">NewUser</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="FoundMSAs" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">FoundMSAs</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fspost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fspost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i21" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i21</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CookieDisclosure" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CookieDisclosure</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="IsFidoSupported" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">IsFidoSupported</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="isSignupPost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">isSignupPost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i2</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i17" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i17</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i18" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i18</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">32731</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize?response_type=id_token&amp;scope=${scheme}%3A%2F%2Fmeenakshimuralidharanmindtr.onmicrosoft.com%2Fec9d67a6-4db3-4c2b-9629-829003e10247%2Fuser%20openid%20profile&amp;client_id=7f2d1e8b-4209-482f-b1d9-470c988a3a0a&amp;redirect_uri=${scheme}%3A%2F%2Fui1.prd.dna.informa-labs.com&amp;state=eyJpZCI6ImRkOTc2N2QyLTY4MWMtNGM3Zi04OTY5LTQ2YjkwOWEzZTM3MCIsInRzIjoxNjM0NzIwNTQ0LCJtZXRob2QiOiJyZWRpcmVjdEludGVyYWN0aW9uIn0%3D&amp;nonce=4c1a38ad-64f5-42df-b0c3-ff53167f0e1d&amp;client_info=1&amp;x-client-SKU=MSAL.JS&amp;x-client-Ver=1.4.14&amp;client-request-id=db3e0e67-a0c5-43e8-acb1-41fe59887d30&amp;response_mode=fragment</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="canary" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">canary1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ctx" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ctx1</stringProp>
                <stringProp name="RegexExtractor.regex">ctx%3d(.+?)\\</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="flowToken" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">flowToken1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sFT&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">hpgrequestid1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T001g_Login_kmsi" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">28</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i2</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i17" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i17</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i18" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i18</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">10167</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${canary1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${ctx1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${hpgrequestid1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${flowToken1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/kmsi</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/login</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T001h_Login_authorize_2" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com/auth.html</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login_hint</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="prompt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">prompt</stringProp>
                    <stringProp name="Argument.value">none</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">iframe</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T001i_Login_authorize_3" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login_hint</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">token</stringProp>
                <stringProp name="RegexExtractor.regex">access_token=(.+?)&amp;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1615526678">not_found</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">token</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
                <intProp name="OnError.action">4</intProp>
              </ResultAction>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ClinicalTrials_T002z_ClinicalTrialsTab" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T002a_clinicalTrials" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/clinicalTrials</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T002b_authorization_user" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/authorization/user</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T002c_Search" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Search/1/true</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T002d_ClinicalTrialAdvanceSearch_advancedsearchcategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ClinicalTrialAdvanceSearch/advancedsearchcategory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T002e_UserGroup_GetUsersAndUserGroupByQueueId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[2]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/UserGroup/GetUsersAndUserGroupByQueueId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T002f_Tasks_GetMasterData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Tasks/GetMasterData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T002g_ClinicalTrialAdvanceSearch_advanceSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50,&quot;resultOptions&quot;:{&quot;showColumns&quot;:[]},&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;LastModifiedDate&quot;,&quot;isDescendingOrder&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ClinicalTrialAdvanceSearch/advanceSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ClinicalTrials_T003z_NewClinicalTrial" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T003a_clinicalTrials_0" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/clinicalTrials/0</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/clinicalTrials</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T003b_authorization_user" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/authorization/user</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T003c_ClinicalTrial_Masters" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ClinicalTrial/Masters</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Create Trial- Trial Summary [No requests]" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T004z_diseaseType_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[{&quot;name&quot;:&quot;TherapeuticId&quot;,&quot;value&quot;:9}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/diseaseType/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T005z_patientSegment_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[{&quot;name&quot;:&quot;DiseaseTypeId&quot;,&quot;value&quot;:108}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/patientSegment/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,026 DrugPrimaryName" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;Bet&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Drug/DrugPrimaryName</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T006z_Drug_DrugPrimaryName" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;Betamethasone&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Drug/DrugPrimaryName</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T007z_sponsor_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;National Institutes of Health&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/sponsor/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T008z_collaborator_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;Hospital&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/collaborator/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T009z_associatedCRO_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;test&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/associatedCRO/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T010z_tag_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/tag/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T011z_LocationCountry_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;india&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/LocationCountry/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T012z_Save_TrialSummary" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;trialSummary&quot;:{&quot;name&quot;:&quot;PT Trial User${pUserNo}_${__time(,)}&quot;,&quot;source&quot;:{&quot;isDefault&quot;:false,&quot;id&quot;:2,&quot;value&quot;:&quot;CT.gov&quot;},&quot;protocolIds&quot;:[&quot;12345&quot;],&quot;therapeuticDiseasePatients&quot;:[{&quot;id&quot;:-1,&quot;therapeuticArea&quot;:{&quot;isDefault&quot;:false,&quot;id&quot;:9,&quot;value&quot;:&quot;Autoimmune/Inflammation&quot;},&quot;diseaseType&quot;:{&quot;therapeuticId&quot;:9,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-21T12:21:44.13&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-21T12:21:44.13&quot;,&quot;therapeuticArea&quot;:{&quot;id&quot;:0,&quot;desc&quot;:null,&quot;createdBy&quot;:null,&quot;createdDate&quot;:&quot;0001-01-01T00:00:00&quot;,&quot;modifiedBy&quot;:null,&quot;modifiedDate&quot;:&quot;0001-01-01T00:00:00&quot;,&quot;displayValue&quot;:null},&quot;displayValue&quot;:&quot;Psoriasis&quot;,&quot;diseaseTypeSynonymModel&quot;:[],&quot;id&quot;:108,&quot;value&quot;:&quot;Psoriasis&quot;},&quot;patientSegments&quot;:[{&quot;isSelected&quot;:false,&quot;isDisabled&quot;:false,&quot;id&quot;:-1,&quot;patientSegment&quot;:{&quot;id&quot;:54,&quot;value&quot;:&quot;Moderate&quot;}}]}],&quot;phase&quot;:{&quot;isDefault&quot;:false,&quot;id&quot;:2,&quot;value&quot;:&quot;II&quot;},&quot;globalStatus&quot;:{&quot;isDefault&quot;:false,&quot;id&quot;:3,&quot;value&quot;:&quot;Open&quot;},&quot;primaryDrugs&quot;:[{&quot;prodStatus&quot;:5,&quot;isSelected&quot;:false,&quot;id&quot;:-1,&quot;drug&quot;:{&quot;id&quot;:182724,&quot;value&quot;:&quot;0.02% Betamethasone Sodium Phosphate&quot;}}],&quot;secondaryDrugs&quot;:[{&quot;prodStatus&quot;:5,&quot;isSelected&quot;:false,&quot;id&quot;:-1,&quot;drug&quot;:{&quot;id&quot;:104840,&quot;value&quot;:&quot;0.05% Clobetasol propionate&quot;}}],&quot;sponsors&quot;:[{&quot;sponsorTypeDesc&quot;:&quot;Academic&quot;,&quot;isSelected&quot;:false,&quot;id&quot;:-1,&quot;sponsor&quot;:{&quot;id&quot;:101,&quot;value&quot;:&quot;Albert Einstein Cancer Center (AECC) &quot;}}],&quot;collaborators&quot;:[{&quot;isSelected&quot;:false,&quot;id&quot;:-1,&quot;collaborator&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;MyQA_Chung-Ho MemorialHospital&quot;}}],&quot;associatedCROs&quot;:[{&quot;isSelected&quot;:false,&quot;id&quot;:-1,&quot;associatedCRO&quot;:{&quot;id&quot;:1,&quot;value&quot;:&quot;MyQA_segment&quot;}}],&quot;tags&quot;:[{&quot;isSelected&quot;:false,&quot;id&quot;:-1,&quot;tag&quot;:{&quot;id&quot;:9,&quot;value&quot;:&quot;Microdosing&quot;}}],&quot;locations&quot;:[{&quot;isSelected&quot;:false,&quot;id&quot;:-1,&quot;location&quot;:{&quot;id&quot;:67,&quot;value&quot;:&quot;Australia&quot;}}],&quot;primaryURL&quot;:{&quot;url&quot;:&quot;www.testurl1.com&quot;,&quot;status&quot;:{&quot;id&quot;:1,&quot;value&quot;:&quot;Active&quot;},&quot;publishOnFos&quot;:true},&quot;supportingURL&quot;:[{&quot;url&quot;:&quot;www.testurl2.com&quot;,&quot;publishOnFos&quot;:true,&quot;status&quot;:{&quot;id&quot;:1,&quot;value&quot;:&quot;Active&quot;},&quot;id&quot;:-1}],&quot;createdDate&quot;:null,&quot;createdBy&quot;:&quot;&quot;,&quot;modifiedDate&quot;:null,&quot;modifiedBy&quot;:&quot;&quot;,&quot;lastFullReviewDate&quot;:null,&quot;lastFullReviewedBy&quot;:&quot;&quot;,&quot;nextFullReviewDate&quot;:null},&quot;ingestedContentResults&quot;:[],&quot;id&quot;:0,&quot;ingestedId&quot;:0,&quot;forceUpdate&quot;:[1]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="cClinicalTrialId1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">cClinicalTrialId1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">cClinicalTrialId1_NOT_FOUND</stringProp>
            <stringProp name="TestPlan.comments">Original Value: 409362</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-342604787">cClinicalTrialId1_NOT_FOUND</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">20</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">cClinicalTrialId1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
            <intProp name="OnError.action">4</intProp>
          </ResultAction>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Trial Objective [No requests]-------------------------------" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T013z_Save_TrialObjective" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;objective&quot;:{&quot;title&quot;:&quot;Test Trial Objective&quot;,&quot;primaryEndPointDetail&quot;:&quot;Test Primary Endpoint detail&quot;,&quot;objectivePrimaryTerms&quot;:[{&quot;id&quot;:-1,&quot;endPointTerm&quot;:&quot;Primary Endpoint term&quot;,&quot;timePoint&quot;:&quot;1&quot;,&quot;timePointUnit&quot;:{&quot;isDefault&quot;:false,&quot;id&quot;:15,&quot;value&quot;:&quot;Years&quot;}}],&quot;secondaryEndPointDetail&quot;:&quot;Test Secondary Endpoint detail&quot;,&quot;objectiveSecondaryTerms&quot;:[{&quot;id&quot;:-1,&quot;endPointTerm&quot;:&quot;Secondary Endpoint term&quot;,&quot;timePoint&quot;:&quot;1&quot;,&quot;timePointUnit&quot;:{&quot;isDefault&quot;:false,&quot;id&quot;:15,&quot;value&quot;:&quot;Years&quot;}}]},&quot;ingestedContentResults&quot;:[],&quot;id&quot;:${cClinicalTrialId1},&quot;ingestedId&quot;:null,&quot;forceUpdate&quot;:[2]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Trial outcome [No requests]-------------------------------" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T014z_Save_TrialOutcome" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;outcome&quot;:{&quot;outcomeStatuses&quot;:[{&quot;id&quot;:-1,&quot;label&quot;:&quot;Terminated, Lack of efficacy&quot;,&quot;outcomeStatus&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Terminated, Lack of efficacy&quot;,&quot;isSelected&quot;:true}}],&quot;detailsDate&quot;:&quot;Sat Dec 04 2021&quot;,&quot;detail&quot;:&quot;Test outcome details&quot;},&quot;ingestedContentResults&quot;:[],&quot;id&quot;:${cClinicalTrialId1},&quot;ingestedId&quot;:null,&quot;forceUpdate&quot;:[3]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Trial Timing [No requests]-------------------------------" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T015z_Save_TrialTiming" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;trialTiming&quot;:{&quot;reportedSites&quot;:2,&quot;identifiedSites&quot;:0,&quot;startDateActual&quot;:null,&quot;startDateTarget&quot;:&quot;Wed Dec 01 2021&quot;,&quot;enrollmentCloseDateActual&quot;:null,&quot;enrollmentCloseDateTarget&quot;:&quot;Wed Dec 08 2021&quot;,&quot;primaryCompletionDateActual&quot;:null,&quot;primaryCompletionDateTarget&quot;:&quot;Wed Dec 15 2021&quot;,&quot;primaryEndPointsReportedActual&quot;:null,&quot;primaryEndPointsReportedTarget&quot;:&quot;Wed Dec 22 2021&quot;,&quot;fullCompletionDateTarget&quot;:null,&quot;fullCompletionDateActual&quot;:null,&quot;enrollmentDurationActual&quot;:null,&quot;enrollmentDurationTarget&quot;:0.23,&quot;treatmentDurationActual&quot;:null,&quot;treatmentDurationTarget&quot;:0.23,&quot;timetoPublishActual&quot;:null,&quot;timetoPublishTarget&quot;:0.23},&quot;forceUpdate&quot;:[4],&quot;id&quot;:${cClinicalTrialId1},&quot;ingestedId&quot;:null,&quot;ingestedContentResults&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Patient Population [No requests]-------------------------------" enabled="true"/>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T016z_Save_PatientPopulation" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;patientPopulation&quot;:{&quot;id&quot;:399865,&quot;patient_Population&quot;:&quot;Test Patient Population&quot;,&quot;inclusionCriteria&quot;:&quot;Test inclusion Criteria&quot;,&quot;exclusionCriteria&quot;:&quot;Test exclusion Criteria&quot;,&quot;targetAccrual&quot;:100,&quot;targetAccrualComment&quot;:&quot;Test Comments&quot;,&quot;interimAccrual&quot;:10,&quot;interimAccrualComment&quot;:null,&quot;interimAccrualDate&quot;:&quot;Wed Dec 15 2021&quot;,&quot;actualAccrual&quot;:null,&quot;dispositionOfPatients&quot;:&quot;Test Comments&quot;,&quot;priorTherapy&quot;:&quot;None&quot;,&quot;gender&quot;:&quot;Both&quot;,&quot;maximumAge&quot;:{&quot;maximumAge&quot;:65,&quot;maximumAgeUnitId&quot;:1,&quot;maximumAgeUnitDesc&quot;:&quot;Year(s)&quot;},&quot;minimumAge&quot;:{&quot;minimumAge&quot;:18,&quot;minimumAgeUnitId&quot;:1,&quot;minimumAgeUnitDesc&quot;:&quot;Year(s)&quot;}},&quot;ingestedContentResults&quot;:[],&quot;id&quot;:${cClinicalTrialId1},&quot;ingestedId&quot;:null,&quot;forceUpdate&quot;:[5]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T016z_Save_PatientPopulation" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;patientPopulation&quot;:{&quot;id&quot;:400707,&quot;patient_Population&quot;:&quot;Test&quot;,&quot;inclusionCriteria&quot;:&quot;Test&quot;,&quot;exclusionCriteria&quot;:&quot;Test&quot;,&quot;targetAccrual&quot;:12,&quot;targetAccrualComment&quot;:&quot;Test&quot;,&quot;interimAccrual&quot;:3,&quot;interimAccrualComment&quot;:null,&quot;interimAccrualDate&quot;:&quot;Tue Nov 30 2021&quot;,&quot;actualAccrual&quot;:null,&quot;dispositionOfPatients&quot;:&quot;Test&quot;,&quot;priorTherapy&quot;:&quot;Test&quot;,&quot;gender&quot;:&quot;Male&quot;,&quot;maximumAge&quot;:{&quot;maximumAge&quot;:60,&quot;maximumAgeUnitId&quot;:1,&quot;maximumAgeUnitDesc&quot;:&quot;Year(s)&quot;},&quot;minimumAge&quot;:{&quot;minimumAge&quot;:18,&quot;minimumAgeUnitId&quot;:1,&quot;minimumAgeUnitDesc&quot;:&quot;Year(s)&quot;}},&quot;ingestedContentResults&quot;:[],&quot;id&quot;:${cClinicalTrialId1},&quot;ingestedId&quot;:null,&quot;forceUpdate&quot;:[5]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Treatment Plan [No requests]-------------------------------" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T017z_designKeywords_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/designKeywords/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T018z_Save_TreatmentPlan" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;trialTreatmentPlan&quot;:{&quot;studykeywords&quot;:[{&quot;isSelected&quot;:false,&quot;id&quot;:-1,&quot;studyKeyword&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;efficacy&quot;}}],&quot;studyDesign&quot;:&quot;Test Study Design&quot;,&quot;treatmentPlan&quot;:&quot;Test Treatment Plan&quot;,&quot;armDetails&quot;:[{&quot;id&quot;:-1,&quot;arm&quot;:{&quot;isDefault&quot;:false,&quot;id&quot;:3,&quot;value&quot;:&quot;TEST Arm Type&quot;},&quot;detail&quot;:&quot;Test&quot;}]},&quot;ingestedContentResults&quot;:[],&quot;id&quot;:${cClinicalTrialId1},&quot;ingestedId&quot;:null,&quot;forceUpdate&quot;:[6]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T018z_Save_TreatmentPlan" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;trialTreatmentPlan&quot;:{&quot;studykeywords&quot;:[{&quot;isSelected&quot;:false,&quot;id&quot;:-1,&quot;studyKeyword&quot;:{&quot;id&quot;:1,&quot;value&quot;:&quot;randomized&quot;}}],&quot;studyDesign&quot;:&quot;Test&quot;,&quot;treatmentPlan&quot;:&quot;Test&quot;,&quot;armDetails&quot;:[{&quot;id&quot;:-1,&quot;arm&quot;:{&quot;isDefault&quot;:false,&quot;id&quot;:2,&quot;value&quot;:&quot;MyQA_Experimental&quot;},&quot;detail&quot;:&quot;Test&quot;}]},&quot;ingestedContentResults&quot;:[],&quot;id&quot;:${cClinicalTrialId1},&quot;ingestedId&quot;:null,&quot;forceUpdate&quot;:[6]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Associations  [No requests]-------------------------------" enabled="true"/>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T019z_organization_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;Covenant Medical Center&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/organization/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T020z_person_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;Mark&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/person/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T021z_Save_Association" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;trialContact&quot;:{&quot;isContactReviewed&quot;:true,&quot;contactList&quot;:[{&quot;id&quot;:-1,&quot;clinicalTrialId&quot;:${cClinicalTrialId1},&quot;organization&quot;:{&quot;id&quot;:1507,&quot;name&quot;:&quot;Allied Gastrointestinal Associates, P. A. (AGA) - Haddon Heights Office Location&quot;},&quot;person&quot;:{&quot;id&quot;:525883,&quot;personBasicInfo&quot;:{&quot;firstName&quot;:&quot;Fang&quot;,&quot;lastName&quot;:&quot;Qian&quot;,&quot;middleName&quot;:null,&quot;nameSuffix&quot;:null}},&quot;role&quot;:{&quot;id&quot;:4,&quot;value&quot;:&quot;Coordinating Investigator&quot;}}],&quot;contactReviewedBy&quot;:&quot;&quot;,&quot;contactReviewedDate&quot;:null},&quot;ingestedContentResults&quot;:[],&quot;id&quot;:${cClinicalTrialId1},&quot;ingestedId&quot;:null,&quot;forceUpdate&quot;:[7]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname=" --Trial Result  [No requests]-------------------------------" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T022z_Save_TrialResult" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;trialResult&quot;:{&quot;key&quot;:${cClinicalTrialId1},&quot;resultsData&quot;:[{&quot;templateId&quot;:0,&quot;publicationDate&quot;:&quot;2021-10-14T06:36:50.737Z&quot;,&quot;resultType&quot;:{&quot;id&quot;:3,&quot;value&quot;:&quot;Additional Analysis&quot;},&quot;sourceType&quot;:{&quot;id&quot;:1,&quot;value&quot;:&quot;Journal&quot;},&quot;values&quot;:[{&quot;fieldName&quot;:&quot;journalName&quot;,&quot;fieldValue&quot;:null,&quot;fieldLabel&quot;:&quot;NAME OF THE JOURNAL&quot;,&quot;fieldType&quot;:&quot;select_async&quot;},{&quot;fieldName&quot;:&quot;RESULTS&quot;,&quot;fieldValue&quot;:&quot;Test&quot;,&quot;fieldLabel&quot;:&quot;RESULTS&quot;,&quot;fieldType&quot;:&quot;textarea&quot;},{&quot;fieldName&quot;:&quot;publishOnFos&quot;,&quot;fieldValue&quot;:1,&quot;fieldLabel&quot;:&quot;PUBLISH ON FOS&quot;,&quot;fieldType&quot;:&quot;custom_radio&quot;}]}]},&quot;ingestedContentResults&quot;:[],&quot;id&quot;:${cClinicalTrialId1},&quot;ingestedId&quot;:null,&quot;forceUpdate&quot;:[8]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Trial Notes  [No requests]-------------------------------" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T023z_Save_Note" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;trialNotes&quot;:{&quot;key&quot;:${cClinicalTrialId1},&quot;notesData&quot;:[{&quot;templateId&quot;:0,&quot;publicationDate&quot;:&quot;${__time(yyyy-MM-dd&apos;T&apos;hh:mm:ss.SSS&apos;Z&apos;,)}&quot;,&quot;noteType&quot;:{&quot;isDefault&quot;:false,&quot;id&quot;:1,&quot;value&quot;:&quot;CT.gov Trial Timing&quot;},&quot;values&quot;:[{&quot;fieldName&quot;:&quot;text&quot;,&quot;fieldValue&quot;:&quot;test&quot;,&quot;fieldLabel&quot;:&quot;TEXT&quot;,&quot;fieldType&quot;:&quot;textarea&quot;},{&quot;fieldName&quot;:&quot;url&quot;,&quot;fieldValue&quot;:&quot;&quot;,&quot;fieldLabel&quot;:&quot;URL&quot;,&quot;fieldType&quot;:&quot;text&quot;},{&quot;fieldName&quot;:&quot;publishOnFos&quot;,&quot;fieldValue&quot;:2,&quot;fieldLabel&quot;:&quot;PUBLISH ON FOS&quot;,&quot;fieldType&quot;:&quot;custom_radio&quot;}]}]},&quot;ingestedContentResults&quot;:[],&quot;id&quot;:${cClinicalTrialId1},&quot;ingestedId&quot;:null,&quot;forceUpdate&quot;:[9]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ClinicalTrials_T024z_AuditTrial" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T024a_ClinicalTrialAuditEntry_search" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;rowCount&quot;:0,&quot;pageSize&quot;:100,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;EntityPrimaryKey&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:${cClinicalTrialId1},&quot;condition&quot;:0}],&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;All&quot;,&quot;isDescendingOrder&quot;:false}],&quot;resultOptions&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ClinicalTrialAuditEntry/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T024b_ClinicalTrial_AuditTrialHistory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ClinicalTrial/AuditTrialHistory/${cClinicalTrialId1}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T025z_Publish" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cClinicalTrialId1},&quot;forceUpdate&quot;:[10],&quot;productionStatusID&quot;:1,&quot;previousProductionStatus&quot;:6,&quot;isStamped&quot;:false}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-10-23T11:16:03.716</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">trials.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;94&quot;, &quot;Google Chrome&quot;;v=&quot;94&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.81 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-10-23T11:16:03.716</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ClinicalTrials_T026z_ClinicalTrials_LandingPage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T026a_Tasks_GetMasterData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Tasks/GetMasterData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T026b_Search" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Search/1/true</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T026c_UserGroup_GetUsersAndUserGroupByQueueId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[2]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/UserGroup/GetUsersAndUserGroupByQueueId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T026d_ClinicalTrialAdvanceSearch_advancedsearchcategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ClinicalTrialAdvanceSearch/advancedsearchcategory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T026e_ClinicalTrial_unlockdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ClinicalTrial/unlockdata/${cClinicalTrialId1}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T026f_ClinicalTrialAdvanceSearch_advanceSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50,&quot;resultOptions&quot;:{&quot;showColumns&quot;:[]},&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;LastModifiedDate&quot;,&quot;isDescendingOrder&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ClinicalTrialAdvanceSearch/advanceSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ClinicalTrials_T027z_Click_Edit_Icon_of_AnyClinicalTrial" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T027a_clinicalTrials_Id" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/clinicalTrials/${cClinicalTrialId1}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/clinicalTrials</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T027b_authorization_user" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/authorization/user</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T027c_ClinicalTrial_lockdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ClinicalTrial/lockdata/${cClinicalTrialId1}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T027d_ClinicalTrial_Masters" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ClinicalTrial/Masters</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T027e_api_ClinicalTrial_Id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ClinicalTrial/${cClinicalTrialId1}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T028z_Add_Note&amp;Save" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;trialNotes&quot;:{&quot;key&quot;:${cClinicalTrialId1},&quot;notesData&quot;:[{&quot;templateId&quot;:0,&quot;publicationDate&quot;:&quot;${__time(yyyy-MM-dd&apos;T&apos;hh:mm:ss.SSS&apos;Z&apos;,)}&quot;,&quot;noteType&quot;:{&quot;isDefault&quot;:false,&quot;id&quot;:1,&quot;value&quot;:&quot;CT.gov Trial Timing&quot;},&quot;values&quot;:[{&quot;fieldName&quot;:&quot;text&quot;,&quot;fieldValue&quot;:&quot;Test&quot;,&quot;fieldLabel&quot;:&quot;TEXT&quot;,&quot;fieldType&quot;:&quot;textarea&quot;},{&quot;fieldName&quot;:&quot;url&quot;,&quot;fieldValue&quot;:&quot;&quot;,&quot;fieldLabel&quot;:&quot;URL&quot;,&quot;fieldType&quot;:&quot;text&quot;},{&quot;fieldName&quot;:&quot;publishOnFos&quot;,&quot;fieldValue&quot;:2,&quot;fieldLabel&quot;:&quot;PUBLISH ON FOS&quot;,&quot;fieldType&quot;:&quot;custom_radio&quot;}]}]},&quot;ingestedContentResults&quot;:[],&quot;id&quot;:${cClinicalTrialId1},&quot;ingestedId&quot;:null,&quot;forceUpdate&quot;:[9]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ClinicalTrials_T029z_ClinicalTrials_LandingPage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T029a_ClinicalTrialAdvanceSearch_advancedsearchcategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ClinicalTrialAdvanceSearch/advancedsearchcategory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T029b_UserGroup_GetUsersAndUserGroupByQueueId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[2]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/UserGroup/GetUsersAndUserGroupByQueueId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T029c_Tasks_GetMasterData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Tasks/GetMasterData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T029d_Search" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Search/1/true</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T029e_ClinicalTrial_unlockdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ClinicalTrial/unlockdata/${cClinicalTrialId1}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T029f_ClinicalTrialAdvanceSearch_advanceSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50,&quot;resultOptions&quot;:{&quot;showColumns&quot;:[]},&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;LastModifiedDate&quot;,&quot;isDescendingOrder&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ClinicalTrialAdvanceSearch/advanceSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ClinicalTrials_T030z_NewClinicalTrial" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T030a_clinicalTrials_0" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/clinicalTrials/0</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/clinicalTrials</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T030b_authorization_user" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/authorization/user</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T030c_ClinicalTrial_Masters" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ClinicalTrial/Masters</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Create Trial- Trial Summary" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T031z_diseaseType_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[{&quot;name&quot;:&quot;TherapeuticId&quot;,&quot;value&quot;:12}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/diseaseType/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T032z_DrugPrimaryName" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;Betamethasone&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Drug/DrugPrimaryName</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T033z_sponsor_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;National Institutes of Health&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/sponsor/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T034z_Save_TrialSummary" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;trialSummary&quot;:{&quot;name&quot;:&quot;PT Trial User${pUserNo}_${__time(,)}&quot;,&quot;source&quot;:null,&quot;protocolIds&quot;:[],&quot;therapeuticDiseasePatients&quot;:[{&quot;id&quot;:-1,&quot;therapeuticArea&quot;:{&quot;isDefault&quot;:false,&quot;id&quot;:12,&quot;value&quot;:&quot;Ophthalmology&quot;},&quot;diseaseType&quot;:{&quot;therapeuticId&quot;:12,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-21T12:21:44.13&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-21T12:21:44.13&quot;,&quot;therapeuticArea&quot;:{&quot;id&quot;:0,&quot;desc&quot;:null,&quot;createdBy&quot;:null,&quot;createdDate&quot;:&quot;0001-01-01T00:00:00&quot;,&quot;modifiedBy&quot;:null,&quot;modifiedDate&quot;:&quot;0001-01-01T00:00:00&quot;,&quot;displayValue&quot;:null},&quot;displayValue&quot;:&quot;Glaucoma&quot;,&quot;diseaseTypeSynonymModel&quot;:[],&quot;id&quot;:149,&quot;value&quot;:&quot;Glaucoma&quot;},&quot;patientSegments&quot;:[]}],&quot;phase&quot;:{&quot;isDefault&quot;:false,&quot;id&quot;:2,&quot;value&quot;:&quot;II&quot;},&quot;globalStatus&quot;:{&quot;isDefault&quot;:false,&quot;id&quot;:3,&quot;value&quot;:&quot;Open&quot;},&quot;primaryDrugs&quot;:[{&quot;prodStatus&quot;:5,&quot;isSelected&quot;:false,&quot;id&quot;:-1,&quot;drug&quot;:{&quot;id&quot;:182724,&quot;value&quot;:&quot;0.02% Betamethasone Sodium Phosphate&quot;}}],&quot;secondaryDrugs&quot;:[],&quot;sponsors&quot;:[{&quot;sponsorTypeDesc&quot;:&quot;Academic&quot;,&quot;isSelected&quot;:false,&quot;id&quot;:-1,&quot;sponsor&quot;:{&quot;id&quot;:101,&quot;value&quot;:&quot;Albert Einstein Cancer Center (AECC) &quot;}}],&quot;collaborators&quot;:[],&quot;associatedCROs&quot;:[],&quot;tags&quot;:[],&quot;locations&quot;:[],&quot;primaryURL&quot;:null,&quot;supportingURL&quot;:[],&quot;createdDate&quot;:null,&quot;createdBy&quot;:&quot;&quot;,&quot;modifiedDate&quot;:null,&quot;modifiedBy&quot;:&quot;&quot;,&quot;lastFullReviewDate&quot;:null,&quot;lastFullReviewedBy&quot;:&quot;&quot;,&quot;nextFullReviewDate&quot;:null},&quot;ingestedContentResults&quot;:[],&quot;id&quot;:0,&quot;ingestedId&quot;:0,&quot;forceUpdate&quot;:[1]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="cClinicalTrialId2" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">cClinicalTrialId2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">cClinicalTrialId2_NOT_FOUND</stringProp>
            <stringProp name="TestPlan.comments">Original Value: 409365</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2139556146">cClinicalTrialId2_NOT_FOUND</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">20</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">cClinicalTrialId2</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
            <intProp name="OnError.action">4</intProp>
          </ResultAction>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Trial Objective" enabled="true"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Enter Mandatory fields and Save" enabled="true"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Trial outcome" enabled="true"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Enter Mandatory fields and Save" enabled="true"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Trial Timing" enabled="true"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Enter Mandatory fields and Save" enabled="true"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Patient Population" enabled="true"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Enter Mandatory fields and Save" enabled="true"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Treatment Plan" enabled="true"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Enter Mandatory fields and Save" enabled="true"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Associations" enabled="true"/>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T035z_organization_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;Covenant Medical Center&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/organization/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T036z_Save_Association" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;trialContact&quot;:{&quot;isContactReviewed&quot;:true,&quot;contactList&quot;:[{&quot;id&quot;:-1,&quot;clinicalTrialId&quot;:${cClinicalTrialId2},&quot;organization&quot;:{&quot;id&quot;:1507,&quot;name&quot;:&quot;Allied Gastrointestinal Associates, P. A. (AGA) - Haddon Heights Office Location&quot;},&quot;person&quot;:null,&quot;role&quot;:null}],&quot;contactReviewedBy&quot;:&quot;&quot;,&quot;contactReviewedDate&quot;:null},&quot;ingestedContentResults&quot;:[],&quot;id&quot;:${cClinicalTrialId2},&quot;ingestedId&quot;:null,&quot;forceUpdate&quot;:[7]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname=" Trial Result" enabled="true"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname=" Trial Notes" enabled="true"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Enter Mandatory fields and Save" enabled="true"/>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ClinicalTrials_T037z_AuditTrial" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T037a_ClinicalTrial_AuditTrialHistory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ClinicalTrial/AuditTrialHistory/${cClinicalTrialId2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T037b_ClinicalTrialAuditEntry_search" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;rowCount&quot;:0,&quot;pageSize&quot;:100,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;EntityPrimaryKey&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:${cClinicalTrialId2},&quot;condition&quot;:0}],&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;All&quot;,&quot;isDescendingOrder&quot;:false}],&quot;resultOptions&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ClinicalTrialAuditEntry/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_ClinicalTrials_T038z_Publish" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cClinicalTrialId2},&quot;forceUpdate&quot;:[10],&quot;productionStatusID&quot;:1,&quot;previousProductionStatus&quot;:6,&quot;isStamped&quot;:false}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-10-23T11:16:03.716</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">trials.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;94&quot;, &quot;Google Chrome&quot;;v=&quot;94&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.81 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-10-23T11:16:03.716</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Logout" enabled="false"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-766" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/ancillaryData/indication</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/logout</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-767" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="wa" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">wa</stringProp>
                    <stringProp name="Argument.value">wsignin1.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="idpflag" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">idpflag</stringProp>
                    <stringProp name="Argument.value">direct</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="wreply" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">wreply</stringProp>
                    <stringProp name="Argument.value">${scheme}://login.microsoftonline.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/ancillaryData/indication</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Me.srf</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">iframe</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">Error.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="S02_AncillaryData" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(pRampupDuration)}</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller [Login]" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S02_AncillaryData_T001z_Login" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_AncillaryData_T001a_Login_Landing" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">ui1.prd.dna.informa-labs.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_AncillaryData_T001b_Login_discovery_instance" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="api-version" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">api-version</stringProp>
                    <stringProp name="Argument.value">1.1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="authorization_endpoint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">authorization_endpoint</stringProp>
                    <stringProp name="Argument.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/common//discovery/instance</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_AncillaryData_T001c_Login_openid_configuration" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/v2.0/.well-known/openid-configuration</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_AncillaryData_T001d_Login_authorize_1" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">id_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="canary" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">canary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ctx" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ctx</stringProp>
                <stringProp name="RegexExtractor.regex">ctx%3d(.+?)\\</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="flowToken" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">flowToken</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sFT&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">hpgrequestid</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Me.htm-50" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Me.htm</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Moz" elementType="Header">
                    <stringProp name="Header.name">X-Moz</stringProp>
                    <stringProp name="Header.value">prefetch</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_AncillaryData_T001e_Login_GetCredentialType" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;username&quot;:&quot;${pUsername}&quot;,&quot;isOtherIdpSupported&quot;:true,&quot;checkPhones&quot;:false,&quot;isRemoteNGCSupported&quot;:true,&quot;isCookieBannerShown&quot;:false,&quot;isFidoSupported&quot;:true,&quot;originalRequest&quot;:&quot;${ctx}&quot;,&quot;country&quot;:&quot;PL&quot;,&quot;forceotclogin&quot;:false,&quot;isExternalFederationDisallowed&quot;:false,&quot;isRemoteConnectSupported&quot;:false,&quot;federationFlags&quot;:0,&quot;isSignup&quot;:false,&quot;flowToken&quot;:&quot;${flowToken}&quot;,&quot;isAccessPassSupported&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/GetCredentialType?mkt=en-US</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize?response_type=id_token&amp;scope=${scheme}%3A%2F%2Fmeenakshimuralidharanmindtr.onmicrosoft.com%2Fec9d67a6-4db3-4c2b-9629-829003e10247%2Fuser%20openid%20profile&amp;client_id=7f2d1e8b-4209-482f-b1d9-470c988a3a0a&amp;redirect_uri=${scheme}%3A%2F%2Fui1.prd.dna.informa-labs.com&amp;state=eyJpZCI6ImRkOTc2N2QyLTY4MWMtNGM3Zi04OTY5LTQ2YjkwOWEzZTM3MCIsInRzIjoxNjM0NzIwNTQ0LCJtZXRob2QiOiJyZWRpcmVjdEludGVyYWN0aW9uIn0%3D&amp;nonce=4c1a38ad-64f5-42df-b0c3-ff53167f0e1d&amp;client_info=1&amp;x-client-SKU=MSAL.JS&amp;x-client-Ver=1.4.14&amp;client-request-id=db3e0e67-a0c5-43e8-acb1-41fe59887d30&amp;response_mode=fragment</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">1800</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">AQABAAAAAAD--DLA3VO7QrddgJg7WevrWAiEmTLPW-qImBEU9wOnFRjt-1R3fEW1AN1Dcy71PBjgcAg3oLENFSL6p2jLWKXuLzQBUU4kS0Llp4oDnSb4VAzTddCyOvjOXBs6NXVYF47NaBPlhMNDa6wyolntBJbG8M5G56DMExb5zJz-mmAOq6S6s8X3uX5cz00eh_utlEUL8ri4zJgvN2_yZL3JSmztyw1LCV84JtpJdpOex6KIzCAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">ac7e0214-5c43-485a-858a-f83153fcb800</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1104</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">db3e0e67-a0c5-43e8-acb1-41fe59887d30</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_AncillaryData_T001f_Login_login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="i13" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i13</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="loginfmt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">loginfmt</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrt</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrtPartition" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrtPartition</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisRegion" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisRegion</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisScaleUnit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisScaleUnit</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="passwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">passwd</stringProp>
                    <stringProp name="Argument.value">${pPassword}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ps" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ps</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCDefaultType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCDefaultType</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCEntropy" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCEntropy</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCSLK" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCSLK</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                    <stringProp name="Argument.value">${canary}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                    <stringProp name="Argument.value">${ctx}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                    <stringProp name="Argument.value">${hpgrequestid}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                    <stringProp name="Argument.value">${flowToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PPSX" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">PPSX</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="NewUser" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">NewUser</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="FoundMSAs" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">FoundMSAs</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fspost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fspost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i21" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i21</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CookieDisclosure" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CookieDisclosure</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="IsFidoSupported" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">IsFidoSupported</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="isSignupPost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">isSignupPost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i2</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i17" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i17</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i18" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i18</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">32731</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize?response_type=id_token&amp;scope=${scheme}%3A%2F%2Fmeenakshimuralidharanmindtr.onmicrosoft.com%2Fec9d67a6-4db3-4c2b-9629-829003e10247%2Fuser%20openid%20profile&amp;client_id=7f2d1e8b-4209-482f-b1d9-470c988a3a0a&amp;redirect_uri=${scheme}%3A%2F%2Fui1.prd.dna.informa-labs.com&amp;state=eyJpZCI6ImRkOTc2N2QyLTY4MWMtNGM3Zi04OTY5LTQ2YjkwOWEzZTM3MCIsInRzIjoxNjM0NzIwNTQ0LCJtZXRob2QiOiJyZWRpcmVjdEludGVyYWN0aW9uIn0%3D&amp;nonce=4c1a38ad-64f5-42df-b0c3-ff53167f0e1d&amp;client_info=1&amp;x-client-SKU=MSAL.JS&amp;x-client-Ver=1.4.14&amp;client-request-id=db3e0e67-a0c5-43e8-acb1-41fe59887d30&amp;response_mode=fragment</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="canary" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">canary1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ctx" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ctx1</stringProp>
                <stringProp name="RegexExtractor.regex">ctx%3d(.+?)\\</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="flowToken" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">flowToken1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sFT&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">hpgrequestid1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_AncillaryData_T001g_Login_kmsi" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">28</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i2</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i17" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i17</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i18" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i18</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">10167</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${canary1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${ctx1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${hpgrequestid1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${flowToken1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/kmsi</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/login</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_AncillaryData_T001h_Login_authorize_2" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com/auth.html</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login_hint</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="prompt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">prompt</stringProp>
                    <stringProp name="Argument.value">none</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">iframe</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_AncillaryData_T001i_Login_authorize_3" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login_hint</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">token</stringProp>
                <stringProp name="RegexExtractor.regex">access_token=(.+?)&amp;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1615526678">not_found</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">token</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
                <intProp name="OnError.action">4</intProp>
              </ResultAction>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_AncillaryData_T002z_AncillaryDataTab_armType" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/armType</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S02_AncillaryData_T003z_DrugDisease" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_AncillaryData_T003a_indicationGroup" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/indicationGroup</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_AncillaryData_T003b_indication_quickSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/indication/quickSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_AncillaryData_T003c_ClinicalTrialAdvanceSearch_advanceSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50,&quot;resultOptions&quot;:{&quot;showColumns&quot;:[]},&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;LastModifiedDate&quot;,&quot;isDescendingOrder&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ClinicalTrialAdvanceSearch/advanceSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S02_AncillaryData_T004z_Fill_Mandatory_Fields&amp;Add" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_AncillaryData_T004a_indication" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;indication&quot;:&quot;PT Drug Disease User${pUserNo}_${__time(,)}&quot;,&quot;indicationGroupId&quot;:[{&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:51:41.713&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-25T11:51:41.713&quot;,&quot;label&quot;:&quot;Blood and Clotting Products&quot;,&quot;value&quot;:4,&quot;name&quot;:&quot;Blood and Clotting Products&quot;,&quot;id&quot;:4}],&quot;indicationSynonymModel&quot;:[],&quot;indicationGroup&quot;:[{&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:51:41.713&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-25T11:51:41.713&quot;,&quot;label&quot;:&quot;Blood and Clotting Products&quot;,&quot;value&quot;:4,&quot;name&quot;:&quot;Blood and Clotting Products&quot;,&quot;id&quot;:4}],&quot;isDefault&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/indication</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="cId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">cId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">cId_NOT_FOUND</stringProp>
              <stringProp name="TestPlan.comments">Original value: 193709</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="cIndication" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">cIndication</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.indication</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">cIndication_NOT_FOUND</stringProp>
              <stringProp name="TestPlan.comments">Original value: 193709</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="cCreatedBy" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">cCreatedBy</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.createdBy</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">cCreatedBy_NOT_FOUND</stringProp>
              <stringProp name="TestPlan.comments">Original value: 193709</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_AncillaryData_T004b_indication_quickSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;indication&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;&quot;,&quot;condition&quot;:0}],&quot;sortOrder&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/indication/quickSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S02_AncillaryData_T005z_Fill_All_Fields&amp;Add" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_AncillaryData_T005a_indication" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;indication&quot;:&quot;PT Drug Disease User${pUserNo}_${__time(,)}&quot;,&quot;indicationGroupId&quot;:[{&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:51:41.713&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-25T11:51:41.713&quot;,&quot;label&quot;:&quot;Cardiovascular Products&quot;,&quot;value&quot;:5,&quot;name&quot;:&quot;Cardiovascular Products&quot;,&quot;id&quot;:5}],&quot;indicationSynonymModel&quot;:[{&quot;id&quot;:0,&quot;synonym&quot;:&quot;PT Indication Synonym User${pUserNo}&quot;}],&quot;indicationGroup&quot;:[{&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:51:41.713&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-25T11:51:41.713&quot;,&quot;label&quot;:&quot;Cardiovascular Products&quot;,&quot;value&quot;:5,&quot;name&quot;:&quot;Cardiovascular Products&quot;,&quot;id&quot;:5}],&quot;isDefault&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/indication</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_AncillaryData_T005b_indication_quickSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;indication&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;&quot;,&quot;condition&quot;:0}],&quot;sortOrder&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/indication/quickSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Edit any Drug Disease [No Requests]" enabled="true"/>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S02_AncillaryData_T006z_Edit&amp;Save" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_AncillaryData_T006a_indication" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:2,&quot;indication&quot;:&quot;Buerger&apos;s syndrome&quot;,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T14:17:59.86&quot;,&quot;modifiedBy&quot;:&quot;QA USER&quot;,&quot;modifiedDate&quot;:&quot;2021-08-12T08:48:33.439908&quot;,&quot;indicationSynonymModel&quot;:[{&quot;id&quot;:0,&quot;synonym&quot;:&quot;Thromboangiitis obliterans&quot;},{&quot;id&quot;:0,&quot;synonym&quot;:&quot;test&quot;}],&quot;indicationGroup&quot;:[{&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:51:41.713&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-25T11:51:41.713&quot;,&quot;label&quot;:&quot;Cardiovascular Products&quot;,&quot;value&quot;:5,&quot;name&quot;:&quot;Cardiovascular Products&quot;,&quot;id&quot;:5},{&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:51:41.713&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-25T11:51:41.713&quot;,&quot;label&quot;:&quot;Rare Diseases&quot;,&quot;value&quot;:24,&quot;name&quot;:&quot;Rare Diseases&quot;,&quot;id&quot;:24}],&quot;eventDiseaseId&quot;:0,&quot;displayValue&quot;:&quot;Buerger&apos;s syndrome&quot;,&quot;indicationGroupId&quot;:[{&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:51:41.713&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-25T11:51:41.713&quot;,&quot;label&quot;:&quot;Cardiovascular Products&quot;,&quot;value&quot;:5,&quot;name&quot;:&quot;Cardiovascular Products&quot;,&quot;id&quot;:5},{&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:51:41.713&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-25T11:51:41.713&quot;,&quot;label&quot;:&quot;Rare Diseases&quot;,&quot;value&quot;:24,&quot;name&quot;:&quot;Rare Diseases&quot;,&quot;id&quot;:24}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/indication</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_AncillaryData_T006a_indication" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:${cId},&quot;indication&quot;:&quot;${cIndication}&quot;,&quot;createdBy&quot;:&quot;${cCreatedBy}&quot;,&quot;createdDate&quot;:&quot;2021-11-02T02:28:00.163036&quot;,&quot;modifiedBy&quot;:&quot;perf1&quot;,&quot;modifiedDate&quot;:&quot;2021-11-09T02:39:22.826678&quot;,&quot;indicationSynonymModel&quot;:[{&quot;id&quot;:0,&quot;synonym&quot;:&quot;PT Indication Synonym User${pUserNo} Edited&quot;}],&quot;indicationGroup&quot;:[{&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:51:41.713&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-25T11:51:41.713&quot;,&quot;label&quot;:&quot;Blood and Clotting Products&quot;,&quot;value&quot;:4,&quot;name&quot;:&quot;Blood and Clotting Products&quot;,&quot;id&quot;:4}],&quot;eventDiseaseId&quot;:0,&quot;displayValue&quot;:&quot;PT Drug Disease User2_1635820079813&quot;,&quot;indicationGroupId&quot;:[{&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:51:41.713&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-25T11:51:41.713&quot;,&quot;label&quot;:&quot;Blood and Clotting Products&quot;,&quot;value&quot;:4,&quot;name&quot;:&quot;Blood and Clotting Products&quot;,&quot;id&quot;:4}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/indication</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_AncillaryData_T006b_indication_quickSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50,&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;&quot;,&quot;isDescendingOrder&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/indication/quickSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Logout" enabled="false"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-766" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/ancillaryData/indication</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/logout</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-767" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="wa" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">wa</stringProp>
                    <stringProp name="Argument.value">wsignin1.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="idpflag" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">idpflag</stringProp>
                    <stringProp name="Argument.value">direct</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="wreply" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">wreply</stringProp>
                    <stringProp name="Argument.value">${scheme}://login.microsoftonline.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/ancillaryData/indication</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Me.srf</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">iframe</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="S03_Drugs" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(pRampupDuration)}</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller [Login]" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_Drugs_T001z_Login" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T001a_Login_Landing" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">ui1.prd.dna.informa-labs.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T001b_Login_discovery_instance" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="api-version" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">api-version</stringProp>
                    <stringProp name="Argument.value">1.1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="authorization_endpoint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">authorization_endpoint</stringProp>
                    <stringProp name="Argument.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/common//discovery/instance</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T001c_Login_openid_configuration" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/v2.0/.well-known/openid-configuration</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T001d_Login_authorize_1" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">id_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="canary" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">canary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ctx" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ctx</stringProp>
                <stringProp name="RegexExtractor.regex">ctx%3d(.+?)\\</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="flowToken" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">flowToken</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sFT&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">hpgrequestid</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Me.htm-50" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Me.htm</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Moz" elementType="Header">
                    <stringProp name="Header.name">X-Moz</stringProp>
                    <stringProp name="Header.value">prefetch</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T001e_Login_GetCredentialType" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;username&quot;:&quot;${pUsername}&quot;,&quot;isOtherIdpSupported&quot;:true,&quot;checkPhones&quot;:false,&quot;isRemoteNGCSupported&quot;:true,&quot;isCookieBannerShown&quot;:false,&quot;isFidoSupported&quot;:true,&quot;originalRequest&quot;:&quot;${ctx}&quot;,&quot;country&quot;:&quot;PL&quot;,&quot;forceotclogin&quot;:false,&quot;isExternalFederationDisallowed&quot;:false,&quot;isRemoteConnectSupported&quot;:false,&quot;federationFlags&quot;:0,&quot;isSignup&quot;:false,&quot;flowToken&quot;:&quot;${flowToken}&quot;,&quot;isAccessPassSupported&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/GetCredentialType?mkt=en-US</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize?response_type=id_token&amp;scope=${scheme}%3A%2F%2Fmeenakshimuralidharanmindtr.onmicrosoft.com%2Fec9d67a6-4db3-4c2b-9629-829003e10247%2Fuser%20openid%20profile&amp;client_id=7f2d1e8b-4209-482f-b1d9-470c988a3a0a&amp;redirect_uri=${scheme}%3A%2F%2Fui1.prd.dna.informa-labs.com&amp;state=eyJpZCI6ImRkOTc2N2QyLTY4MWMtNGM3Zi04OTY5LTQ2YjkwOWEzZTM3MCIsInRzIjoxNjM0NzIwNTQ0LCJtZXRob2QiOiJyZWRpcmVjdEludGVyYWN0aW9uIn0%3D&amp;nonce=4c1a38ad-64f5-42df-b0c3-ff53167f0e1d&amp;client_info=1&amp;x-client-SKU=MSAL.JS&amp;x-client-Ver=1.4.14&amp;client-request-id=db3e0e67-a0c5-43e8-acb1-41fe59887d30&amp;response_mode=fragment</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">1800</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">AQABAAAAAAD--DLA3VO7QrddgJg7WevrWAiEmTLPW-qImBEU9wOnFRjt-1R3fEW1AN1Dcy71PBjgcAg3oLENFSL6p2jLWKXuLzQBUU4kS0Llp4oDnSb4VAzTddCyOvjOXBs6NXVYF47NaBPlhMNDa6wyolntBJbG8M5G56DMExb5zJz-mmAOq6S6s8X3uX5cz00eh_utlEUL8ri4zJgvN2_yZL3JSmztyw1LCV84JtpJdpOex6KIzCAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">ac7e0214-5c43-485a-858a-f83153fcb800</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1104</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">db3e0e67-a0c5-43e8-acb1-41fe59887d30</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T001f_Login_login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="i13" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i13</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="loginfmt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">loginfmt</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrt</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrtPartition" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrtPartition</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisRegion" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisRegion</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisScaleUnit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisScaleUnit</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="passwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">passwd</stringProp>
                    <stringProp name="Argument.value">${pPassword}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ps" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ps</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCDefaultType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCDefaultType</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCEntropy" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCEntropy</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCSLK" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCSLK</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                    <stringProp name="Argument.value">${canary}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                    <stringProp name="Argument.value">${ctx}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                    <stringProp name="Argument.value">${hpgrequestid}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                    <stringProp name="Argument.value">${flowToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PPSX" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">PPSX</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="NewUser" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">NewUser</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="FoundMSAs" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">FoundMSAs</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fspost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fspost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i21" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i21</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CookieDisclosure" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CookieDisclosure</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="IsFidoSupported" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">IsFidoSupported</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="isSignupPost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">isSignupPost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i2</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i17" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i17</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i18" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i18</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">32731</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize?response_type=id_token&amp;scope=${scheme}%3A%2F%2Fmeenakshimuralidharanmindtr.onmicrosoft.com%2Fec9d67a6-4db3-4c2b-9629-829003e10247%2Fuser%20openid%20profile&amp;client_id=7f2d1e8b-4209-482f-b1d9-470c988a3a0a&amp;redirect_uri=${scheme}%3A%2F%2Fui1.prd.dna.informa-labs.com&amp;state=eyJpZCI6ImRkOTc2N2QyLTY4MWMtNGM3Zi04OTY5LTQ2YjkwOWEzZTM3MCIsInRzIjoxNjM0NzIwNTQ0LCJtZXRob2QiOiJyZWRpcmVjdEludGVyYWN0aW9uIn0%3D&amp;nonce=4c1a38ad-64f5-42df-b0c3-ff53167f0e1d&amp;client_info=1&amp;x-client-SKU=MSAL.JS&amp;x-client-Ver=1.4.14&amp;client-request-id=db3e0e67-a0c5-43e8-acb1-41fe59887d30&amp;response_mode=fragment</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="canary" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">canary1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ctx" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ctx1</stringProp>
                <stringProp name="RegexExtractor.regex">ctx%3d(.+?)\\</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="flowToken" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">flowToken1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sFT&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">hpgrequestid1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T001g_Login_kmsi" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">28</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i2</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i17" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i17</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i18" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i18</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">10167</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${canary1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${ctx1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${hpgrequestid1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${flowToken1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/kmsi</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/login</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T001h_Login_authorize_2" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com/auth.html</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login_hint</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="prompt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">prompt</stringProp>
                    <stringProp name="Argument.value">none</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">iframe</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T001i_Login_authorize_3" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login_hint</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">token</stringProp>
                <stringProp name="RegexExtractor.regex">access_token=(.+?)&amp;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1615526678">not_found</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">token</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
                <intProp name="OnError.action">4</intProp>
              </ResultAction>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_Drugs_T002z_DrugsTab" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T002a_Tasks_GetMasterData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Tasks/GetMasterData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T002b_DrugsAdvanceSearch_advancedsearchcategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/DrugsAdvanceSearch/advancedsearchcategory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T002c_UserGroup_GetUsersAndUserGroupByQueueId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[2]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/UserGroup/GetUsersAndUserGroupByQueueId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T002d_Drug_DrugTypes" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Drug/DrugTypes</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T002e_Search" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Search/2/true</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T002f_DrugsAdvanceSearch_advanceSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50,&quot;resultOptions&quot;:{&quot;showColumns&quot;:[]},&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;LastModifiedDate&quot;,&quot;isDescendingOrder&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/DrugsAdvanceSearch/advanceSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T003z_NewPharmaproject Drug" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/MasterData</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Drug name [No Requests]--------------------------------" enabled="true"/>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T004z_CheckPrimaryNameExists" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;PT Drug 01&quot;,&quot;drugType&quot;:[1]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Drug/CheckPrimaryNameExists</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T005z_Save_DrugName" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;key&quot;:null,&quot;names&quot;:[{&quot;id&quot;:-1,&quot;descriptiveName&quot;:&quot;PT Drug User${pUserNo}_${__time(,)}&quot;,&quot;nameType&quot;:{&quot;id&quot;:1,&quot;value&quot;:&quot;INN Name&quot;,&quot;displayValue&quot;:&quot;INN Name&quot;},&quot;isPrimary&quot;:true,&quot;isChildCopy&quot;:false}],&quot;ingestedContentResults&quot;:[],&quot;forceToFieldUpdate&quot;:2,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;},&quot;ingestedId&quot;:0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/0</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="cDrugKey1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">cDrugKey1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.key</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">cDrugKey1_NOT_FOUND</stringProp>
            <stringProp name="TestPlan.comments">original value: 203111</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="cDrugId1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">cDrugId1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">cDrugId1_NOT_FOUND</stringProp>
            <stringProp name="TestPlan.comments">Original value: 193709</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="920845836">cDrugKey1_NOT_FOUND</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">20</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">cDrugKey1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1053338218">cDrugId1_NOT_FOUND</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">20</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">cDrugId1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
            <intProp name="OnError.action">4</intProp>
          </ResultAction>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T006z_DrugSummaryTab" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drugGlobalStatus</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T007z_Save_DrugSummary" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;key&quot;:${cDrugKey1},&quot;summary&quot;:{&quot;drugSummary&quot;:&quot;PT Drug 01&quot;,&quot;globalStatus&quot;:{&quot;id&quot;:6,&quot;status&quot;:&quot;Phase I Clinical Trial&quot;,&quot;statusGroupId&quot;:1,&quot;indicationRanking&quot;:2,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:41:32.257&quot;,&quot;modifiedDate&quot;:&quot;2021-09-28T13:37:49.834533&quot;,&quot;displayValue&quot;:&quot;Phase I Clinical Trial&quot;},&quot;devStatus&quot;:{&quot;id&quot;:1,&quot;value&quot;:&quot;Active&quot;,&quot;displayValue&quot;:&quot;Active&quot;},&quot;createdBy&quot;:&quot;Mahto, Anuranjan&quot;,&quot;modifiedBy&quot;:&quot;Mahto, Anuranjan&quot;,&quot;createdDate&quot;:&quot;2021-10-14T10:16:32.074485&quot;,&quot;modifiedDate&quot;:&quot;2021-10-14T10:16:32.074486&quot;,&quot;latestChangeDate&quot;:null,&quot;latestChangeText&quot;:&quot;Latest change text 1&quot;,&quot;masterDrug&quot;:null,&quot;latestChangeModifiedBy&quot;:null,&quot;lastFullReviewBy&quot;:null,&quot;latestChangeDatePublishOnFos&quot;:true,&quot;nextReviewDate&quot;:&quot;Fri Oct 14 2022&quot;,&quot;lastFullReviewDate&quot;:null},&quot;ingestedContentResults&quot;:[],&quot;forceToFieldUpdate&quot;:1,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;,&quot;displayValue&quot;:&quot;Pharmaprojects Drug&quot;},&quot;ingestedId&quot;:0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/${cDrugId1}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T008z_DrugProgramLandscapeStatusTab" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drugGlobalStatus</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T009z_Country_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;india&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Country/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T010z_Indication_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;lung&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Indication/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T011z_Company_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;Beijing&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Company/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_Drugs_T012z_Save_DrugProgramLandscapeStatus" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T012a_api_drug_id" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;key&quot;:${cDrugKey1},&quot;landscapeStatuses&quot;:[{&quot;id&quot;:-1,&quot;disease&quot;:{&quot;id&quot;:57,&quot;indication&quot;:&quot;Acidosis&quot;,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T14:17:59.86&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-25T14:17:59.86&quot;,&quot;indicationSynonymModel&quot;:[],&quot;indicationGroup&quot;:[],&quot;eventDiseaseId&quot;:0,&quot;displayValue&quot;:&quot;Acidosis&quot;},&quot;company&quot;:{&quot;id&quot;:83,&quot;name&quot;:&quot;Biotest&quot;,&quot;companyType&quot;:{&quot;id&quot;:1,&quot;value&quot;:&quot;Public&quot;},&quot;researchFocus&quot;:null,&quot;summary&quot;:null,&quot;tier&quot;:null,&quot;parentCompany&quot;:null,&quot;companyStatus&quot;:{&quot;id&quot;:1,&quot;value&quot;:&quot;Active&quot;},&quot;createdBy&quot;:&quot;migrated&quot;,&quot;establishedYear&quot;:1946,&quot;city&quot;:&quot;Dreieich&quot;,&quot;state&quot;:null,&quot;country&quot;:{&quot;id&quot;:21,&quot;value&quot;:&quot;Belgium&quot;},&quot;postalCode&quot;:&quot;D-63303&quot;,&quot;websites&quot;:[&quot;http://www.biotest.de&quot;],&quot;displayValue&quot;:&quot;Biotest&quot;,&quot;relatedCompanyType&quot;:null},&quot;companyType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Licensee&quot;,&quot;displayValue&quot;:&quot;Licensee&quot;},&quot;year&quot;:0,&quot;country&quot;:{&quot;id&quot;:26,&quot;countryKey&quot;:&quot;IND&quot;,&quot;countryName&quot;:&quot;India&quot;,&quot;isoCode&quot;:&quot;IND&quot;,&quot;isoNumber&quot;:356,&quot;isoCode2&quot;:&quot;IN&quot;,&quot;notes&quot;:null,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-07-16T15:48:20.453&quot;,&quot;modifiedBy&quot;:&quot;QA USER&quot;,&quot;modifiedDate&quot;:&quot;2021-09-09T11:01:16.414913&quot;,&quot;countryGroup&quot;:[],&quot;eventCountryId&quot;:0,&quot;displayValue&quot;:&quot;India&quot;},&quot;highestDevStatus&quot;:{&quot;id&quot;:6,&quot;status&quot;:&quot;Phase I Clinical Trial&quot;,&quot;statusGroupId&quot;:1,&quot;indicationRanking&quot;:2,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:41:32.257&quot;,&quot;modifiedDate&quot;:&quot;2021-09-28T13:37:49.834533&quot;,&quot;displayValue&quot;:&quot;Phase I Clinical Trial&quot;},&quot;currentDevStatus&quot;:{&quot;id&quot;:6,&quot;status&quot;:&quot;Phase I Clinical Trial&quot;,&quot;statusGroupId&quot;:1,&quot;indicationRanking&quot;:2,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:41:32.257&quot;,&quot;modifiedDate&quot;:&quot;2021-09-28T13:37:49.834533&quot;,&quot;displayValue&quot;:&quot;Phase I Clinical Trial&quot;}}],&quot;deletedLandscapeStatuses&quot;:[],&quot;ingestedContentResults&quot;:[],&quot;forceToFieldUpdate&quot;:7,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;,&quot;displayValue&quot;:&quot;Pharmaprojects Drug&quot;},&quot;ingestedId&quot;:0}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/drug/${cDrugId1}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T012b_drug_programlandscape" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;drugId&quot;:${cDrugId1},&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/drug/programlandscape</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_Drugs_T013z_ActivityTab" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T013a_deliveryMedium" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/deliveryMedium</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T013b_deliveryTechnology" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/deliveryTechnology</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T013c_deliveryRoute" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/deliveryRoute</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T013d_pharmacokineticsParameter" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/pharmacokineticsParameter</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T013e_drugGlobalStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/drugGlobalStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T013f_pharmacokineticsUnit" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/pharmacokineticsUnit</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T014z_MechanismOfAction_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;Lipoxygenase&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/MechanismOfAction/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T015z_Target_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;hydroxytryptamine&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Target/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T016z_TargetFamily_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;Histamine&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/TargetFamily/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T017z_TherapeuticClass_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/TherapeuticClass/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T018z_Save_ActivityTab" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;key&quot;:${cDrugKey1},&quot;activity&quot;:{&quot;mechanismOfActions&quot;:[{&quot;mechanismOfAction&quot;:{&quot;id&quot;:2226,&quot;phact&quot;:&quot;OX-&quot;,&quot;description&quot;:&quot;Oxygenase inhibitor&quot;,&quot;fullcode&quot;:&quot;E-OR-OX-AN&quot;,&quot;parentid&quot;:null,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T09:37:43.81&quot;,&quot;modifiedBy&quot;:&quot;QA USER&quot;,&quot;modifiedDate&quot;:&quot;2021-08-26T08:27:47.87518&quot;,&quot;level&quot;:0,&quot;isLast&quot;:false,&quot;parent&quot;:null,&quot;mechanismSynonym&quot;:[],&quot;displayValue&quot;:&quot;Oxygenase inhibitor&quot;,&quot;hasChild&quot;:true,&quot;rootParentId&quot;:{&quot;id&quot;:2226,&quot;phact&quot;:&quot;OX-&quot;,&quot;description&quot;:&quot;Oxygenase inhibitor&quot;,&quot;fullcode&quot;:&quot;E-OR-OX-AN&quot;,&quot;parentid&quot;:null,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T09:37:43.81&quot;,&quot;modifiedBy&quot;:&quot;QA USER&quot;,&quot;modifiedDate&quot;:&quot;2021-08-26T08:27:47.87518&quot;,&quot;level&quot;:0,&quot;isLast&quot;:false,&quot;parent&quot;:null,&quot;mechanismSynonym&quot;:[],&quot;displayValue&quot;:&quot;Oxygenase inhibitor&quot;},&quot;isMasterCopy&quot;:false},&quot;isChildCopy&quot;:false}],&quot;parentMechanismOfActions&quot;:[],&quot;deliveryMediums&quot;:[{&quot;id&quot;:0,&quot;deliveryMedium&quot;:{&quot;id&quot;:6,&quot;description&quot;:&quot;Powder&quot;,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-24T14:31:24.29&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-24T14:31:24.29&quot;,&quot;displayValue&quot;:&quot;Powder&quot;,&quot;isMasterCopy&quot;:false}}],&quot;deliveryRoutes&quot;:[{&quot;id&quot;:0,&quot;deliveryRoute&quot;:{&quot;id&quot;:6,&quot;description&quot;:&quot;Inhaled&quot;,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-24T14:47:31.75&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-24T14:47:31.75&quot;,&quot;displayValue&quot;:&quot;Inhaled&quot;,&quot;isMasterCopy&quot;:false}}],&quot;deliveryTechnologies&quot;:[{&quot;id&quot;:0,&quot;deliveryTechnology&quot;:{&quot;id&quot;:2,&quot;description&quot;:&quot;Extended-release&quot;,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-24T14:40:50.907&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-24T14:40:50.907&quot;,&quot;displayValue&quot;:&quot;Extended-release&quot;,&quot;isMasterCopy&quot;:false}}],&quot;trialTroveDeliveryMediums&quot;:[],&quot;trialTroveDeliveryRoutes&quot;:[],&quot;trialTroveDeliveryTechnologies&quot;:[],&quot;therapeuticClasses&quot;:[{&quot;id&quot;:-1,&quot;therapeuticClass&quot;:{&quot;id&quot;:51,&quot;description&quot;:&quot;Abortifacient&quot;,&quot;code&quot;:&quot;G3D&quot;,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-24T14:07:00.303&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-24T14:07:00.303&quot;,&quot;displayValue&quot;:&quot;Abortifacient&quot;},&quot;therapeuticClassStatus&quot;:{&quot;id&quot;:6,&quot;status&quot;:&quot;Phase I Clinical Trial&quot;,&quot;statusGroupId&quot;:1,&quot;indicationRanking&quot;:2,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:41:32.257&quot;,&quot;modifiedDate&quot;:&quot;2021-09-28T13:37:49.834533&quot;,&quot;displayValue&quot;:&quot;Phase I Clinical Trial&quot;}}],&quot;parentTherapeuticClasses&quot;:[],&quot;biologicalTargets&quot;:[{&quot;target&quot;:{&quot;id&quot;:2289,&quot;target&quot;:&quot;1,3-beta-glucan synthase, Aspergillus fumigatus&quot;,&quot;locusLink&quot;:3508424,&quot;targetFamilyId&quot;:null,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-09-30T15:58:35.574878&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-09-30T15:58:35.574878&quot;,&quot;targetSynonym&quot;:[],&quot;targetFamily&quot;:[],&quot;displayValue&quot;:&quot;1,3-beta-glucan synthase, Aspergillus fumigatus&quot;,&quot;isMasterCopy&quot;:false}}],&quot;manualTargetFamilies&quot;:[{&quot;targetFamily&quot;:{&quot;id&quot;:4,&quot;targetFamily&quot;:&quot;Ion channel&quot;,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T08:51:13.84&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-25T08:51:13.84&quot;,&quot;displayValue&quot;:&quot;Ion channel&quot;,&quot;isMasterCopy&quot;:false}}],&quot;phramacokinetics&quot;:[{&quot;id&quot;:-1,&quot;parameter&quot;:{&quot;id&quot;:1,&quot;parameter&quot;:&quot;AUC&quot;,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T09:06:01.547&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-25T09:06:01.547&quot;},&quot;unit&quot;:{&quot;id&quot;:1,&quot;unit&quot;:&quot;hr&quot;,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-28T08:04:52.437&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-28T08:04:52.437&quot;},&quot;score&quot;:&quot;1&quot;,&quot;upper&quot;:&quot;1&quot;,&quot;pharmaCoKineticName&quot;:&quot;Test Name&quot;}],&quot;trialTroveDeliveryMediumsFromChild&quot;:[],&quot;trialTroveDeliveryRoutesFromChild&quot;:[],&quot;trialTroveDeliveryTechnologiesFromChild&quot;:[],&quot;automaticTargetFamilies&quot;:[]},&quot;ingestedContentResults&quot;:[],&quot;forceToFieldUpdate&quot;:8,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;,&quot;displayValue&quot;:&quot;Pharmaprojects Drug&quot;},&quot;ingestedId&quot;:0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/${cDrugId1}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_Drugs_T019z_DrugLicensingAvailabilityTab" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T019a_CountryGroup" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/CountryGroup</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T019b_Country" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Country</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T020z_Save_DrugLicensingAvailability" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;key&quot;:${cDrugKey1},&quot;licensingAvailability&quot;:{&quot;id&quot;:0,&quot;licenses&quot;:[{&quot;statusId&quot;:1,&quot;country&quot;:{&quot;id&quot;:26,&quot;countryKey&quot;:&quot;IND&quot;,&quot;countryName&quot;:&quot;India&quot;,&quot;isoCode&quot;:&quot;IND&quot;,&quot;isoNumber&quot;:356,&quot;isoCode2&quot;:&quot;IN&quot;,&quot;notes&quot;:null,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-07-16T15:48:20.453&quot;,&quot;modifiedBy&quot;:&quot;QA USER&quot;,&quot;modifiedDate&quot;:&quot;2021-09-09T11:01:16.414913&quot;,&quot;countryGroup&quot;:[{&quot;id&quot;:10,&quot;name&quot;:&quot;Asia&quot;,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-07-16T15:53:51.12&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-07-16T15:53:51.12&quot;,&quot;displayValue&quot;:&quot;Asia&quot;},{&quot;id&quot;:16,&quot;name&quot;:&quot;Asia,India&quot;,&quot;createdBy&quot;:&quot;QA USER&quot;,&quot;createdDate&quot;:&quot;2021-09-08T09:48:09.374769&quot;,&quot;modifiedBy&quot;:&quot;QA USER&quot;,&quot;modifiedDate&quot;:&quot;2021-09-08T09:48:09.374769&quot;,&quot;displayValue&quot;:&quot;Asia,India&quot;}],&quot;eventCountryId&quot;:0,&quot;displayValue&quot;:&quot;India&quot;}}],&quot;agreement&quot;:&quot;&quot;,&quot;availability&quot;:&quot;&quot;},&quot;ingestedContentResults&quot;:[],&quot;forceToFieldUpdate&quot;:3,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;,&quot;displayValue&quot;:&quot;Pharmaprojects Drug&quot;},&quot;ingestedId&quot;:0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/${cDrugId1}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_Drugs_T021z_EventsTab" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T021a_CountryGroup" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/CountryGroup</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T021b_drug_programlandscapedisease" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/drug/programlandscapedisease/${cDrugId1}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T021c_eventTypes" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/eventTypes</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T021d_drug_programlandscapecoutries" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/drug/programlandscapecoutries/193709</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T021e_drug_programlandscapecompany" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/drug/programlandscapecompany/${cDrugId1}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T021f_Country" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Country</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T022z_Save_Events" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;key&quot;:${cDrugKey1},&quot;events&quot;:[{&quot;type&quot;:{&quot;id&quot;:2,&quot;description&quot;:&quot;First Approval&quot;,&quot;hcode&quot;:100,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T08:13:23.95&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-25T08:13:23.95&quot;},&quot;eventdate&quot;:&quot;Sep-22-2021&quot;,&quot;devStatus&quot;:{&quot;id&quot;:6,&quot;status&quot;:&quot;Phase I Clinical Trial&quot;,&quot;statusGroupId&quot;:1,&quot;indicationRanking&quot;:2,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:41:32.257&quot;,&quot;modifiedDate&quot;:&quot;2021-09-28T13:37:49.834533&quot;,&quot;displayValue&quot;:&quot;Phase I Clinical Trial&quot;},&quot;url&quot;:&quot;www.testurl.com&quot;,&quot;eventStatus&quot;:{&quot;id&quot;:3,&quot;value&quot;:&quot;Unknown&quot;},&quot;description&quot;:&quot;Test Event Description&quot;,&quot;country&quot;:[{&quot;label&quot;:&quot;India&quot;,&quot;checked&quot;:true,&quot;id&quot;:26,&quot;countryKey&quot;:&quot;IND&quot;,&quot;countryName&quot;:&quot;India&quot;,&quot;isoCode&quot;:&quot;IND&quot;,&quot;isoNumber&quot;:356,&quot;isoCode2&quot;:&quot;IN&quot;,&quot;notes&quot;:null,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-07-16T15:48:20.453&quot;,&quot;modifiedBy&quot;:&quot;QA USER&quot;,&quot;modifiedDate&quot;:&quot;2021-09-09T11:01:16.414913&quot;,&quot;countryGroup&quot;:[{&quot;id&quot;:10,&quot;name&quot;:&quot;Asia&quot;,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-07-16T15:53:51.12&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-07-16T15:53:51.12&quot;,&quot;displayValue&quot;:&quot;Asia&quot;},{&quot;id&quot;:16,&quot;name&quot;:&quot;Asia,India&quot;,&quot;createdBy&quot;:&quot;QA USER&quot;,&quot;createdDate&quot;:&quot;2021-09-08T09:48:09.374769&quot;,&quot;modifiedBy&quot;:&quot;QA USER&quot;,&quot;modifiedDate&quot;:&quot;2021-09-08T09:48:09.374769&quot;,&quot;displayValue&quot;:&quot;Asia,India&quot;}],&quot;eventCountryId&quot;:0,&quot;displayValue&quot;:&quot;India&quot;}],&quot;company&quot;:[{&quot;id&quot;:83,&quot;name&quot;:&quot;Biotest&quot;,&quot;companyType&quot;:{&quot;id&quot;:1,&quot;value&quot;:&quot;Public&quot;,&quot;displayValue&quot;:&quot;Public&quot;},&quot;researchFocus&quot;:null,&quot;summary&quot;:null,&quot;parentCompany&quot;:null,&quot;companyStatus&quot;:null,&quot;eventCompanyId&quot;:0,&quot;displayValue&quot;:&quot;Biotest&quot;,&quot;label&quot;:&quot;Biotest&quot;,&quot;value&quot;:83,&quot;isSelected&quot;:true}],&quot;publishOnFos&quot;:false,&quot;disease&quot;:[{&quot;id&quot;:57,&quot;indication&quot;:&quot;Acidosis&quot;,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T14:17:59.86&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-25T14:17:59.86&quot;,&quot;indicationSynonymModel&quot;:[],&quot;indicationGroup&quot;:[],&quot;eventDiseaseId&quot;:0,&quot;displayValue&quot;:&quot;Acidosis&quot;,&quot;label&quot;:&quot;Acidosis&quot;,&quot;value&quot;:57,&quot;isSelected&quot;:true}],&quot;eventEditDate&quot;:&quot;Oct-14-2021&quot;,&quot;id&quot;:-1}],&quot;ingestedContentResults&quot;:[],&quot;forceToFieldUpdate&quot;:5,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;,&quot;displayValue&quot;:&quot;Pharmaprojects Drug&quot;},&quot;ingestedId&quot;:0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/${cDrugId1}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_Drugs_T023z_ChemicalDataTab" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T023a_OriginOfMaterial" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/OriginOfMaterial</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T023b_Country" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Country</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T024z_Save_ChemicalData" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;key&quot;:${cDrugKey1},&quot;chemStructure&quot;:{&quot;id&quot;:0,&quot;origin&quot;:{&quot;code&quot;:&quot;NP-P&quot;,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:34:18.19&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-25T11:34:18.19&quot;,&quot;displayValue&quot;:&quot;Natural product, plant&quot;,&quot;id&quot;:3,&quot;description&quot;:&quot;Natural product, plant&quot;},&quot;nce&quot;:false,&quot;nbe&quot;:false,&quot;casRegistrys&quot;:[]},&quot;forceToFieldUpdate&quot;:6,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;,&quot;displayValue&quot;:&quot;Pharmaprojects Drug&quot;},&quot;ingestedContentResults&quot;:[],&quot;ingestedId&quot;:0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/${cDrugId1}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Marketing [No Requests]--------------------------------" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T025z_Save_Marketing" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;marketing&quot;:{&quot;id&quot;:0,&quot;approvals&quot;:&quot;&quot;,&quot;fillings&quot;:&quot;&quot;,&quot;orphanDrugStatus&quot;:&quot;&quot;,&quot;expeditedReview&quot;:&quot;&quot;,&quot;warnings&quot;:&quot;test&quot;},&quot;forceToFieldUpdate&quot;:20,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;},&quot;ingestedContentResults&quot;:[],&quot;ingestedId&quot;:0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/${cDrugId1}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Phases [No Requests]--------------------------------" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T026z_Save_Phases" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;phases&quot;:{&quot;id&quot;:0,&quot;inVivo&quot;:&quot;&quot;,&quot;inVitro&quot;:&quot;&quot;,&quot;patents&quot;:&quot;test&quot;,&quot;phaseI&quot;:&quot;&quot;,&quot;phaseII&quot;:&quot;&quot;,&quot;phaseIII&quot;:&quot;&quot;},&quot;forceToFieldUpdate&quot;:22,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;},&quot;ingestedContentResults&quot;:[],&quot;ingestedId&quot;:0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/${cDrugId1}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="URLs [No Requests]--------------------------------" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T027z_Save_URLs" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;key&quot;:${cDrugKey1},&quot;supportingUrls&quot;:[{&quot;url&quot;:&quot;www.testurl.com&quot;,&quot;publishOnFos&quot;:true,&quot;status&quot;:{&quot;id&quot;:1,&quot;value&quot;:&quot;Active&quot;},&quot;id&quot;:-1}],&quot;ingestedContentResults&quot;:[],&quot;forceToFieldUpdate&quot;:11,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;,&quot;displayValue&quot;:&quot;Pharmaprojects Drug&quot;},&quot;ingestedId&quot;:0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/${cDrugId1}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T028z_NotesTab" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/NotesType</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T029z_Save_Notes" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;key&quot;:${cDrugKey1},&quot;notes&quot;:[{&quot;type&quot;:{&quot;id&quot;:1,&quot;description&quot;:&quot;Drug Notes&quot;},&quot;date&quot;:&quot;2021-10-14T10:15:16.108Z&quot;,&quot;header&quot;:&quot;Test Header&quot;,&quot;url&quot;:&quot;www.testurl.com&quot;,&quot;publishOnFos&quot;:false,&quot;text&quot;:&quot;Test&quot;,&quot;id&quot;:-1}],&quot;ingestedContentResults&quot;:[],&quot;forceToFieldUpdate&quot;:4,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;,&quot;displayValue&quot;:&quot;Pharmaprojects Drug&quot;},&quot;ingestedId&quot;:0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/${cDrugId1}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T030z_Associations_AssociatedTrials" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:50,&quot;pageIndex&quot;:1,&quot;entityPrimaryKey&quot;:${cDrugId1}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial/DrugAssociation/associationSearchRequestModel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T031z_Associations_AssociatedDrugs" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;typeId&quot;:2,&quot;pageSize&quot;:50,&quot;pageIndex&quot;:1,&quot;entityPrimaryKey&quot;:${cDrugKey1}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Drug/associations</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_Drugs_T032z_AuditTrial" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T032a_Drug_AuditTrialHistory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Drug/AuditTrialHistory/${cDrugId1}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T032b_AuditEntry_SearchAuditEntry" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;rowCount&quot;:0,&quot;pageSize&quot;:100,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;EntityPrimaryKey&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:${cDrugId1},&quot;condition&quot;:0}],&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;All&quot;,&quot;isDescendingOrder&quot;:false}],&quot;resultOptions&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/AuditEntry/SearchAuditEntry</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T033z_Publish" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;key&quot;:${cDrugKey1},&quot;productionStatusId&quot;:1,&quot;forceToFieldUpdate&quot;:12,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;,&quot;displayValue&quot;:&quot;Pharmaprojects Drug&quot;},&quot;previousProductionStatus&quot;:6}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/${cDrugId1}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-10-23T11:04:02.957</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">drugs.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">^\^Chromium^\^;v=^\^94^\^, ^\^Google</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Imwzc1EtNTBjQ0g0eEJWWkxIVEd3blNSNzY4MCIsImtpZCI6Imwzc1EtNTBjQ0g0eEJWWkxIVEd3blNSNzY4MCJ9.eyJhdWQiOiJodHRwczovL21lZW5ha3NoaW11cmFsaWRoYXJhbm1pbmR0ci5vbm1pY3Jvc29mdC5jb20vZWM5ZDY3YTYtNGRiMy00YzJiLTk2MjktODI5MDAzZTEwMjQ3IiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvZDYyMjY0NTQtOTVkZS00OWU1LWE3MjUtYWEwNzhlMTI4MDgwLyIsImlhdCI6MTYzNDk2NjY2NiwibmJmIjoxNjM0OTY2NjY2LCJleHAiOjE2MzQ5NzEwMjAsImFjciI6IjEiLCJhaW8iOiJBVFFBeS84VEFBQUFFRVhaV2dBR21aU2lXNjAzaGxqVnV5U3ZJekhjblJhN1IyQzU2VnBKV25paU1PNXpZV3lYUWJ1TkhpL2VSejVwIiwiYW1yIjpbInB3ZCJdLCJhcHBpZCI6IjdmMmQxZThiLTQyMDktNDgyZi1iMWQ5LTQ3MGM5ODhhM2EwYSIsImFwcGlkYWNyIjoiMCIsImdpdmVuX25hbWUiOiJwZXJmMSIsImlwYWRkciI6IjQyLjExMC4xMzEuNzMiLCJuYW1lIjoicGVyZjEiLCJvaWQiOiJlMmJjYTMzZi0xMjI0LTQwM2QtODcwNS01YmEwMjMwYWFkYmMiLCJyaCI6IjAuQVZNQVZHUWkxdDZWNVVtbkphb0hqaEtBZ0lzZUxYOEpRaTlJc2RsSERKaUtPZ3BUQU1rLiIsInNjcCI6InVzZXIiLCJzdWIiOiJLUDZTSGtZeDkybTNWdi13bG1NWHVhanZ3cHlhVDFkMF9Eb1ByRWR5S05nIiwidGlkIjoiZDYyMjY0NTQtOTVkZS00OWU1LWE3MjUtYWEwNzhlMTI4MDgwIiwidW5pcXVlX25hbWUiOiJwZXJmMUBtZWVuYWtzaGltdXJhbGlkaGFyYW5taW5kdHIub25taWNyb3NvZnQuY29tIiwidXBuIjoicGVyZjFAbWVlbmFrc2hpbXVyYWxpZGhhcmFubWluZHRyLm9ubWljcm9zb2Z0LmNvbSIsInV0aSI6Im92aXVYUVE2ckVPRnZiZzVrWjhKQUEiLCJ2ZXIiOiIxLjAifQ.lGmfzaOnz8zT778FFReJokGBmuMp2-uRsTzniu77CSteWiCuj1GrPChKRqfn6POT1-rQ9Z0P6LvEnq7JRFjt9u3w4xFBecFCKe8nGLGsoY-oH5vTtB5-ofy4wcgAsKdA8mHe9kkUR3wgAdeiDYkLqz5o6J30YOZiBey4eXmKFPHkgxUkn2HhvmpO3Ud1LJAvVRl_Xb6OYN1Aj-Rpb7CO2clvTV6Nt4p4WYVw4_f5n2UqF_Q7k_z86pokD4VNQcGDyMiDrMP-wp7sla6H97y-CMGPyQI3BjqLPlR7HUbGtSzWa-FaGMiw4nJrqLQL6fIL51u7fzLyZPgHR8liYiCvHQ</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.81 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">^\^Windows^\^</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-10-23T11:04:02.957</stringProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_Drugs_T034z_DrugsLandingPage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T034a_Drug_DrugTypes" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Drug/DrugTypes</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T034b_DrugsAdvanceSearch_advancedsearchcategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/DrugsAdvanceSearch/advancedsearchcategory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T034c_Search" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Search/2/true</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T034d_Tasks_GetMasterData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Tasks/GetMasterData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T034e_UserGroup_GetUsersAndUserGroupByQueueId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[2]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/UserGroup/GetUsersAndUserGroupByQueueId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T034f_Drug_unlockdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Drug/unlockdata/${cDrugId1}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T034g_DrugsAdvanceSearch_advanceSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50,&quot;resultOptions&quot;:{&quot;showColumns&quot;:[]},&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;LastModifiedDate&quot;,&quot;isDescendingOrder&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/DrugsAdvanceSearch/advanceSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_Drugs_T035z_Click_Edit_Icon_of_AnyDrug" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T035a_drugs_id" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/drugs/${cDrugId1}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/drugs</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T035b_authorization_user" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/authorization/user</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T035c_Drug_lockdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Drug/lockdata/${cDrugId1}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T035d_drug_MasterData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/drug/MasterData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T035e_api_drug_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/drug/${cDrugId1}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T036z_Add_Note&amp;Save" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;key&quot;:${cDrugKey1},&quot;notes&quot;:[{&quot;type&quot;:{&quot;id&quot;:1,&quot;description&quot;:&quot;Drug Notes&quot;},&quot;date&quot;:&quot;2021-10-14T10:33:46.129Z&quot;,&quot;header&quot;:&quot;Test Header&quot;,&quot;url&quot;:&quot;www.testurl.com&quot;,&quot;publishOnFos&quot;:false,&quot;text&quot;:&quot;test&quot;,&quot;id&quot;:-1}],&quot;ingestedContentResults&quot;:[],&quot;forceToFieldUpdate&quot;:4,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;,&quot;displayValue&quot;:&quot;Pharmaprojects Drug&quot;},&quot;ingestedId&quot;:0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/${cDrugId1}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_Drugs_T037z_DrugsLandingPage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T037a_Tasks_GetMasterData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Tasks/GetMasterData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T037b_Search" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Search/2/true</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T037c_UserGroup_GetUsersAndUserGroupByQueueId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[2]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/UserGroup/GetUsersAndUserGroupByQueueId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T037d_Drug_DrugTypes" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Drug/DrugTypes</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T037e_Drug_unlockdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Drug/unlockdata/${cDrugId1}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T037f_DrugsAdvanceSearch_advancedsearchcategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/DrugsAdvanceSearch/advancedsearchcategory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T037g_DrugsAdvanceSearch_advanceSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50,&quot;resultOptions&quot;:{&quot;showColumns&quot;:[]},&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;LastModifiedDate&quot;,&quot;isDescendingOrder&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/DrugsAdvanceSearch/advanceSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T038z_NewPharmaproject Drug" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/MasterData</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Drug Name[No Requests]--------------------------------" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T039z_CheckPrimaryNameExists" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;PT Drug 02&quot;,&quot;drugType&quot;:[1]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Drug/CheckPrimaryNameExists</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T040z_Save_DrugName" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;key&quot;:null,&quot;names&quot;:[{&quot;id&quot;:-1,&quot;descriptiveName&quot;:&quot;PT Drug User${pUserNo}_${__time(,)}&quot;,&quot;nameType&quot;:{&quot;id&quot;:1,&quot;value&quot;:&quot;INN Name&quot;,&quot;displayValue&quot;:&quot;INN Name&quot;},&quot;isPrimary&quot;:true,&quot;isChildCopy&quot;:false}],&quot;ingestedContentResults&quot;:[],&quot;forceToFieldUpdate&quot;:2,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;},&quot;ingestedId&quot;:0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/0</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="cDrugKey2" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">cDrugKey2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.key</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">cDrugKey2_NOT_FOUND</stringProp>
            <stringProp name="TestPlan.comments">original value: 203111</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="cDrugId2" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">cDrugId2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">cDrugId2_NOT_FOUND</stringProp>
            <stringProp name="TestPlan.comments">Original value: 193709</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-876105523">cDrugKey2_NOT_FOUND</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">20</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">cDrugKey2</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-743613141">cDrugId2_NOT_FOUND</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">20</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">cDrugId2</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
            <intProp name="OnError.action">4</intProp>
          </ResultAction>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T041z_DrugSummaryTab" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drugGlobalStatus</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T042z_Save_DrugSummary" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;key&quot;:${cDrugKey2},&quot;summary&quot;:{&quot;drugSummary&quot;:&quot;PT Drug 02&quot;,&quot;globalStatus&quot;:{&quot;id&quot;:6,&quot;status&quot;:&quot;Phase I Clinical Trial&quot;,&quot;statusGroupId&quot;:1,&quot;indicationRanking&quot;:2,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:41:32.257&quot;,&quot;modifiedDate&quot;:&quot;2021-09-28T13:37:49.834533&quot;,&quot;displayValue&quot;:&quot;Phase I Clinical Trial&quot;},&quot;devStatus&quot;:{&quot;id&quot;:1,&quot;value&quot;:&quot;Active&quot;,&quot;displayValue&quot;:&quot;Active&quot;},&quot;createdBy&quot;:&quot;Mahto, Anuranjan&quot;,&quot;modifiedBy&quot;:&quot;Mahto, Anuranjan&quot;,&quot;createdDate&quot;:&quot;2021-10-14T10:35:40.017043&quot;,&quot;modifiedDate&quot;:&quot;2021-10-14T10:35:40.017044&quot;,&quot;latestChangeDate&quot;:null,&quot;latestChangeText&quot;:&quot;test change text&quot;,&quot;masterDrug&quot;:null,&quot;latestChangeModifiedBy&quot;:null,&quot;lastFullReviewBy&quot;:null,&quot;latestChangeDatePublishOnFos&quot;:true,&quot;nextReviewDate&quot;:&quot;Fri Oct 14 2022&quot;,&quot;lastFullReviewDate&quot;:null},&quot;ingestedContentResults&quot;:[],&quot;forceToFieldUpdate&quot;:1,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;,&quot;displayValue&quot;:&quot;Pharmaprojects Drug&quot;},&quot;ingestedId&quot;:0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/${cDrugId2}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T043z_DrugProgramLandscapeStatusTab" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drugGlobalStatus</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T044z_drug_programlandscape" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;drugId&quot;:${cDrugId2},&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/programlandscape</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T045z_Indication_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;lung&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Indication/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T046z_Company_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;Beijing&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Company/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T047z_Country_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;india&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Country/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T048z_Save_DrugProgramLandscapeStatus" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;key&quot;:${cDrugKey2},&quot;landscapeStatuses&quot;:[{&quot;id&quot;:-1,&quot;disease&quot;:{&quot;id&quot;:1497,&quot;indication&quot;:&quot;Achalasia&quot;,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T14:17:59.86&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-25T14:17:59.86&quot;,&quot;indicationSynonymModel&quot;:[],&quot;indicationGroup&quot;:[],&quot;eventDiseaseId&quot;:0,&quot;displayValue&quot;:&quot;Achalasia&quot;},&quot;company&quot;:{&quot;id&quot;:11114,&quot;name&quot;:&quot;2A Pharma&quot;,&quot;companyType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Private&quot;},&quot;researchFocus&quot;:null,&quot;summary&quot;:null,&quot;tier&quot;:null,&quot;parentCompany&quot;:null,&quot;companyStatus&quot;:{&quot;id&quot;:1,&quot;value&quot;:&quot;Active&quot;},&quot;createdBy&quot;:&quot;migrated&quot;,&quot;establishedYear&quot;:2016,&quot;city&quot;:&quot;Malmö&quot;,&quot;state&quot;:null,&quot;country&quot;:{&quot;id&quot;:51,&quot;value&quot;:&quot;Costa Rica&quot;},&quot;postalCode&quot;:&quot;211 34&quot;,&quot;websites&quot;:[&quot;http://2apharma.com/&quot;],&quot;displayValue&quot;:&quot;2A Pharma&quot;,&quot;relatedCompanyType&quot;:null},&quot;companyType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Licensee&quot;,&quot;displayValue&quot;:&quot;Licensee&quot;},&quot;year&quot;:0,&quot;country&quot;:{&quot;id&quot;:26,&quot;countryKey&quot;:&quot;IND&quot;,&quot;countryName&quot;:&quot;India&quot;,&quot;isoCode&quot;:&quot;IND&quot;,&quot;isoNumber&quot;:356,&quot;isoCode2&quot;:&quot;IN&quot;,&quot;notes&quot;:null,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-07-16T15:48:20.453&quot;,&quot;modifiedBy&quot;:&quot;QA USER&quot;,&quot;modifiedDate&quot;:&quot;2021-09-09T11:01:16.414913&quot;,&quot;countryGroup&quot;:[],&quot;eventCountryId&quot;:0,&quot;displayValue&quot;:&quot;India&quot;},&quot;highestDevStatus&quot;:{&quot;id&quot;:6,&quot;status&quot;:&quot;Phase I Clinical Trial&quot;,&quot;statusGroupId&quot;:1,&quot;indicationRanking&quot;:2,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:41:32.257&quot;,&quot;modifiedDate&quot;:&quot;2021-09-28T13:37:49.834533&quot;,&quot;displayValue&quot;:&quot;Phase I Clinical Trial&quot;},&quot;currentDevStatus&quot;:{&quot;id&quot;:6,&quot;status&quot;:&quot;Phase I Clinical Trial&quot;,&quot;statusGroupId&quot;:1,&quot;indicationRanking&quot;:2,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:41:32.257&quot;,&quot;modifiedDate&quot;:&quot;2021-09-28T13:37:49.834533&quot;,&quot;displayValue&quot;:&quot;Phase I Clinical Trial&quot;}}],&quot;deletedLandscapeStatuses&quot;:[],&quot;ingestedContentResults&quot;:[],&quot;forceToFieldUpdate&quot;:7,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;,&quot;displayValue&quot;:&quot;Pharmaprojects Drug&quot;},&quot;ingestedId&quot;:0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/${cDrugId2}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_Drugs_T049z_ActivityTab" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T049a_deliveryRoute" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/deliveryRoute</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T049b_deliveryMedium" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/deliveryMedium</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T049c_drugGlobalStatus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/drugGlobalStatus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T049d_pharmacokineticsParameter" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/pharmacokineticsParameter</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T049e_deliveryTechnology" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/deliveryTechnology</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T049f_pharmacokineticsUnit" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/pharmacokineticsUnit</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T050z_MechanismOfAction_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;Lipoxygenase&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/MechanismOfAction/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T051z_Target_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;hydroxytryptamine&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Target/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T052z_TherapeuticClass_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/TherapeuticClass/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T053z_Save_Activity" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;key&quot;:${cDrugKey2},&quot;activity&quot;:{&quot;mechanismOfActions&quot;:[{&quot;mechanismOfAction&quot;:{&quot;id&quot;:2226,&quot;phact&quot;:&quot;OX-&quot;,&quot;description&quot;:&quot;Oxygenase inhibitor&quot;,&quot;fullcode&quot;:&quot;E-OR-OX-AN&quot;,&quot;parentid&quot;:null,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T09:37:43.81&quot;,&quot;modifiedBy&quot;:&quot;QA USER&quot;,&quot;modifiedDate&quot;:&quot;2021-08-26T08:27:47.87518&quot;,&quot;level&quot;:0,&quot;isLast&quot;:false,&quot;parent&quot;:null,&quot;mechanismSynonym&quot;:[],&quot;displayValue&quot;:&quot;Oxygenase inhibitor&quot;,&quot;hasChild&quot;:true,&quot;rootParentId&quot;:{&quot;id&quot;:2226,&quot;phact&quot;:&quot;OX-&quot;,&quot;description&quot;:&quot;Oxygenase inhibitor&quot;,&quot;fullcode&quot;:&quot;E-OR-OX-AN&quot;,&quot;parentid&quot;:null,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T09:37:43.81&quot;,&quot;modifiedBy&quot;:&quot;QA USER&quot;,&quot;modifiedDate&quot;:&quot;2021-08-26T08:27:47.87518&quot;,&quot;level&quot;:0,&quot;isLast&quot;:false,&quot;parent&quot;:null,&quot;mechanismSynonym&quot;:[],&quot;displayValue&quot;:&quot;Oxygenase inhibitor&quot;},&quot;isMasterCopy&quot;:false},&quot;isChildCopy&quot;:false}],&quot;parentMechanismOfActions&quot;:[],&quot;deliveryMediums&quot;:[],&quot;deliveryRoutes&quot;:[{&quot;id&quot;:0,&quot;deliveryRoute&quot;:{&quot;id&quot;:1,&quot;description&quot;:&quot;Oral&quot;,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-24T14:47:31.75&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-24T14:47:31.75&quot;,&quot;displayValue&quot;:&quot;Oral&quot;,&quot;isMasterCopy&quot;:false}}],&quot;deliveryTechnologies&quot;:[],&quot;trialTroveDeliveryMediums&quot;:[],&quot;trialTroveDeliveryRoutes&quot;:[],&quot;trialTroveDeliveryTechnologies&quot;:[],&quot;therapeuticClasses&quot;:[{&quot;id&quot;:-2,&quot;therapeuticClass&quot;:{&quot;id&quot;:53,&quot;description&quot;:&quot;ACTH&quot;,&quot;code&quot;:&quot;H1A&quot;,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-24T14:07:00.303&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-24T14:07:00.303&quot;,&quot;displayValue&quot;:&quot;ACTH&quot;},&quot;therapeuticClassStatus&quot;:{&quot;id&quot;:6,&quot;status&quot;:&quot;Phase I Clinical Trial&quot;,&quot;statusGroupId&quot;:1,&quot;indicationRanking&quot;:2,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:41:32.257&quot;,&quot;modifiedDate&quot;:&quot;2021-09-28T13:37:49.834533&quot;,&quot;displayValue&quot;:&quot;Phase I Clinical Trial&quot;}}],&quot;parentTherapeuticClasses&quot;:[],&quot;biologicalTargets&quot;:[{&quot;target&quot;:{&quot;id&quot;:2289,&quot;target&quot;:&quot;1,3-beta-glucan synthase, Aspergillus fumigatus&quot;,&quot;locusLink&quot;:3508424,&quot;targetFamilyId&quot;:null,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-09-30T15:58:35.574878&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-09-30T15:58:35.574878&quot;,&quot;targetSynonym&quot;:[],&quot;targetFamily&quot;:[],&quot;displayValue&quot;:&quot;1,3-beta-glucan synthase, Aspergillus fumigatus&quot;,&quot;isMasterCopy&quot;:false}}],&quot;manualTargetFamilies&quot;:[],&quot;phramacokinetics&quot;:[],&quot;trialTroveDeliveryMediumsFromChild&quot;:[],&quot;trialTroveDeliveryRoutesFromChild&quot;:[],&quot;trialTroveDeliveryTechnologiesFromChild&quot;:[],&quot;automaticTargetFamilies&quot;:[]},&quot;ingestedContentResults&quot;:[],&quot;forceToFieldUpdate&quot;:8,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;,&quot;displayValue&quot;:&quot;Pharmaprojects Drug&quot;},&quot;ingestedId&quot;:0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/${cDrugId2}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_Drugs_T054z_DrugLicensingAvailabilityTab" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T054a_CountryGroup" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/CountryGroup</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T054b_Country" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Country</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T055z_Save_DrugLicensingAvailability" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;key&quot;:${cDrugKey2},&quot;licensingAvailability&quot;:{&quot;id&quot;:0,&quot;licenses&quot;:[{&quot;statusId&quot;:3,&quot;country&quot;:{&quot;id&quot;:26,&quot;countryKey&quot;:&quot;IND&quot;,&quot;countryName&quot;:&quot;India&quot;,&quot;isoCode&quot;:&quot;IND&quot;,&quot;isoNumber&quot;:356,&quot;isoCode2&quot;:&quot;IN&quot;,&quot;notes&quot;:null,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-07-16T15:48:20.453&quot;,&quot;modifiedBy&quot;:&quot;QA USER&quot;,&quot;modifiedDate&quot;:&quot;2021-09-09T11:01:16.414913&quot;,&quot;countryGroup&quot;:[{&quot;id&quot;:10,&quot;name&quot;:&quot;Asia&quot;,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-07-16T15:53:51.12&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-07-16T15:53:51.12&quot;,&quot;displayValue&quot;:&quot;Asia&quot;},{&quot;id&quot;:16,&quot;name&quot;:&quot;Asia,India&quot;,&quot;createdBy&quot;:&quot;QA USER&quot;,&quot;createdDate&quot;:&quot;2021-09-08T09:48:09.374769&quot;,&quot;modifiedBy&quot;:&quot;QA USER&quot;,&quot;modifiedDate&quot;:&quot;2021-09-08T09:48:09.374769&quot;,&quot;displayValue&quot;:&quot;Asia,India&quot;}],&quot;eventCountryId&quot;:0,&quot;displayValue&quot;:&quot;India&quot;}}],&quot;agreement&quot;:&quot;&quot;,&quot;availability&quot;:&quot;&quot;},&quot;ingestedContentResults&quot;:[],&quot;forceToFieldUpdate&quot;:3,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;,&quot;displayValue&quot;:&quot;Pharmaprojects Drug&quot;},&quot;ingestedId&quot;:0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/${cDrugId2}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_Drugs_T056z_EventsTab" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T056a_CountryGroup" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/CountryGroup</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T056b_eventTypes" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/eventTypes</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T056c_drug_programlandscapecoutries" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/drug/programlandscapecoutries/${cDrugId2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T056d_drug_programlandscapedisease" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/drug/programlandscapedisease/${cDrugId2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T056e_drug_programlandscapecompany" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/drug/programlandscapecompany/${cDrugId2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T056f_Country" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Country</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T057z_Save_Events" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;key&quot;:${cDrugKey2},&quot;events&quot;:[{&quot;type&quot;:{&quot;id&quot;:1,&quot;description&quot;:&quot;First Filing&quot;,&quot;hcode&quot;:115,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T08:13:23.95&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-25T08:13:23.95&quot;},&quot;eventdate&quot;:&quot;Sep-30-2021&quot;,&quot;devStatus&quot;:{&quot;id&quot;:6,&quot;status&quot;:&quot;Phase I Clinical Trial&quot;,&quot;statusGroupId&quot;:1,&quot;indicationRanking&quot;:2,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:41:32.257&quot;,&quot;modifiedDate&quot;:&quot;2021-09-28T13:37:49.834533&quot;,&quot;displayValue&quot;:&quot;Phase I Clinical Trial&quot;},&quot;url&quot;:&quot;&quot;,&quot;eventStatus&quot;:{&quot;id&quot;:3,&quot;value&quot;:&quot;Unknown&quot;},&quot;description&quot;:&quot;Test Event Description&quot;,&quot;country&quot;:[{&quot;label&quot;:&quot;India&quot;,&quot;checked&quot;:true,&quot;id&quot;:26,&quot;countryKey&quot;:&quot;IND&quot;,&quot;countryName&quot;:&quot;India&quot;,&quot;isoCode&quot;:&quot;IND&quot;,&quot;isoNumber&quot;:356,&quot;isoCode2&quot;:&quot;IN&quot;,&quot;notes&quot;:null,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-07-16T15:48:20.453&quot;,&quot;modifiedBy&quot;:&quot;QA USER&quot;,&quot;modifiedDate&quot;:&quot;2021-09-09T11:01:16.414913&quot;,&quot;countryGroup&quot;:[{&quot;id&quot;:10,&quot;name&quot;:&quot;Asia&quot;,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-07-16T15:53:51.12&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-07-16T15:53:51.12&quot;,&quot;displayValue&quot;:&quot;Asia&quot;},{&quot;id&quot;:16,&quot;name&quot;:&quot;Asia,India&quot;,&quot;createdBy&quot;:&quot;QA USER&quot;,&quot;createdDate&quot;:&quot;2021-09-08T09:48:09.374769&quot;,&quot;modifiedBy&quot;:&quot;QA USER&quot;,&quot;modifiedDate&quot;:&quot;2021-09-08T09:48:09.374769&quot;,&quot;displayValue&quot;:&quot;Asia,India&quot;}],&quot;eventCountryId&quot;:0,&quot;displayValue&quot;:&quot;India&quot;}],&quot;company&quot;:[{&quot;id&quot;:11114,&quot;name&quot;:&quot;2A Pharma&quot;,&quot;companyType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Private&quot;,&quot;displayValue&quot;:&quot;Private&quot;},&quot;researchFocus&quot;:null,&quot;summary&quot;:null,&quot;parentCompany&quot;:null,&quot;companyStatus&quot;:null,&quot;eventCompanyId&quot;:0,&quot;displayValue&quot;:&quot;2A Pharma&quot;,&quot;label&quot;:&quot;2A Pharma&quot;,&quot;value&quot;:11114,&quot;isSelected&quot;:true}],&quot;publishOnFos&quot;:false,&quot;disease&quot;:[{&quot;id&quot;:1497,&quot;indication&quot;:&quot;Achalasia&quot;,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T14:17:59.86&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-25T14:17:59.86&quot;,&quot;indicationSynonymModel&quot;:[],&quot;indicationGroup&quot;:[],&quot;eventDiseaseId&quot;:0,&quot;displayValue&quot;:&quot;Achalasia&quot;,&quot;label&quot;:&quot;Achalasia&quot;,&quot;value&quot;:1497,&quot;isSelected&quot;:true}],&quot;eventEditDate&quot;:&quot;Oct-14-2021&quot;,&quot;id&quot;:-1}],&quot;ingestedContentResults&quot;:[],&quot;forceToFieldUpdate&quot;:5,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;,&quot;displayValue&quot;:&quot;Pharmaprojects Drug&quot;},&quot;ingestedId&quot;:0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/${cDrugId2}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_Drugs_T058z_ChemicalDataTab" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T058a_OriginOfMaterial" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/OriginOfMaterial</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T058b_Country" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Country</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T059z_OriginOfMaterial" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/OriginOfMaterial</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T060z_Country" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Country</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T061z_Save_ChemicalData" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;key&quot;:${cDrugKey2},&quot;chemStructure&quot;:{&quot;id&quot;:0,&quot;origin&quot;:{&quot;code&quot;:&quot;NP-B&quot;,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-25T11:34:18.19&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-25T11:34:18.19&quot;,&quot;displayValue&quot;:&quot;Natural product, bacterial&quot;,&quot;id&quot;:1,&quot;description&quot;:&quot;Natural product, bacterial&quot;},&quot;nce&quot;:false,&quot;nbe&quot;:false,&quot;casRegistrys&quot;:[]},&quot;forceToFieldUpdate&quot;:6,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;,&quot;displayValue&quot;:&quot;Pharmaprojects Drug&quot;},&quot;ingestedContentResults&quot;:[],&quot;ingestedId&quot;:0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/${cDrugId2}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Marketing [No Mandatory Fields]" enabled="true"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Phases [No Mandatory Fields]" enabled="true"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="URLs [No Mandatory Fields]" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T062z_NotesTab" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/NotesType</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T063z_Save_Notes" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;key&quot;:${cDrugKey2},&quot;notes&quot;:[{&quot;type&quot;:{&quot;id&quot;:1,&quot;description&quot;:&quot;Drug Notes&quot;},&quot;date&quot;:&quot;2021-10-14T10:33:46.129Z&quot;,&quot;header&quot;:&quot;Test header&quot;,&quot;url&quot;:&quot;&quot;,&quot;publishOnFos&quot;:false,&quot;text&quot;:&quot;test&quot;,&quot;id&quot;:-1}],&quot;ingestedContentResults&quot;:[],&quot;forceToFieldUpdate&quot;:4,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;,&quot;displayValue&quot;:&quot;Pharmaprojects Drug&quot;},&quot;ingestedId&quot;:0}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/${cDrugId2}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Associations -Associated Trials  [No Mandatory Fields]" enabled="false"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,907 ClinicalTrial_DrugAssociation_associationSearchRequestModel" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;pageSize&quot;:50,&quot;pageIndex&quot;:1,&quot;entityPrimaryKey&quot;:${cDrugId2}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/ClinicalTrial/DrugAssociation/associationSearchRequestModel</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${token}</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Associations - Associated Drugs  [No Mandatory Fields]" enabled="false"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,909 Drug_associations" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;typeId&quot;:2,&quot;pageSize&quot;:50,&quot;pageIndex&quot;:1,&quot;entityPrimaryKey&quot;:${cDrugKey2}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/Drug/associations</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${token}</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_Drugs_T064z_AuditTrial" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T064a_Drug_AuditTrialHistory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Drug/AuditTrialHistory/${cDrugId2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T064b_AuditEntry_SearchAuditEntry" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;rowCount&quot;:0,&quot;pageSize&quot;:100,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;EntityPrimaryKey&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:${cDrugId2},&quot;condition&quot;:0}],&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;All&quot;,&quot;isDescendingOrder&quot;:false}],&quot;resultOptions&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/AuditEntry/SearchAuditEntry</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_Drugs_T065z_Publish" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;key&quot;:${cDrugKey2},&quot;productionStatusId&quot;:1,&quot;forceToFieldUpdate&quot;:12,&quot;drugType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Pharmaprojects Drug&quot;,&quot;displayValue&quot;:&quot;Pharmaprojects Drug&quot;},&quot;previousProductionStatus&quot;:6}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/${cDrugId2}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-10-23T11:04:02.957</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">drugs.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">^\^Chromium^\^;v=^\^94^\^, ^\^Google</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Imwzc1EtNTBjQ0g0eEJWWkxIVEd3blNSNzY4MCIsImtpZCI6Imwzc1EtNTBjQ0g0eEJWWkxIVEd3blNSNzY4MCJ9.eyJhdWQiOiJodHRwczovL21lZW5ha3NoaW11cmFsaWRoYXJhbm1pbmR0ci5vbm1pY3Jvc29mdC5jb20vZWM5ZDY3YTYtNGRiMy00YzJiLTk2MjktODI5MDAzZTEwMjQ3IiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvZDYyMjY0NTQtOTVkZS00OWU1LWE3MjUtYWEwNzhlMTI4MDgwLyIsImlhdCI6MTYzNDk2NjY2NiwibmJmIjoxNjM0OTY2NjY2LCJleHAiOjE2MzQ5NzEwMjAsImFjciI6IjEiLCJhaW8iOiJBVFFBeS84VEFBQUFFRVhaV2dBR21aU2lXNjAzaGxqVnV5U3ZJekhjblJhN1IyQzU2VnBKV25paU1PNXpZV3lYUWJ1TkhpL2VSejVwIiwiYW1yIjpbInB3ZCJdLCJhcHBpZCI6IjdmMmQxZThiLTQyMDktNDgyZi1iMWQ5LTQ3MGM5ODhhM2EwYSIsImFwcGlkYWNyIjoiMCIsImdpdmVuX25hbWUiOiJwZXJmMSIsImlwYWRkciI6IjQyLjExMC4xMzEuNzMiLCJuYW1lIjoicGVyZjEiLCJvaWQiOiJlMmJjYTMzZi0xMjI0LTQwM2QtODcwNS01YmEwMjMwYWFkYmMiLCJyaCI6IjAuQVZNQVZHUWkxdDZWNVVtbkphb0hqaEtBZ0lzZUxYOEpRaTlJc2RsSERKaUtPZ3BUQU1rLiIsInNjcCI6InVzZXIiLCJzdWIiOiJLUDZTSGtZeDkybTNWdi13bG1NWHVhanZ3cHlhVDFkMF9Eb1ByRWR5S05nIiwidGlkIjoiZDYyMjY0NTQtOTVkZS00OWU1LWE3MjUtYWEwNzhlMTI4MDgwIiwidW5pcXVlX25hbWUiOiJwZXJmMUBtZWVuYWtzaGltdXJhbGlkaGFyYW5taW5kdHIub25taWNyb3NvZnQuY29tIiwidXBuIjoicGVyZjFAbWVlbmFrc2hpbXVyYWxpZGhhcmFubWluZHRyLm9ubWljcm9zb2Z0LmNvbSIsInV0aSI6Im92aXVYUVE2ckVPRnZiZzVrWjhKQUEiLCJ2ZXIiOiIxLjAifQ.lGmfzaOnz8zT778FFReJokGBmuMp2-uRsTzniu77CSteWiCuj1GrPChKRqfn6POT1-rQ9Z0P6LvEnq7JRFjt9u3w4xFBecFCKe8nGLGsoY-oH5vTtB5-ofy4wcgAsKdA8mHe9kkUR3wgAdeiDYkLqz5o6J30YOZiBey4eXmKFPHkgxUkn2HhvmpO3Ud1LJAvVRl_Xb6OYN1Aj-Rpb7CO2clvTV6Nt4p4WYVw4_f5n2UqF_Q7k_z86pokD4VNQcGDyMiDrMP-wp7sla6H97y-CMGPyQI3BjqLPlR7HUbGtSzWa-FaGMiw4nJrqLQL6fIL51u7fzLyZPgHR8liYiCvHQ</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.81 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">^\^Windows^\^</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-10-23T11:04:02.957</stringProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Logout" enabled="false"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-766" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/ancillaryData/indication</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/logout</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-767" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="wa" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">wa</stringProp>
                    <stringProp name="Argument.value">wsignin1.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="idpflag" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">idpflag</stringProp>
                    <stringProp name="Argument.value">direct</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="wreply" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">wreply</stringProp>
                    <stringProp name="Argument.value">${scheme}://login.microsoftonline.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/ancillaryData/indication</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Me.srf</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">iframe</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="S04_Person" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(pRampupDuration)}</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller [Login]" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Person_T001z_Login" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T001a_Login_Landing" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">ui1.prd.dna.informa-labs.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T001b_Login_discovery_instance" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="api-version" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">api-version</stringProp>
                    <stringProp name="Argument.value">1.1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="authorization_endpoint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">authorization_endpoint</stringProp>
                    <stringProp name="Argument.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/common//discovery/instance</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T001c_Login_openid_configuration" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/v2.0/.well-known/openid-configuration</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T001d_Login_authorize_1" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">id_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="canary" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">canary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ctx" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ctx</stringProp>
                <stringProp name="RegexExtractor.regex">ctx%3d(.+?)\\</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="flowToken" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">flowToken</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sFT&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">hpgrequestid</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Me.htm-50" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Me.htm</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Moz" elementType="Header">
                    <stringProp name="Header.name">X-Moz</stringProp>
                    <stringProp name="Header.value">prefetch</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T001e_Login_GetCredentialType" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;username&quot;:&quot;${pUsername}&quot;,&quot;isOtherIdpSupported&quot;:true,&quot;checkPhones&quot;:false,&quot;isRemoteNGCSupported&quot;:true,&quot;isCookieBannerShown&quot;:false,&quot;isFidoSupported&quot;:true,&quot;originalRequest&quot;:&quot;${ctx}&quot;,&quot;country&quot;:&quot;PL&quot;,&quot;forceotclogin&quot;:false,&quot;isExternalFederationDisallowed&quot;:false,&quot;isRemoteConnectSupported&quot;:false,&quot;federationFlags&quot;:0,&quot;isSignup&quot;:false,&quot;flowToken&quot;:&quot;${flowToken}&quot;,&quot;isAccessPassSupported&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/GetCredentialType?mkt=en-US</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize?response_type=id_token&amp;scope=${scheme}%3A%2F%2Fmeenakshimuralidharanmindtr.onmicrosoft.com%2Fec9d67a6-4db3-4c2b-9629-829003e10247%2Fuser%20openid%20profile&amp;client_id=7f2d1e8b-4209-482f-b1d9-470c988a3a0a&amp;redirect_uri=${scheme}%3A%2F%2Fui1.prd.dna.informa-labs.com&amp;state=eyJpZCI6ImRkOTc2N2QyLTY4MWMtNGM3Zi04OTY5LTQ2YjkwOWEzZTM3MCIsInRzIjoxNjM0NzIwNTQ0LCJtZXRob2QiOiJyZWRpcmVjdEludGVyYWN0aW9uIn0%3D&amp;nonce=4c1a38ad-64f5-42df-b0c3-ff53167f0e1d&amp;client_info=1&amp;x-client-SKU=MSAL.JS&amp;x-client-Ver=1.4.14&amp;client-request-id=db3e0e67-a0c5-43e8-acb1-41fe59887d30&amp;response_mode=fragment</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">1800</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">AQABAAAAAAD--DLA3VO7QrddgJg7WevrWAiEmTLPW-qImBEU9wOnFRjt-1R3fEW1AN1Dcy71PBjgcAg3oLENFSL6p2jLWKXuLzQBUU4kS0Llp4oDnSb4VAzTddCyOvjOXBs6NXVYF47NaBPlhMNDa6wyolntBJbG8M5G56DMExb5zJz-mmAOq6S6s8X3uX5cz00eh_utlEUL8ri4zJgvN2_yZL3JSmztyw1LCV84JtpJdpOex6KIzCAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">ac7e0214-5c43-485a-858a-f83153fcb800</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1104</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">db3e0e67-a0c5-43e8-acb1-41fe59887d30</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T001f_Login_login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="i13" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i13</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="loginfmt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">loginfmt</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrt</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrtPartition" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrtPartition</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisRegion" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisRegion</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisScaleUnit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisScaleUnit</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="passwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">passwd</stringProp>
                    <stringProp name="Argument.value">${pPassword}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ps" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ps</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCDefaultType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCDefaultType</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCEntropy" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCEntropy</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCSLK" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCSLK</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                    <stringProp name="Argument.value">${canary}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                    <stringProp name="Argument.value">${ctx}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                    <stringProp name="Argument.value">${hpgrequestid}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                    <stringProp name="Argument.value">${flowToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PPSX" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">PPSX</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="NewUser" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">NewUser</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="FoundMSAs" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">FoundMSAs</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fspost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fspost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i21" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i21</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CookieDisclosure" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CookieDisclosure</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="IsFidoSupported" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">IsFidoSupported</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="isSignupPost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">isSignupPost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i2</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i17" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i17</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i18" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i18</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">32731</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize?response_type=id_token&amp;scope=${scheme}%3A%2F%2Fmeenakshimuralidharanmindtr.onmicrosoft.com%2Fec9d67a6-4db3-4c2b-9629-829003e10247%2Fuser%20openid%20profile&amp;client_id=7f2d1e8b-4209-482f-b1d9-470c988a3a0a&amp;redirect_uri=${scheme}%3A%2F%2Fui1.prd.dna.informa-labs.com&amp;state=eyJpZCI6ImRkOTc2N2QyLTY4MWMtNGM3Zi04OTY5LTQ2YjkwOWEzZTM3MCIsInRzIjoxNjM0NzIwNTQ0LCJtZXRob2QiOiJyZWRpcmVjdEludGVyYWN0aW9uIn0%3D&amp;nonce=4c1a38ad-64f5-42df-b0c3-ff53167f0e1d&amp;client_info=1&amp;x-client-SKU=MSAL.JS&amp;x-client-Ver=1.4.14&amp;client-request-id=db3e0e67-a0c5-43e8-acb1-41fe59887d30&amp;response_mode=fragment</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="canary" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">canary1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ctx" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ctx1</stringProp>
                <stringProp name="RegexExtractor.regex">ctx%3d(.+?)\\</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="flowToken" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">flowToken1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sFT&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">hpgrequestid1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T001g_Login_kmsi" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">28</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i2</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i17" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i17</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i18" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i18</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">10167</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${canary1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${ctx1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${hpgrequestid1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${flowToken1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/kmsi</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/login</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T001h_Login_authorize_2" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com/auth.html</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login_hint</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="prompt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">prompt</stringProp>
                    <stringProp name="Argument.value">none</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">iframe</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T001i_Login_authorize_3" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login_hint</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">token</stringProp>
                <stringProp name="RegexExtractor.regex">access_token=(.+?)&amp;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1615526678">not_found</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">token</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
                <intProp name="OnError.action">4</intProp>
              </ResultAction>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Person_T002z_PersonTab" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T002a_PersonAdvanceSearch_advanceSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50,&quot;resultOptions&quot;:{&quot;showColumns&quot;:[]},&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;LastModifiedDate&quot;,&quot;isDescendingOrder&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/PersonAdvanceSearch/advanceSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T002b_Search" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Search/4/true</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T002c_PersonAdvanceSearch_Advancesearchcategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/PersonAdvanceSearch/Advancesearchcategory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T002d_Tasks_GetMasterData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Tasks/GetMasterData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T002e_UserGroup_GetUsersAndUserGroupByQueueId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[2]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/UserGroup/GetUsersAndUserGroupByQueueId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Person_T003z_CreateNewPerson" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T003a_person_0" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/person/0</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/person</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T003b_authorization_user" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/authorization/user</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T003c_person_masterdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/person/masterdata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T003d_PersonAdvanceSearch_advanceSearch" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50,&quot;resultOptions&quot;:{&quot;showColumns&quot;:[]},&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;LastModifiedDate&quot;,&quot;isDescendingOrder&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/PersonAdvanceSearch/advanceSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Basic &amp; Contact Info Tab [No requests]" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T004z_Specialties_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;Cardio&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Specialties/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T005z_Degree_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;PHARM&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Degree/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T006z_Organization_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;Covenant Clinic&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Organization/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T007z_Save_Basic&amp;Contact_Info" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:0,&quot;ingestedId&quot;:0,&quot;updateType&quot;:1,&quot;ingestedContentResults&quot;:[],&quot;personBasicInfo&quot;:{&quot;addressId&quot;:null,&quot;firstName&quot;:&quot;Perf&quot;,&quot;lastName&quot;:&quot;Test&quot;,&quot;middleName&quot;:&quot;test&quot;,&quot;nameSuffix&quot;:&quot;Mr&quot;,&quot;personType&quot;:{&quot;id&quot;:1,&quot;value&quot;:&quot;test&quot;},&quot;specialities&quot;:[{&quot;id&quot;:-1,&quot;speciality&quot;:{&quot;id&quot;:7,&quot;value&quot;:&quot;Hematology&quot;}}],&quot;degrees&quot;:[{&quot;id&quot;:-1,&quot;degree&quot;:{&quot;id&quot;:18,&quot;value&quot;:&quot;PHARM M&quot;}}],&quot;licenses&quot;:[{&quot;id&quot;:-1,&quot;licenseType&quot;:{&quot;id&quot;:1,&quot;value&quot;:&quot;test&quot;},&quot;licenseValue&quot;:&quot;12345&quot;}],&quot;parentOrganization&quot;:{&quot;id&quot;:9,&quot;name&quot;:&quot;Gesund in Gars&quot;,&quot;organizationType&quot;:{&quot;id&quot;:4,&quot;value&quot;:&quot;Medical Practice&quot;},&quot;primaryContactInfo&quot;:{&quot;id&quot;:8,&quot;street1&quot;:&quot;Augustinerstr. 1&quot;,&quot;street2&quot;:&quot;&quot;,&quot;city&quot;:{&quot;id&quot;:5697,&quot;value&quot;:&quot;Gars am Inn&quot;},&quot;state&quot;:{&quot;id&quot;:409,&quot;value&quot;:&quot;Bavaria&quot;},&quot;country&quot;:{&quot;id&quot;:80,&quot;value&quot;:&quot;Germany&quot;},&quot;postalCode&quot;:&quot;83536&quot;,&quot;phoneNumbers&quot;:[&quot;+49 (0) 8073-2330&quot;],&quot;faxNumbers&quot;:[&quot;+49 (0) 8073-2658&quot;],&quot;websites&quot;:null,&quot;emails&quot;:null,&quot;isPrimary&quot;:true,&quot;latitude&quot;:null,&quot;longitude&quot;:null,&quot;validationCode&quot;:&quot;V3&quot;,&quot;validationDescription&quot;:&quot;The input data is correct, but some or all elements were standardized, or the input contains outdated names or exonyms.&quot;,&quot;isValidated&quot;:false,&quot;citySynonym&quot;:null,&quot;stateSynonym&quot;:null,&quot;fullAddress&quot;:&quot;Augustinerstr. 1, Gars am Inn, Bavaria, Germany&quot;},&quot;nextFullReviewDate&quot;:&quot;2019-02-17T21:04:15.257&quot;,&quot;displayAddress&quot;:&quot;Augustinerstr. 1, Gars am Inn, Bavaria, Germany&quot;,&quot;licenses&quot;:[]},&quot;contactInfo&quot;:{&quot;phoneNumbers&quot;:[&quot;1234567890&quot;],&quot;faxNumbers&quot;:[&quot;1234567890&quot;],&quot;emails&quot;:[&quot;test@gmail.com&quot;]},&quot;lastFullReviewDate&quot;:null,&quot;createdBy&quot;:&quot;&quot;,&quot;createdDate&quot;:null,&quot;modifiedBy&quot;:&quot;&quot;,&quot;modifiedDate&quot;:null,&quot;lastFullReviewedBy&quot;:&quot;&quot;,&quot;nextFullReviewDate&quot;:null,&quot;supportingUrls&quot;:[{&quot;url&quot;:&quot;www.test.com&quot;,&quot;publishOnFos&quot;:true,&quot;status&quot;:{&quot;id&quot;:1,&quot;value&quot;:&quot;Active&quot;},&quot;id&quot;:-1}]}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/person</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="cPersonId1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">cPersonId1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">cPersonId1_NOT_FOUND</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="314878357">cPersonId1_NOT_FOUND</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">20</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">cPersonId1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
            <intProp name="OnError.action">4</intProp>
          </ResultAction>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Regulatory Action [No requests]" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T008z_Save_RegulatoryAction" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cPersonId1},&quot;ingestedId&quot;:0,&quot;updateType&quot;:2,&quot;personAdditionalInfo&quot;:{&quot;regulatoryActions&quot;:[{&quot;date&quot;:&quot;Dec-30-2021&quot;,&quot;regulatoryActionType&quot;:{&quot;id&quot;:17,&quot;description&quot;:&quot;RegAction&quot;,&quot;flagId&quot;:null,&quot;flag&quot;:null,&quot;createdBy&quot;:&quot;QA USER&quot;,&quot;createdDate&quot;:&quot;2021-08-26T12:05:06.869068&quot;,&quot;modifiedBy&quot;:&quot;QA USER&quot;,&quot;modifiedDate&quot;:&quot;2021-08-26T12:05:06.869068&quot;,&quot;displayValue&quot;:&quot;RegAction&quot;},&quot;regulatoryActionFlag&quot;:null,&quot;actions&quot;:&quot;Test&quot;,&quot;id&quot;:-1}]},&quot;ingestedContentResults&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/person</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T008z_Save_RegulatoryAction" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cPersonId1},&quot;ingestedId&quot;:0,&quot;updateType&quot;:2,&quot;personAdditionalInfo&quot;:{&quot;regulatoryActions&quot;:[{&quot;date&quot;:&quot;Dec-30-2021&quot;,&quot;regulatoryActionType&quot;:{&quot;id&quot;:1,&quot;description&quot;:&quot;Inspection/Audit - No Deficiencies Noted&quot;,&quot;flagId&quot;:3,&quot;flag&quot;:{&quot;id&quot;:3,&quot;value&quot;:&quot;GREEN&quot;},&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-24T10:57:41.407&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-24T10:57:41.407&quot;,&quot;displayValue&quot;:&quot;Inspection/Audit - No Deficiencies Noted&quot;},&quot;regulatoryActionFlag&quot;:{&quot;id&quot;:3,&quot;flag&quot;:&quot;GREEN&quot;},&quot;actions&quot;:&quot;Test&quot;,&quot;id&quot;:-1}]},&quot;ingestedContentResults&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/person</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T009z_Associations_Associated_Trials" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:50,&quot;pageIndex&quot;:1,&quot;entityPrimaryKey&quot;:${cPersonId1}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial/PersonAssociation/associationSearchRequestModel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T010z_Associations_Associated_Organization" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:50,&quot;pageIndex&quot;:1,&quot;entityPrimaryKey&quot;:${cPersonId1}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial/PersonOrgAssociation/associationSearchRequestModel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Notes [No requests]" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T011z_SaveNotes" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cPersonId1},&quot;updateType&quot;:3,&quot;notes&quot;:[{&quot;id&quot;:-1,&quot;type&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Private&quot;},&quot;date&quot;:&quot;${__time(yyyy-MM-dd&apos;T&apos;hh:mm:ss.SSS&apos;Z&apos;,)}&quot;,&quot;text&quot;:&quot;Test&quot;}],&quot;deletedNotes&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/person</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Person_T012z_AuditTrial" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T012a_Person_AuditTrialHistory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Person/AuditTrialHistory/${cPersonId1}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T012b_PersonAuditEntry_search" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;rowCount&quot;:0,&quot;pageSize&quot;:100,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;EntityPrimaryKey&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:${cPersonId1},&quot;condition&quot;:0}],&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;All&quot;,&quot;isDescendingOrder&quot;:false}],&quot;resultOptions&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/PersonAuditEntry/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T013z_Publish" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cPersonId1},&quot;prodStatusID&quot;:1,&quot;updateType&quot;:4,&quot;ingestedId&quot;:0,&quot;previousProductionStatus&quot;:6}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/person</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-10-25T19:41:00.191</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">sites.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">^\^Chromium^\^;v=^\^94^\^, ^\^Google</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Imwzc1EtNTBjQ0g0eEJWWkxIVEd3blNSNzY4MCIsImtpZCI6Imwzc1EtNTBjQ0g0eEJWWkxIVEd3blNSNzY4MCJ9.eyJhdWQiOiJodHRwczovL21lZW5ha3NoaW11cmFsaWRoYXJhbm1pbmR0ci5vbm1pY3Jvc29mdC5jb20vZWM5ZDY3YTYtNGRiMy00YzJiLTk2MjktODI5MDAzZTEwMjQ3IiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvZDYyMjY0NTQtOTVkZS00OWU1LWE3MjUtYWEwNzhlMTI4MDgwLyIsImlhdCI6MTYzNTE2OTg0MywibmJmIjoxNjM1MTY5ODQzLCJleHAiOjE2MzUxNzM3NDMsImFjciI6IjEiLCJhaW8iOiJBVFFBeS84VEFBQUFJMFZmdW53ZW5tL0d4bTNxTGFmT05NenFmRGgxMEdDdUl4bERHMW5nanBvWUZ3QlM0Um52dEh3aC9FNDFBK284IiwiYW1yIjpbInB3ZCJdLCJhcHBpZCI6IjdmMmQxZThiLTQyMDktNDgyZi1iMWQ5LTQ3MGM5ODhhM2EwYSIsImFwcGlkYWNyIjoiMCIsImdpdmVuX25hbWUiOiJwZXJmMSIsImlwYWRkciI6IjQyLjExMC4xMzEuMTIxIiwibmFtZSI6InBlcmYxIiwib2lkIjoiZTJiY2EzM2YtMTIyNC00MDNkLTg3MDUtNWJhMDIzMGFhZGJjIiwicmgiOiIwLkFWTUFWR1FpMXQ2VjVVbW5KYW9IamhLQWdJc2VMWDhKUWk5SXNkbEhESmlLT2dwVEFNay4iLCJzY3AiOiJ1c2VyIiwic3ViIjoiS1A2U0hrWXg5Mm0zVnYtd2xtTVh1YWp2d3B5YVQxZDBfRG9QckVkeUtOZyIsInRpZCI6ImQ2MjI2NDU0LTk1ZGUtNDllNS1hNzI1LWFhMDc4ZTEyODA4MCIsInVuaXF1ZV9uYW1lIjoicGVyZjFAbWVlbmFrc2hpbXVyYWxpZGhhcmFubWluZHRyLm9ubWljcm9zb2Z0LmNvbSIsInVwbiI6InBlcmYxQG1lZW5ha3NoaW11cmFsaWRoYXJhbm1pbmR0ci5vbm1pY3Jvc29mdC5jb20iLCJ1dGkiOiJpWHRneWh2YllFU1JqNGN0Q1BkUEFBIiwidmVyIjoiMS4wIn0.mqWkR8kQ8Ihjjdf5BvqYh9rWEENEl07SBYng-khEwpimQhLw7XEZ59fT3MFHOu4NjOQMWjGqeRq7MVWTaB7NSstVWf4N4ArCC5XVKJ3ViLmYsWglQl-G63wK-0YkDOvXYF0e5SutZ1FT8R_htgCRhEdvj5ub8jOp7u8xf5ZD8Sycrl3c0yudPUq7bH5_1qqDY2lSK3y2iae-BHEpe6wOCLWEHZoFLknx-UqUYU2UV0UAn5igHSYlbwrPBZ-wOctI-ovjEBqqONDbHTqkuiP6J4to2fI3DgV1HprxDhZ60zAoZlqhJTgoIDUtfS-ik-7ScxyUhSEOTe5IY522DsJE6g</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.81 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">^\^Windows^\^</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-10-25T19:41:00.193</stringProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Person_T014z_PersonLandingPage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T014a_Search" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Search/4/true</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T014b_PersonAdvanceSearch_Advancesearchcategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/PersonAdvanceSearch/Advancesearchcategory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T014c_UserGroup_GetUsersAndUserGroupByQueueId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[2]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/UserGroup/GetUsersAndUserGroupByQueueId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T014d_Tasks_GetMasterData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Tasks/GetMasterData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T014e_Person_unlockdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Person/unlockdata/${cPersonId1}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T014f_PersonAdvanceSearch_advanceSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50,&quot;resultOptions&quot;:{&quot;showColumns&quot;:[]},&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;LastModifiedDate&quot;,&quot;isDescendingOrder&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/PersonAdvanceSearch/advanceSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Person_T015z_Click_Edit_Icon_of_AnyPerson" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T015a_person_id" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/person/${cPersonId1}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/person</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T015b_authorization_user" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/authorization/user</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T015c_person_masterdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/person/masterdata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T015d_Person_lockdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Person/lockdata/${cPersonId1}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T015e_api_person_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/person/${cPersonId1}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T016z_Add_Note&amp;Save" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cPersonId1},&quot;updateType&quot;:3,&quot;notes&quot;:[{&quot;id&quot;:-1,&quot;type&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Private&quot;},&quot;date&quot;:&quot;${__time(yyyy-MM-dd&apos;T&apos;hh:mm:ss.SSS&apos;Z&apos;,)}&quot;,&quot;text&quot;:&quot;Test&quot;}],&quot;deletedNotes&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/person</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Person_T017z_PersonTab" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T017a_Person_unlockdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Person/unlockdata/${cPersonId1}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T017b_PersonAdvanceSearch_Advancesearchcategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/PersonAdvanceSearch/Advancesearchcategory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T017c_Tasks_GetMasterData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Tasks/GetMasterData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T017d_Search" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Search/4/true</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T017e_UserGroup_GetUsersAndUserGroupByQueueId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[2]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/UserGroup/GetUsersAndUserGroupByQueueId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T017f_Person_unlockdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Person/unlockdata/${cPersonId1}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T017g_PersonAdvanceSearch_advanceSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50,&quot;resultOptions&quot;:{&quot;showColumns&quot;:[]},&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;LastModifiedDate&quot;,&quot;isDescendingOrder&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/PersonAdvanceSearch/advanceSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Person_T018z_CreateNewPerson" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T018a_person_0" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/person/0</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/person</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T018b_authorization_user" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/authorization/user</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T018c_person_masterdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/person/masterdata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Basic &amp; Contact Info [No requests]" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T019z_Specialties_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;Cardio&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Specialties/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T020z_Organization_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;Covenant Clinic&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Organization/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T021z__Save_Basic&amp;Contact_Info" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:0,&quot;ingestedId&quot;:0,&quot;updateType&quot;:1,&quot;ingestedContentResults&quot;:[],&quot;personBasicInfo&quot;:{&quot;addressId&quot;:null,&quot;firstName&quot;:&quot;Perf&quot;,&quot;lastName&quot;:&quot;Test&quot;,&quot;middleName&quot;:&quot;&quot;,&quot;nameSuffix&quot;:&quot;&quot;,&quot;personType&quot;:{&quot;id&quot;:3,&quot;value&quot;:&quot;Clinical Investigator&quot;},&quot;specialities&quot;:[{&quot;id&quot;:-1,&quot;speciality&quot;:{&quot;id&quot;:7,&quot;value&quot;:&quot;Hematology&quot;}}],&quot;degrees&quot;:[],&quot;licenses&quot;:[],&quot;parentOrganization&quot;:{&quot;id&quot;:9,&quot;name&quot;:&quot;Gesund in Gars&quot;,&quot;organizationType&quot;:{&quot;id&quot;:4,&quot;value&quot;:&quot;Medical Practice&quot;},&quot;primaryContactInfo&quot;:{&quot;id&quot;:8,&quot;street1&quot;:&quot;Augustinerstr. 1&quot;,&quot;street2&quot;:&quot;&quot;,&quot;city&quot;:{&quot;id&quot;:5697,&quot;value&quot;:&quot;Gars am Inn&quot;},&quot;state&quot;:{&quot;id&quot;:409,&quot;value&quot;:&quot;Bavaria&quot;},&quot;country&quot;:{&quot;id&quot;:80,&quot;value&quot;:&quot;Germany&quot;},&quot;postalCode&quot;:&quot;83536&quot;,&quot;phoneNumbers&quot;:[&quot;+49 (0) 8073-2330&quot;],&quot;faxNumbers&quot;:[&quot;+49 (0) 8073-2658&quot;],&quot;websites&quot;:null,&quot;emails&quot;:null,&quot;isPrimary&quot;:true,&quot;latitude&quot;:null,&quot;longitude&quot;:null,&quot;validationCode&quot;:&quot;V3&quot;,&quot;validationDescription&quot;:&quot;The input data is correct, but some or all elements were standardized, or the input contains outdated names or exonyms.&quot;,&quot;isValidated&quot;:false,&quot;citySynonym&quot;:null,&quot;stateSynonym&quot;:null,&quot;fullAddress&quot;:&quot;Augustinerstr. 1, Gars am Inn, Bavaria, Germany&quot;},&quot;nextFullReviewDate&quot;:&quot;2019-02-17T21:04:15.257&quot;,&quot;displayAddress&quot;:&quot;Augustinerstr. 1, Gars am Inn, Bavaria, Germany&quot;,&quot;licenses&quot;:[]},&quot;contactInfo&quot;:{&quot;phoneNumbers&quot;:[],&quot;faxNumbers&quot;:[],&quot;emails&quot;:[]},&quot;lastFullReviewDate&quot;:null,&quot;createdBy&quot;:&quot;&quot;,&quot;createdDate&quot;:null,&quot;modifiedBy&quot;:&quot;&quot;,&quot;modifiedDate&quot;:null,&quot;lastFullReviewedBy&quot;:&quot;&quot;,&quot;nextFullReviewDate&quot;:null,&quot;supportingUrls&quot;:[]}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/person</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">cPersonId2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">cPersonId2_NOT_FOUND</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1482073002">cPersonId2_NOT_FOUND</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">20</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">cPersonId2</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
            <intProp name="OnError.action">4</intProp>
          </ResultAction>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Regulatory Actions [No requests]" enabled="true"/>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T022z_Save_RegulatoryAction" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cPersonId2},&quot;ingestedId&quot;:0,&quot;updateType&quot;:2,&quot;personAdditionalInfo&quot;:{&quot;regulatoryActions&quot;:[{&quot;date&quot;:&quot;Dec-29-2021&quot;,&quot;regulatoryActionType&quot;:{&quot;id&quot;:1,&quot;description&quot;:&quot;Inspection/Audit - No Deficiencies Noted&quot;,&quot;flagId&quot;:3,&quot;flag&quot;:{&quot;id&quot;:3,&quot;value&quot;:&quot;Green&quot;},&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-24T10:57:41.407&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-09-28T15:29:18.484124&quot;,&quot;displayValue&quot;:&quot;Inspection/Audit - No Deficiencies Noted&quot;},&quot;regulatoryActionFlag&quot;:{&quot;id&quot;:3,&quot;flag&quot;:&quot;Green&quot;},&quot;actions&quot;:&quot;Test&quot;,&quot;id&quot;:-1}]},&quot;ingestedContentResults&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/person</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Associations - Associated Trials [Not Mandatory]" enabled="false"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,535 ClinicalTrial_PersonAssociation_associationSearchRequestModel" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;pageSize&quot;:50,&quot;pageIndex&quot;:1,&quot;entityPrimaryKey&quot;:${cPersonId2}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/ClinicalTrial/PersonAssociation/associationSearchRequestModel</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${token}</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Associations - Associated Organization [Not Mandatory]" enabled="false"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,537 ClinicalTrial_PersonOrgAssociation_associationSearchRequestModel" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;pageSize&quot;:50,&quot;pageIndex&quot;:1,&quot;entityPrimaryKey&quot;:${cPersonId2}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/ClinicalTrial/PersonOrgAssociation/associationSearchRequestModel</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${token}</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Notes [No requests]" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T023z_SaveNotes" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cPersonId2},&quot;updateType&quot;:3,&quot;notes&quot;:[{&quot;id&quot;:-1,&quot;type&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Private&quot;},&quot;date&quot;:&quot;${__time(yyyy-MM-dd&apos;T&apos;hh:mm:ss.SSS&apos;Z&apos;,)}&quot;,&quot;text&quot;:&quot;test&quot;}],&quot;deletedNotes&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/person</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Person_T024z_AuditTrial" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T024a_Person_AuditTrialHistory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Person/AuditTrialHistory/${cPersonId2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T024b_PersonAuditEntry_search" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;rowCount&quot;:0,&quot;pageSize&quot;:100,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;EntityPrimaryKey&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:${cPersonId2},&quot;condition&quot;:0}],&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;All&quot;,&quot;isDescendingOrder&quot;:false}],&quot;resultOptions&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/PersonAuditEntry/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_Person_T025z_Publish" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cPersonId2},&quot;prodStatusID&quot;:1,&quot;updateType&quot;:4,&quot;ingestedId&quot;:0,&quot;previousProductionStatus&quot;:6}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/person</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-10-25T19:41:00.191</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">sites.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">^\^Chromium^\^;v=^\^94^\^, ^\^Google</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Imwzc1EtNTBjQ0g0eEJWWkxIVEd3blNSNzY4MCIsImtpZCI6Imwzc1EtNTBjQ0g0eEJWWkxIVEd3blNSNzY4MCJ9.eyJhdWQiOiJodHRwczovL21lZW5ha3NoaW11cmFsaWRoYXJhbm1pbmR0ci5vbm1pY3Jvc29mdC5jb20vZWM5ZDY3YTYtNGRiMy00YzJiLTk2MjktODI5MDAzZTEwMjQ3IiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvZDYyMjY0NTQtOTVkZS00OWU1LWE3MjUtYWEwNzhlMTI4MDgwLyIsImlhdCI6MTYzNTE2OTg0MywibmJmIjoxNjM1MTY5ODQzLCJleHAiOjE2MzUxNzM3NDMsImFjciI6IjEiLCJhaW8iOiJBVFFBeS84VEFBQUFJMFZmdW53ZW5tL0d4bTNxTGFmT05NenFmRGgxMEdDdUl4bERHMW5nanBvWUZ3QlM0Um52dEh3aC9FNDFBK284IiwiYW1yIjpbInB3ZCJdLCJhcHBpZCI6IjdmMmQxZThiLTQyMDktNDgyZi1iMWQ5LTQ3MGM5ODhhM2EwYSIsImFwcGlkYWNyIjoiMCIsImdpdmVuX25hbWUiOiJwZXJmMSIsImlwYWRkciI6IjQyLjExMC4xMzEuMTIxIiwibmFtZSI6InBlcmYxIiwib2lkIjoiZTJiY2EzM2YtMTIyNC00MDNkLTg3MDUtNWJhMDIzMGFhZGJjIiwicmgiOiIwLkFWTUFWR1FpMXQ2VjVVbW5KYW9IamhLQWdJc2VMWDhKUWk5SXNkbEhESmlLT2dwVEFNay4iLCJzY3AiOiJ1c2VyIiwic3ViIjoiS1A2U0hrWXg5Mm0zVnYtd2xtTVh1YWp2d3B5YVQxZDBfRG9QckVkeUtOZyIsInRpZCI6ImQ2MjI2NDU0LTk1ZGUtNDllNS1hNzI1LWFhMDc4ZTEyODA4MCIsInVuaXF1ZV9uYW1lIjoicGVyZjFAbWVlbmFrc2hpbXVyYWxpZGhhcmFubWluZHRyLm9ubWljcm9zb2Z0LmNvbSIsInVwbiI6InBlcmYxQG1lZW5ha3NoaW11cmFsaWRoYXJhbm1pbmR0ci5vbm1pY3Jvc29mdC5jb20iLCJ1dGkiOiJpWHRneWh2YllFU1JqNGN0Q1BkUEFBIiwidmVyIjoiMS4wIn0.mqWkR8kQ8Ihjjdf5BvqYh9rWEENEl07SBYng-khEwpimQhLw7XEZ59fT3MFHOu4NjOQMWjGqeRq7MVWTaB7NSstVWf4N4ArCC5XVKJ3ViLmYsWglQl-G63wK-0YkDOvXYF0e5SutZ1FT8R_htgCRhEdvj5ub8jOp7u8xf5ZD8Sycrl3c0yudPUq7bH5_1qqDY2lSK3y2iae-BHEpe6wOCLWEHZoFLknx-UqUYU2UV0UAn5igHSYlbwrPBZ-wOctI-ovjEBqqONDbHTqkuiP6J4to2fI3DgV1HprxDhZ60zAoZlqhJTgoIDUtfS-ik-7ScxyUhSEOTe5IY522DsJE6g</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.81 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">^\^Windows^\^</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-10-25T19:41:00.193</stringProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Logout" enabled="false"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-766" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/ancillaryData/indication</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/logout</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-767" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="wa" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">wa</stringProp>
                    <stringProp name="Argument.value">wsignin1.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="idpflag" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">idpflag</stringProp>
                    <stringProp name="Argument.value">direct</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="wreply" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">wreply</stringProp>
                    <stringProp name="Argument.value">${scheme}://login.microsoftonline.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/ancillaryData/indication</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Me.srf</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">iframe</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="S05_Organization" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(pRampupDuration)}</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller [Login]" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S05_Organization_T001z_Login" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T001a_Login_Landing" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">ui1.prd.dna.informa-labs.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T001b_Login_discovery_instance" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="api-version" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">api-version</stringProp>
                    <stringProp name="Argument.value">1.1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="authorization_endpoint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">authorization_endpoint</stringProp>
                    <stringProp name="Argument.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/common//discovery/instance</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T001c_Login_openid_configuration" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/v2.0/.well-known/openid-configuration</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T001d_Login_authorize_1" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">id_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="canary" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">canary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ctx" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ctx</stringProp>
                <stringProp name="RegexExtractor.regex">ctx%3d(.+?)\\</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="flowToken" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">flowToken</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sFT&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">hpgrequestid</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Me.htm-50" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Me.htm</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Moz" elementType="Header">
                    <stringProp name="Header.name">X-Moz</stringProp>
                    <stringProp name="Header.value">prefetch</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T001e_Login_GetCredentialType" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;username&quot;:&quot;${pUsername}&quot;,&quot;isOtherIdpSupported&quot;:true,&quot;checkPhones&quot;:false,&quot;isRemoteNGCSupported&quot;:true,&quot;isCookieBannerShown&quot;:false,&quot;isFidoSupported&quot;:true,&quot;originalRequest&quot;:&quot;${ctx}&quot;,&quot;country&quot;:&quot;PL&quot;,&quot;forceotclogin&quot;:false,&quot;isExternalFederationDisallowed&quot;:false,&quot;isRemoteConnectSupported&quot;:false,&quot;federationFlags&quot;:0,&quot;isSignup&quot;:false,&quot;flowToken&quot;:&quot;${flowToken}&quot;,&quot;isAccessPassSupported&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/GetCredentialType?mkt=en-US</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize?response_type=id_token&amp;scope=${scheme}%3A%2F%2Fmeenakshimuralidharanmindtr.onmicrosoft.com%2Fec9d67a6-4db3-4c2b-9629-829003e10247%2Fuser%20openid%20profile&amp;client_id=7f2d1e8b-4209-482f-b1d9-470c988a3a0a&amp;redirect_uri=${scheme}%3A%2F%2Fui1.prd.dna.informa-labs.com&amp;state=eyJpZCI6ImRkOTc2N2QyLTY4MWMtNGM3Zi04OTY5LTQ2YjkwOWEzZTM3MCIsInRzIjoxNjM0NzIwNTQ0LCJtZXRob2QiOiJyZWRpcmVjdEludGVyYWN0aW9uIn0%3D&amp;nonce=4c1a38ad-64f5-42df-b0c3-ff53167f0e1d&amp;client_info=1&amp;x-client-SKU=MSAL.JS&amp;x-client-Ver=1.4.14&amp;client-request-id=db3e0e67-a0c5-43e8-acb1-41fe59887d30&amp;response_mode=fragment</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">1800</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">AQABAAAAAAD--DLA3VO7QrddgJg7WevrWAiEmTLPW-qImBEU9wOnFRjt-1R3fEW1AN1Dcy71PBjgcAg3oLENFSL6p2jLWKXuLzQBUU4kS0Llp4oDnSb4VAzTddCyOvjOXBs6NXVYF47NaBPlhMNDa6wyolntBJbG8M5G56DMExb5zJz-mmAOq6S6s8X3uX5cz00eh_utlEUL8ri4zJgvN2_yZL3JSmztyw1LCV84JtpJdpOex6KIzCAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">ac7e0214-5c43-485a-858a-f83153fcb800</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1104</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">db3e0e67-a0c5-43e8-acb1-41fe59887d30</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T001f_Login_login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="i13" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i13</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="loginfmt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">loginfmt</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrt</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrtPartition" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrtPartition</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisRegion" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisRegion</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisScaleUnit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisScaleUnit</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="passwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">passwd</stringProp>
                    <stringProp name="Argument.value">${pPassword}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ps" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ps</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCDefaultType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCDefaultType</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCEntropy" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCEntropy</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCSLK" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCSLK</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                    <stringProp name="Argument.value">${canary}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                    <stringProp name="Argument.value">${ctx}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                    <stringProp name="Argument.value">${hpgrequestid}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                    <stringProp name="Argument.value">${flowToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PPSX" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">PPSX</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="NewUser" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">NewUser</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="FoundMSAs" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">FoundMSAs</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fspost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fspost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i21" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i21</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CookieDisclosure" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CookieDisclosure</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="IsFidoSupported" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">IsFidoSupported</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="isSignupPost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">isSignupPost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i2</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i17" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i17</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i18" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i18</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">32731</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize?response_type=id_token&amp;scope=${scheme}%3A%2F%2Fmeenakshimuralidharanmindtr.onmicrosoft.com%2Fec9d67a6-4db3-4c2b-9629-829003e10247%2Fuser%20openid%20profile&amp;client_id=7f2d1e8b-4209-482f-b1d9-470c988a3a0a&amp;redirect_uri=${scheme}%3A%2F%2Fui1.prd.dna.informa-labs.com&amp;state=eyJpZCI6ImRkOTc2N2QyLTY4MWMtNGM3Zi04OTY5LTQ2YjkwOWEzZTM3MCIsInRzIjoxNjM0NzIwNTQ0LCJtZXRob2QiOiJyZWRpcmVjdEludGVyYWN0aW9uIn0%3D&amp;nonce=4c1a38ad-64f5-42df-b0c3-ff53167f0e1d&amp;client_info=1&amp;x-client-SKU=MSAL.JS&amp;x-client-Ver=1.4.14&amp;client-request-id=db3e0e67-a0c5-43e8-acb1-41fe59887d30&amp;response_mode=fragment</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="canary" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">canary1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ctx" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ctx1</stringProp>
                <stringProp name="RegexExtractor.regex">ctx%3d(.+?)\\</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="flowToken" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">flowToken1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sFT&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">hpgrequestid1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T001g_Login_kmsi" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">28</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i2</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i17" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i17</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i18" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i18</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">10167</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${canary1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${ctx1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${hpgrequestid1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${flowToken1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/kmsi</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/login</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T001h_Login_authorize_2" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com/auth.html</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login_hint</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="prompt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">prompt</stringProp>
                    <stringProp name="Argument.value">none</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">iframe</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T001i_Login_authorize_3" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login_hint</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">token</stringProp>
                <stringProp name="RegexExtractor.regex">access_token=(.+?)&amp;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1615526678">not_found</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">token</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
                <intProp name="OnError.action">4</intProp>
              </ResultAction>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S05_Organization_T002z_OrganizationTab" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T002a_Tasks_GetMasterData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Tasks/GetMasterData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T002b_Search" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Search/5/true</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T002c_UserGroup_GetUsersAndUserGroupByQueueId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[2]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/UserGroup/GetUsersAndUserGroupByQueueId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T002d_OrganizationAdvanceSearch_Advancesearchcategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/OrganizationAdvanceSearch/Advancesearchcategory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T002e_OrganizationAdvanceSearch_advanceSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50,&quot;resultOptions&quot;:{&quot;showColumns&quot;:[]},&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;LastModifiedDate&quot;,&quot;isDescendingOrder&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/OrganizationAdvanceSearch/advanceSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S05_Organization_T003z_NewOrganization" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T003a_organization_0" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/organization/0</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/organization</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T003b_authorization_user" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/authorization/user</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T003c_Organization_masterdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Organization/masterdata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Basic &amp; Additional Info  [No requests]" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T004z_Organization_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;Consumer Product Testing Company&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Organization/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T005z_Save_Basic&amp;Additional_Info" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:0,&quot;ingestedId&quot;:0,&quot;updateType&quot;:1,&quot;organizationBasicInfo&quot;:{&quot;name&quot;:&quot;PT Org User${pUserNo}_${__time(,)}&quot;,&quot;licenses&quot;:[{&quot;id&quot;:-1,&quot;licenseType&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Mindtree Test&quot;},&quot;licenseValue&quot;:&quot;12345&quot;}],&quot;primaryInvestigators&quot;:[],&quot;lastFullReviewDate&quot;:null,&quot;lastFullReviewedBy&quot;:&quot;&quot;,&quot;nextFullReviewDate&quot;:null,&quot;createdBy&quot;:&quot;&quot;,&quot;createdDate&quot;:null,&quot;modifiedBy&quot;:&quot;&quot;,&quot;modifiedDate&quot;:null,&quot;organizationType&quot;:{&quot;id&quot;:4,&quot;value&quot;:&quot;Medical Practice&quot;},&quot;supportingUrls&quot;:[{&quot;url&quot;:&quot;www.testurl.com&quot;,&quot;publishOnFos&quot;:true,&quot;status&quot;:{&quot;id&quot;:1,&quot;value&quot;:&quot;Active&quot;},&quot;id&quot;:-1}],&quot;parentOrganization&quot;:null},&quot;ingestedContentResults&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Organization</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="cOrgId1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">cOrgId1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">cOrgId1_NOT_FOUND</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="443319884">cOrgId1_NOT_FOUND</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">20</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">cOrgId1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
            <intProp name="OnError.action">4</intProp>
          </ResultAction>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T005z_Save_Basic&amp;Additional_Info" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:0,&quot;ingestedId&quot;:0,&quot;updateType&quot;:1,&quot;organizationBasicInfo&quot;:{&quot;name&quot;:&quot;PT Org User${pUserNo}_${__time(,)}&quot;,&quot;licenses&quot;:[{&quot;id&quot;:-1,&quot;licenseType&quot;:{&quot;id&quot;:3,&quot;value&quot;:&quot;NRC ID&quot;},&quot;licenseValue&quot;:&quot;12345&quot;}],&quot;primaryInvestigators&quot;:[],&quot;lastFullReviewDate&quot;:null,&quot;lastFullReviewedBy&quot;:&quot;&quot;,&quot;nextFullReviewDate&quot;:null,&quot;createdBy&quot;:&quot;&quot;,&quot;createdDate&quot;:null,&quot;modifiedBy&quot;:&quot;&quot;,&quot;modifiedDate&quot;:null,&quot;organizationType&quot;:{&quot;id&quot;:4,&quot;value&quot;:&quot;Medical Practice&quot;},&quot;supportingUrls&quot;:[{&quot;url&quot;:&quot;www.testurl.com&quot;,&quot;publishOnFos&quot;:true,&quot;status&quot;:{&quot;id&quot;:1,&quot;value&quot;:&quot;Active&quot;},&quot;id&quot;:-1}],&quot;parentOrganization&quot;:null},&quot;ingestedContentResults&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Organization</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="cOrgId1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">cOrgId1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">cOrgId1_NOT_FOUND</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="443319884">cOrgId1_NOT_FOUND</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">20</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">cOrgId1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
            <intProp name="OnError.action">4</intProp>
          </ResultAction>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Address [No requests]" enabled="true"/>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T006z_Country_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;India&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Country/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T007z_State_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;Karnataka&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[{&quot;name&quot;:&quot;CountryId&quot;,&quot;value&quot;:98}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/State/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T008z_City_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;Bangalore&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[{&quot;name&quot;:&quot;StateId&quot;,&quot;value&quot;:549}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/City/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T009z_validateaddress" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;street&quot;:&quot;Test Street 1, Test&quot;,&quot;postalCode&quot;:&quot;560036&quot;,&quot;country&quot;:&quot;India&quot;,&quot;countryId&quot;:98,&quot;city&quot;:&quot;Bangalore&quot;,&quot;state&quot;:&quot;Karnataka&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Organization/validateaddress</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T010z_State_Country_Id" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/State/Country/98</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T011z_Save_Address" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cOrgId1},&quot;ingestedId&quot;:0,&quot;updateType&quot;:2,&quot;contactInfo&quot;:[{&quot;id&quot;:-1,&quot;websites&quot;:[],&quot;phoneNumbers&quot;:[],&quot;faxNumbers&quot;:[],&quot;emails&quot;:[],&quot;street1&quot;:&quot;1 Test Street, , Test&quot;,&quot;street2&quot;:&quot;Test Street 2&quot;,&quot;country&quot;:{&quot;alphacode2&quot;:&quot;IN&quot;,&quot;alphacode3&quot;:&quot;IND&quot;,&quot;isoNumber&quot;:356,&quot;countryGroupId&quot;:null,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-23T11:56:35.657&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-09-28T13:35:57.862808&quot;,&quot;countryGroup&quot;:{&quot;id&quot;:0,&quot;name&quot;:null,&quot;createdBy&quot;:null,&quot;createdDate&quot;:&quot;0001-01-01T00:00:00&quot;,&quot;modifiedBy&quot;:null,&quot;modifiedDate&quot;:&quot;0001-01-01T00:00:00&quot;,&quot;displayValue&quot;:null},&quot;displayValue&quot;:&quot;India&quot;,&quot;id&quot;:98,&quot;value&quot;:&quot;India&quot;},&quot;state&quot;:{&quot;countryId&quot;:98,&quot;country&quot;:{&quot;id&quot;:0,&quot;countryName&quot;:null,&quot;alphacode2&quot;:null,&quot;alphacode3&quot;:null,&quot;isoNumber&quot;:null,&quot;countryGroupId&quot;:null,&quot;createdBy&quot;:null,&quot;createdDate&quot;:&quot;0001-01-01T00:00:00&quot;,&quot;modifiedBy&quot;:null,&quot;modifiedDate&quot;:&quot;0001-01-01T00:00:00&quot;,&quot;countryGroup&quot;:null,&quot;displayValue&quot;:null},&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-23T10:34:04.443&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-23T10:34:04.443&quot;,&quot;stateSynonymModel&quot;:[],&quot;displayValue&quot;:&quot;Karnataka&quot;,&quot;id&quot;:549,&quot;value&quot;:&quot;Karnataka&quot;},&quot;city&quot;:{&quot;stateId&quot;:549,&quot;countryId&quot;:98,&quot;validity&quot;:null,&quot;country&quot;:{&quot;id&quot;:0,&quot;countryName&quot;:null,&quot;alphacode2&quot;:null,&quot;alphacode3&quot;:null,&quot;isoNumber&quot;:null,&quot;countryGroupId&quot;:null,&quot;createdBy&quot;:null,&quot;createdDate&quot;:&quot;0001-01-01T00:00:00&quot;,&quot;modifiedBy&quot;:null,&quot;modifiedDate&quot;:&quot;0001-01-01T00:00:00&quot;,&quot;countryGroup&quot;:null,&quot;displayValue&quot;:null},&quot;state&quot;:{&quot;id&quot;:0,&quot;stateName&quot;:null,&quot;countryId&quot;:0,&quot;country&quot;:null,&quot;createdBy&quot;:null,&quot;createdDate&quot;:&quot;0001-01-01T00:00:00&quot;,&quot;modifiedBy&quot;:null,&quot;modifiedDate&quot;:&quot;0001-01-01T00:00:00&quot;,&quot;stateSynonymModel&quot;:null,&quot;displayValue&quot;:null},&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-24T10:33:22.153&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-24T10:33:22.153&quot;,&quot;citySynonymModel&quot;:[],&quot;displayValue&quot;:&quot;Bengaluru&quot;,&quot;id&quot;:7362,&quot;value&quot;:&quot;Bengaluru&quot;},&quot;postalCode&quot;:&quot;560036&quot;,&quot;isPrimary&quot;:true,&quot;stateSynonym&quot;:null,&quot;citySynonym&quot;:null,&quot;latitude&quot;:null,&quot;longitude&quot;:null,&quot;geoLocation&quot;:null,&quot;validationCode&quot;:&quot;I3&quot;,&quot;validationDescription&quot;:null,&quot;isValidated&quot;:true}],&quot;ingestedContentResults&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Organization</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T012z_CurrentAssociatedPeople" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:50,&quot;pageIndex&quot;:1,&quot;entityPrimaryKey&quot;:${cOrgId1}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial/OrgPersonAssociation/associationSearchRequestModel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T013z_OngoingAssociatedTrials" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:50,&quot;pageIndex&quot;:1,&quot;entityPrimaryKey&quot;:${cOrgId1}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial/OrgAssociationOnGoing/associationSearchRequestModel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T014z_AllAssociatedTrials" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:50,&quot;pageIndex&quot;:1,&quot;entityPrimaryKey&quot;:${cOrgId1}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrial/OrgAssociationAll/associationSearchRequestModel</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="---Notes [No requests]" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T015z_SaveNotes" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cOrgId1},&quot;updateType&quot;:3,&quot;notes&quot;:[{&quot;id&quot;:-1,&quot;type&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Private&quot;},&quot;date&quot;:&quot;${__time(yyyy-MM-dd&apos;T&apos;hh:mm:ss.SSS&apos;Z&apos;,)}&quot;,&quot;text&quot;:&quot;Test Note1&quot;}],&quot;deletedNotes&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Organization</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S05_Organization_T016z_AuditTrial" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T016a_Organization_AuditTrialHistory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Organization/AuditTrialHistory/${cOrgId1}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T016b_OrganizationAuditEntry_SearchAuditEntry" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;rowCount&quot;:0,&quot;pageSize&quot;:100,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;EntityPrimaryKey&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:${cOrgId1},&quot;condition&quot;:0}],&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;All&quot;,&quot;isDescendingOrder&quot;:false}],&quot;resultOptions&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/OrganizationAuditEntry/SearchAuditEntry</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T017z_Publish" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cOrgId1},&quot;updateType&quot;:4,&quot;prodStatusID&quot;:1,&quot;ingestedId&quot;:0,&quot;previousProductionStatus&quot;:6}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Organization</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S05_Organization_T018z_OrgLandingPage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T018a_OrganizationAdvanceSearch_Advancesearchcategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/OrganizationAdvanceSearch/Advancesearchcategory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T018b_Search" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Search/5/true</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T018c_Tasks_GetMasterData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Tasks/GetMasterData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T018d_Organization_unlockdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Organization/unlockdata/${cOrgId1}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T018e_UserGroup_GetUsersAndUserGroupByQueueId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[2]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/UserGroup/GetUsersAndUserGroupByQueueId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T018f_OrganizationAdvanceSearch_advanceSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50,&quot;resultOptions&quot;:{&quot;showColumns&quot;:[]},&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;LastModifiedDate&quot;,&quot;isDescendingOrder&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/OrganizationAdvanceSearch/advanceSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S05_Organization_T019z_Click_Edit_Icon_of_AnyOrg" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T019a_organization_id" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/organization/${cOrgId1}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/organization</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T019b_authorization_user" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/authorization/user</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T019c_Organization_lockdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Organization/lockdata/${cOrgId1}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T019d_Organization_masterdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Organization/masterdata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T019e_api_Organization_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Organization/${cOrgId1}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T020z_Add_Note&amp;Save" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cOrgId1},&quot;updateType&quot;:3,&quot;notes&quot;:[{&quot;id&quot;:-1,&quot;type&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Private&quot;},&quot;date&quot;:&quot;${__time(yyyy-MM-dd&apos;T&apos;hh:mm:ss.SSS&apos;Z&apos;,)}&quot;,&quot;text&quot;:&quot;Edited&quot;}],&quot;deletedNotes&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Organization</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S05_Organization_T021z_OrgLandingPage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T021a_OrganizationAdvanceSearch_Advancesearchcategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/OrganizationAdvanceSearch/Advancesearchcategory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T021b_UserGroup_GetUsersAndUserGroupByQueueId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[2]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/UserGroup/GetUsersAndUserGroupByQueueId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T021c_Tasks_GetMasterData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Tasks/GetMasterData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T021d_Search" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Search/5/true</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T021e_Organization_unlockdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Organization/unlockdata/${cOrgId1}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T021f_OrganizationAdvanceSearch_advanceSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50,&quot;resultOptions&quot;:{&quot;showColumns&quot;:[]},&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;LastModifiedDate&quot;,&quot;isDescendingOrder&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/OrganizationAdvanceSearch/advanceSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S05_Organization_T022z_NewOrganization" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T022a_organization_0" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/organization/0</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/organization</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T022b_authorization_user" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/authorization/user</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T022c_Organization_masterdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Organization/masterdata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Basic &amp; Additional Info  [No requests]" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T023z_Save_Basic&amp;Additional_Info" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:0,&quot;ingestedId&quot;:0,&quot;updateType&quot;:1,&quot;organizationBasicInfo&quot;:{&quot;name&quot;:&quot;PT Org User${pUserNo}_${__time(,)}&quot;,&quot;licenses&quot;:[],&quot;primaryInvestigators&quot;:[],&quot;lastFullReviewDate&quot;:null,&quot;lastFullReviewedBy&quot;:&quot;&quot;,&quot;nextFullReviewDate&quot;:null,&quot;createdBy&quot;:&quot;&quot;,&quot;createdDate&quot;:null,&quot;modifiedBy&quot;:&quot;&quot;,&quot;modifiedDate&quot;:null,&quot;organizationType&quot;:{&quot;id&quot;:4,&quot;value&quot;:&quot;Medical Practice&quot;},&quot;supportingUrls&quot;:[],&quot;parentOrganization&quot;:null},&quot;ingestedContentResults&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Organization</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="cOrgId2" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">cOrgId2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">cOrgId2_NOT_FOUND</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1353631475">cOrgId2_NOT_FOUND</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">20</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">cOrgId2</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
            <intProp name="OnError.action">4</intProp>
          </ResultAction>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="---Address   [No requests]" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T024z_Country_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;India&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Country/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T025z_Save_Address" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cOrgId2},&quot;ingestedId&quot;:0,&quot;updateType&quot;:2,&quot;contactInfo&quot;:[{&quot;id&quot;:-1,&quot;websites&quot;:[],&quot;phoneNumbers&quot;:[],&quot;faxNumbers&quot;:[],&quot;emails&quot;:[],&quot;street1&quot;:&quot;Street1, Test&quot;,&quot;street2&quot;:&quot;&quot;,&quot;country&quot;:{&quot;alphacode2&quot;:&quot;IN&quot;,&quot;alphacode3&quot;:&quot;IND&quot;,&quot;isoNumber&quot;:356,&quot;countryGroupId&quot;:null,&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-23T11:56:35.657&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-09-28T13:35:57.862808&quot;,&quot;countryGroup&quot;:{&quot;id&quot;:0,&quot;name&quot;:null,&quot;createdBy&quot;:null,&quot;createdDate&quot;:&quot;0001-01-01T00:00:00&quot;,&quot;modifiedBy&quot;:null,&quot;modifiedDate&quot;:&quot;0001-01-01T00:00:00&quot;,&quot;displayValue&quot;:null},&quot;displayValue&quot;:&quot;India&quot;,&quot;id&quot;:98,&quot;value&quot;:&quot;India&quot;},&quot;state&quot;:null,&quot;city&quot;:null,&quot;postalCode&quot;:&quot;&quot;,&quot;isPrimary&quot;:true,&quot;stateSynonym&quot;:null,&quot;citySynonym&quot;:null,&quot;geoLocation&quot;:null,&quot;validationCode&quot;:&quot;E&quot;,&quot;validationDescription&quot;:null,&quot;isValidated&quot;:false}],&quot;ingestedContentResults&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Organization</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="06 Associations - Current Associated People [Not Mandatory]" enabled="false"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-306 ClinicalTrial_OrgPersonAssociation_associationSearchRequestModel" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;pageSize&quot;:50,&quot;pageIndex&quot;:1,&quot;entityPrimaryKey&quot;:${cOrgId2}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/ClinicalTrial/OrgPersonAssociation/associationSearchRequestModel</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${token}</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="07 Associations - Ongoing Associated Trials [Not Mandatory]" enabled="false"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="08 Associations - All Associated Trials [Not Mandatory]" enabled="false"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="---Notes  [No requests]" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T026z_SaveNotes" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cOrgId2},&quot;updateType&quot;:3,&quot;notes&quot;:[{&quot;id&quot;:-1,&quot;type&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Private&quot;},&quot;date&quot;:&quot;${__time(yyyy-MM-dd&apos;T&apos;hh:mm:ss.SSS&apos;Z&apos;,)}&quot;,&quot;text&quot;:&quot;Test&quot;}],&quot;deletedNotes&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Organization</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S05_Organization_T027z_AuditTrial" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T027a_Organization_AuditTrialHistory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Organization/AuditTrialHistory/${cOrgId2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T027b_OrganizationAuditEntry_SearchAuditEntry" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;rowCount&quot;:0,&quot;pageSize&quot;:100,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;EntityPrimaryKey&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:${cOrgId2},&quot;condition&quot;:0}],&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;All&quot;,&quot;isDescendingOrder&quot;:false}],&quot;resultOptions&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/OrganizationAuditEntry/SearchAuditEntry</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S05_Organization_T028z_Publish" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cOrgId2},&quot;updateType&quot;:4,&quot;prodStatusID&quot;:1,&quot;ingestedId&quot;:0,&quot;previousProductionStatus&quot;:6}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Organization</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Logout" enabled="false"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-766" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/ancillaryData/indication</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/logout</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-767" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="wa" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">wa</stringProp>
                    <stringProp name="Argument.value">wsignin1.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="idpflag" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">idpflag</stringProp>
                    <stringProp name="Argument.value">direct</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="wreply" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">wreply</stringProp>
                    <stringProp name="Argument.value">${scheme}://login.microsoftonline.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/ancillaryData/indication</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Me.srf</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">iframe</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="S06_Company" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(pRampupDuration)}</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller [Login]" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S06_Company_T001z_Login" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T001a_Login_Landing" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">ui1.prd.dna.informa-labs.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T001b_Login_discovery_instance" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="api-version" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">api-version</stringProp>
                    <stringProp name="Argument.value">1.1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="authorization_endpoint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">authorization_endpoint</stringProp>
                    <stringProp name="Argument.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/common//discovery/instance</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T001c_Login_openid_configuration" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/v2.0/.well-known/openid-configuration</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T001d_Login_authorize_1" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">id_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="canary" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">canary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ctx" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ctx</stringProp>
                <stringProp name="RegexExtractor.regex">ctx%3d(.+?)\\</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="flowToken" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">flowToken</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sFT&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">hpgrequestid</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Me.htm-50" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Me.htm</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Moz" elementType="Header">
                    <stringProp name="Header.name">X-Moz</stringProp>
                    <stringProp name="Header.value">prefetch</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T001e_Login_GetCredentialType" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;username&quot;:&quot;${pUsername}&quot;,&quot;isOtherIdpSupported&quot;:true,&quot;checkPhones&quot;:false,&quot;isRemoteNGCSupported&quot;:true,&quot;isCookieBannerShown&quot;:false,&quot;isFidoSupported&quot;:true,&quot;originalRequest&quot;:&quot;${ctx}&quot;,&quot;country&quot;:&quot;PL&quot;,&quot;forceotclogin&quot;:false,&quot;isExternalFederationDisallowed&quot;:false,&quot;isRemoteConnectSupported&quot;:false,&quot;federationFlags&quot;:0,&quot;isSignup&quot;:false,&quot;flowToken&quot;:&quot;${flowToken}&quot;,&quot;isAccessPassSupported&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/GetCredentialType?mkt=en-US</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize?response_type=id_token&amp;scope=${scheme}%3A%2F%2Fmeenakshimuralidharanmindtr.onmicrosoft.com%2Fec9d67a6-4db3-4c2b-9629-829003e10247%2Fuser%20openid%20profile&amp;client_id=7f2d1e8b-4209-482f-b1d9-470c988a3a0a&amp;redirect_uri=${scheme}%3A%2F%2Fui1.prd.dna.informa-labs.com&amp;state=eyJpZCI6ImRkOTc2N2QyLTY4MWMtNGM3Zi04OTY5LTQ2YjkwOWEzZTM3MCIsInRzIjoxNjM0NzIwNTQ0LCJtZXRob2QiOiJyZWRpcmVjdEludGVyYWN0aW9uIn0%3D&amp;nonce=4c1a38ad-64f5-42df-b0c3-ff53167f0e1d&amp;client_info=1&amp;x-client-SKU=MSAL.JS&amp;x-client-Ver=1.4.14&amp;client-request-id=db3e0e67-a0c5-43e8-acb1-41fe59887d30&amp;response_mode=fragment</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">1800</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">AQABAAAAAAD--DLA3VO7QrddgJg7WevrWAiEmTLPW-qImBEU9wOnFRjt-1R3fEW1AN1Dcy71PBjgcAg3oLENFSL6p2jLWKXuLzQBUU4kS0Llp4oDnSb4VAzTddCyOvjOXBs6NXVYF47NaBPlhMNDa6wyolntBJbG8M5G56DMExb5zJz-mmAOq6S6s8X3uX5cz00eh_utlEUL8ri4zJgvN2_yZL3JSmztyw1LCV84JtpJdpOex6KIzCAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">ac7e0214-5c43-485a-858a-f83153fcb800</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1104</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">db3e0e67-a0c5-43e8-acb1-41fe59887d30</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T001f_Login_login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="i13" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i13</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="loginfmt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">loginfmt</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrt</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrtPartition" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrtPartition</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisRegion" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisRegion</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisScaleUnit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisScaleUnit</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="passwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">passwd</stringProp>
                    <stringProp name="Argument.value">${pPassword}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ps" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ps</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCDefaultType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCDefaultType</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCEntropy" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCEntropy</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCSLK" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCSLK</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                    <stringProp name="Argument.value">${canary}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                    <stringProp name="Argument.value">${ctx}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                    <stringProp name="Argument.value">${hpgrequestid}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                    <stringProp name="Argument.value">${flowToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PPSX" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">PPSX</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="NewUser" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">NewUser</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="FoundMSAs" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">FoundMSAs</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fspost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fspost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i21" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i21</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CookieDisclosure" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CookieDisclosure</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="IsFidoSupported" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">IsFidoSupported</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="isSignupPost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">isSignupPost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i2</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i17" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i17</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i18" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i18</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">32731</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize?response_type=id_token&amp;scope=${scheme}%3A%2F%2Fmeenakshimuralidharanmindtr.onmicrosoft.com%2Fec9d67a6-4db3-4c2b-9629-829003e10247%2Fuser%20openid%20profile&amp;client_id=7f2d1e8b-4209-482f-b1d9-470c988a3a0a&amp;redirect_uri=${scheme}%3A%2F%2Fui1.prd.dna.informa-labs.com&amp;state=eyJpZCI6ImRkOTc2N2QyLTY4MWMtNGM3Zi04OTY5LTQ2YjkwOWEzZTM3MCIsInRzIjoxNjM0NzIwNTQ0LCJtZXRob2QiOiJyZWRpcmVjdEludGVyYWN0aW9uIn0%3D&amp;nonce=4c1a38ad-64f5-42df-b0c3-ff53167f0e1d&amp;client_info=1&amp;x-client-SKU=MSAL.JS&amp;x-client-Ver=1.4.14&amp;client-request-id=db3e0e67-a0c5-43e8-acb1-41fe59887d30&amp;response_mode=fragment</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="canary" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">canary1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ctx" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ctx1</stringProp>
                <stringProp name="RegexExtractor.regex">ctx%3d(.+?)\\</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="flowToken" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">flowToken1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sFT&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">hpgrequestid1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T001g_Login_kmsi" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">28</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i2</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i17" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i17</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i18" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i18</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">10167</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${canary1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${ctx1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${hpgrequestid1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${flowToken1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/kmsi</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/login</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T001h_Login_authorize_2" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com/auth.html</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login_hint</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="prompt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">prompt</stringProp>
                    <stringProp name="Argument.value">none</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">iframe</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T001i_Login_authorize_3" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login_hint</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">token</stringProp>
                <stringProp name="RegexExtractor.regex">access_token=(.+?)&amp;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1615526678">not_found</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">token</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
                <intProp name="OnError.action">4</intProp>
              </ResultAction>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T002z_AncillaryDataTab_armType" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/armType</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-533 ClinicalTrialAdvanceSearch_advanceSearch" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50,&quot;resultOptions&quot;:{&quot;showColumns&quot;:[]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;id&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:1,&quot;searchValue&quot;:&quot;0&quot;,&quot;searchValueName&quot;:&quot;0&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;}]}],&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;id&quot;,&quot;isDescendingOrder&quot;:false}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrialAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S06_Company_T003z_CompanySection" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T003a_researchFocus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/researchFocus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T003b_ancillary_company_quickSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ancillary/company/quickSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T004z_Country_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;India&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Country/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S06_Company_T005z_AddCompany" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T005a_ancillary_company" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;name&quot;:&quot;PT Company User${pUserNo}_${__time(,)}&quot;,&quot;researchFocusId&quot;:1,&quot;countryId&quot;:98,&quot;parentId&quot;:null,&quot;isDefault&quot;:false,&quot;isApprovalNeeded&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ancillary/company</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="cCompanyId1" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">cCompanyId1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">cCompanyId1_NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-419913773">cCompanyId1_NOT_FOUND</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">20</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">cCompanyId1</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
              <intProp name="OnError.action">4</intProp>
            </ResultAction>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T005b_ancillary_company_quickSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;id&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;&quot;,&quot;condition&quot;:0}],&quot;sortOrder&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ancillary/company/quickSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">  [Contains list of Companies]</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S06_Company_T006z_OpenCompany" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T006a_api_company_companyId" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/company/${cCompanyId1}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T006b_Company_lockdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Company/lockdata/${cCompanyId1}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T006c_company_masterdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/company/masterdata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Basic &amp; Contact Info Tab [No requests]" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T007z_State_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;karnataka&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[{&quot;name&quot;:&quot;CountryId&quot;,&quot;value&quot;:98}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/State/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T008z_Save_Basic&amp;Contact_Info" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;companyBasicInfo&quot;:{&quot;name&quot;:&quot;PT Test Company 02&quot;,&quot;researchFocus&quot;:{&quot;id&quot;:1,&quot;value&quot;:null},&quot;companyType&quot;:{&quot;id&quot;:1,&quot;value&quot;:&quot;Public&quot;},&quot;establishedYear&quot;:2004,&quot;parentCompany&quot;:null,&quot;relatedCompanyType&quot;:null,&quot;yearAcquired&quot;:null,&quot;summary&quot;:&quot;Test Summary&quot;,&quot;contactInfo&quot;:{&quot;websites&quot;:[&quot;www.testsite.com&quot;],&quot;phoneNumbers&quot;:[&quot;1234567890&quot;],&quot;faxNumbers&quot;:[&quot;1234567890&quot;],&quot;street1&quot;:&quot;Test Street 1&quot;,&quot;street2&quot;:&quot;Test Street 2&quot;,&quot;country&quot;:{&quot;id&quot;:98,&quot;value&quot;:&quot;India&quot;},&quot;state&quot;:{&quot;countryId&quot;:98,&quot;country&quot;:{&quot;id&quot;:0,&quot;countryName&quot;:null,&quot;alphacode2&quot;:null,&quot;alphacode3&quot;:null,&quot;isoNumber&quot;:null,&quot;countryGroupId&quot;:null,&quot;createdBy&quot;:null,&quot;createdDate&quot;:&quot;0001-01-01T00:00:00&quot;,&quot;modifiedBy&quot;:null,&quot;modifiedDate&quot;:&quot;0001-01-01T00:00:00&quot;,&quot;countryGroup&quot;:null,&quot;displayValue&quot;:null},&quot;createdBy&quot;:&quot;migrated&quot;,&quot;createdDate&quot;:&quot;2021-06-23T10:34:04.443&quot;,&quot;modifiedBy&quot;:&quot;migrated&quot;,&quot;modifiedDate&quot;:&quot;2021-06-23T10:34:04.443&quot;,&quot;stateSynonymModel&quot;:[],&quot;displayValue&quot;:&quot;Karnataka&quot;,&quot;id&quot;:549,&quot;stateName&quot;:&quot;Karnataka&quot;},&quot;city&quot;:&quot;Bangalore&quot;,&quot;postalCode&quot;:&quot;560036&quot;},&quot;createdDate&quot;:&quot;2021-10-14T05:07:00.315812&quot;,&quot;createdBy&quot;:&quot;Mahto, Anuranjan&quot;,&quot;modifiedDate&quot;:&quot;2021-10-14T05:07:00.315841&quot;,&quot;modifiedBy&quot;:&quot;Mahto, Anuranjan&quot;,&quot;lastFullReviewDate&quot;:null,&quot;lastFullReviewedBy&quot;:null,&quot;nextFullReviewDate&quot;:null},&quot;recordStartDateTime&quot;:&quot;Thu, 14 Oct 2021 05:07:26 GMT&quot;,&quot;ingestedContentResults&quot;:[],&quot;id&quot;:${cCompanyId1},&quot;ingestedId&quot;:0,&quot;updateType&quot;:1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/company</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Additional Info Tab [No requests]" enabled="true"/>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T009z_Save_Additional_Info" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;companyAdditionalInfo&quot;:{&quot;stockSymbol&quot;:null,&quot;stockExchange&quot;:null,&quot;formerName&quot;:&quot;Test Name&quot;,&quot;relatedCompanies&quot;:[],&quot;financialEntires&quot;:[{&quot;id&quot;:-1,&quot;financialYearEnd&quot;:&quot;2015-01-01T05:09:55.398Z&quot;,&quot;revenue&quot;:1000,&quot;researchSpent&quot;:500,&quot;noOfEmployees&quot;:50}],&quot;supportingUrls&quot;:[{&quot;url&quot;:&quot;www.testurl.com&quot;,&quot;publishOnFos&quot;:true,&quot;status&quot;:{&quot;id&quot;:1,&quot;value&quot;:&quot;Active&quot;},&quot;id&quot;:-1}]},&quot;recordStartDateTime&quot;:&quot;Thu, 14 Oct 2021 05:09:52 GMT&quot;,&quot;ingestedContentResults&quot;:[],&quot;id&quot;:${cCompanyId1},&quot;ingestedId&quot;:0,&quot;updateType&quot;:2}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/company</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T010z_AssociationsTab" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:50,&quot;pageIndex&quot;:1,&quot;companyIds&quot;:[${cCompanyId1}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/companyassociations</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Notes Tab [No requests]" enabled="true"/>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T011z_SaveNotes" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cCompanyId1},&quot;updateType&quot;:3,&quot;notes&quot;:[{&quot;id&quot;:-1,&quot;type&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Private&quot;},&quot;date&quot;:&quot;${__time(yyyy-MM-dd&apos;T&apos;hh:mm:ss.SSS&apos;Z&apos;,)}&quot;,&quot;text&quot;:&quot;Test&quot;}],&quot;recordStartDateTime&quot;:&quot;Thu, 14 Oct 2021 05:11:01 GMT&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/company</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S06_Company_T012z_AuditTrail" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T012a_Company_AuditTrialHistory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Company/AuditTrialHistory/${cCompanyId1}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T012b_CompanyAuditEntry_SearchAuditEntry" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;rowCount&quot;:0,&quot;pageSize&quot;:100,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;EntityPrimaryKey&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:${cCompanyId1},&quot;condition&quot;:0}],&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;All&quot;,&quot;isDescendingOrder&quot;:false}],&quot;resultOptions&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/CompanyAuditEntry/SearchAuditEntry</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T013z_Publish" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cCompanyId1},&quot;ingestedId&quot;:0,&quot;updateType&quot;:5,&quot;prodStatusID&quot;:1,&quot;previousProductionStatus&quot;:6,&quot;recordStartDateTime&quot;:&quot;Thu, 14 Oct 2021 05:11:39 GMT&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/company</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S06_Company_T014z_CompanyLandingPage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T014a_Search" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Search/3/true</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T014b_UserGroup_GetUsersAndUserGroupByQueueId" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[2]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/UserGroup/GetUsersAndUserGroupByQueueId</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T014c_Tasks_GetMasterData" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Tasks/GetMasterData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T014d_CompanyAdvanceSearch_Advancesearchcategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/CompanyAdvanceSearch/Advancesearchcategory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T014e_Company_unlockdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Company/unlockdata/${cCompanyId1}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T014f_CompanyAdvanceSearch_advanceSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50,&quot;resultOptions&quot;:{&quot;showColumns&quot;:[]},&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;LastModifiedDate&quot;,&quot;isDescendingOrder&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/CompanyAdvanceSearch/advanceSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S06_Company_T015z_Click_Edit_Icon_of_AnyCompany" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T015a_ company_companyId" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/company/${cCompanyId1}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/company</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T015b_authorization_user" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/authorization/user</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T015c_company_masterdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/company/masterdata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T015d_api_company_companyId" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/company/${cCompanyId1}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T015e_Company_lockdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Company/lockdata/${cCompanyId1}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T016z_Add_Note&amp;Save" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cCompanyId1},&quot;updateType&quot;:3,&quot;notes&quot;:[{&quot;id&quot;:-1,&quot;type&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Private&quot;},&quot;date&quot;:&quot;${__time(yyyy-MM-dd&apos;T&apos;hh:mm:ss.SSS&apos;Z&apos;,)}&quot;,&quot;text&quot;:&quot;Test&quot;}],&quot;recordStartDateTime&quot;:&quot;Thu, 14 Oct 2021 05:13:58 GMT&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/company</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S06_Company_T017z_AncillaryDataTab" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T017a_Company_unlockdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Company/unlockdata/${cCompanyId1}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T017b_armType" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/armType</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S06_Company_T018z_CompanySection" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T018a_researchFocus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/researchFocus</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T018b_ancillary_company_quickSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ancillary/company/quickSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T019z_Country_keywordsearch" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchKeyword&quot;:&quot;india&quot;,&quot;pageIndex&quot;:1,&quot;pageSize&quot;:100,&quot;filterBy&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Country/keywordsearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S06_Company_T020z_AddCompany" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T020a_ancillary_company" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;name&quot;:&quot;PT Company User${pUserNo}_${__time(,)}&quot;,&quot;researchFocusId&quot;:1,&quot;countryId&quot;:98,&quot;parentId&quot;:null,&quot;isDefault&quot;:false,&quot;isApprovalNeeded&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ancillary/company</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="cCompanyId2" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">cCompanyId2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">cCompanyId2_NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2078102164">cCompanyId2_NOT_FOUND</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">20</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">cCompanyId2</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
              <intProp name="OnError.action">4</intProp>
            </ResultAction>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T020b_ancillary_company_quickSearch" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;id&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;&quot;,&quot;condition&quot;:0}],&quot;sortOrder&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ancillary/company/quickSearch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S06_Company_T021z_OpenCompany" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T021a_api_company_companyId" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/company/${cCompanyId2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T021b_company_masterdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/company/masterdata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T021c_Company_lockdata" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Company/lockdata/${cCompanyId2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Basic &amp; Contact Info Tab [No requests]" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T022z_Save_Basic&amp;Contact_Info" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;companyBasicInfo&quot;:{&quot;name&quot;:&quot;PT Test Company 03&quot;,&quot;researchFocus&quot;:{&quot;id&quot;:1,&quot;value&quot;:null},&quot;companyType&quot;:null,&quot;establishedYear&quot;:null,&quot;parentCompany&quot;:null,&quot;relatedCompanyType&quot;:null,&quot;yearAcquired&quot;:null,&quot;summary&quot;:&quot;&quot;,&quot;contactInfo&quot;:{&quot;websites&quot;:[],&quot;phoneNumbers&quot;:[],&quot;faxNumbers&quot;:[],&quot;street1&quot;:null,&quot;street2&quot;:null,&quot;country&quot;:{&quot;id&quot;:98,&quot;value&quot;:&quot;India&quot;},&quot;state&quot;:null,&quot;city&quot;:null,&quot;postalCode&quot;:null},&quot;createdDate&quot;:&quot;2021-10-14T05:15:21.196455&quot;,&quot;createdBy&quot;:&quot;Mahto, Anuranjan&quot;,&quot;modifiedDate&quot;:&quot;2021-10-14T05:15:21.196457&quot;,&quot;modifiedBy&quot;:&quot;Mahto, Anuranjan&quot;,&quot;lastFullReviewDate&quot;:null,&quot;lastFullReviewedBy&quot;:null,&quot;nextFullReviewDate&quot;:null},&quot;recordStartDateTime&quot;:&quot;Thu, 14 Oct 2021 05:15:42 GMT&quot;,&quot;ingestedContentResults&quot;:[],&quot;id&quot;:${cCompanyId2},&quot;ingestedId&quot;:0,&quot;updateType&quot;:1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/company</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Additional Info Tab [No requests]" enabled="true"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Enter Mandatory fields and Save [No Mandatory Fields]" enabled="true"/>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T023z_AssociationsTab" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:50,&quot;pageIndex&quot;:1,&quot;companyIds&quot;:[${cCompanyId2}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drug/companyassociations</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="--Notes Tab [No requests]" enabled="true"/>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T024z_SaveNotes" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cCompanyId2},&quot;updateType&quot;:3,&quot;notes&quot;:[{&quot;id&quot;:-1,&quot;type&quot;:{&quot;id&quot;:2,&quot;value&quot;:&quot;Private&quot;},&quot;date&quot;:&quot;${__time(yyyy-MM-dd&apos;T&apos;hh:mm:ss.SSS&apos;Z&apos;,)}&quot;,&quot;text&quot;:&quot;Test&quot;}],&quot;recordStartDateTime&quot;:&quot;Thu, 14 Oct 2021 05:16:07 GMT&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/company</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S06_Company_T025z_AuditTrail" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T025a_CompanyAuditEntry_SearchAuditEntry" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pageIndex&quot;:1,&quot;rowCount&quot;:0,&quot;pageSize&quot;:100,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;EntityPrimaryKey&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:${cCompanyId2},&quot;condition&quot;:0}],&quot;sortOrder&quot;:[{&quot;columnName&quot;:&quot;All&quot;,&quot;isDescendingOrder&quot;:false}],&quot;resultOptions&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/CompanyAuditEntry/SearchAuditEntry</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T025b_Company_AuditTrialHistory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Company/AuditTrialHistory/${cCompanyId2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_Company_T026z_Publish" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:${cCompanyId2},&quot;ingestedId&quot;:0,&quot;updateType&quot;:5,&quot;prodStatusID&quot;:4,&quot;previousProductionStatus&quot;:6,&quot;recordStartDateTime&quot;:&quot;Thu, 14 Oct 2021 05:16:59 GMT&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/company</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Logout" enabled="false"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-766" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/ancillaryData/indication</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/logout</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-767" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="wa" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">wa</stringProp>
                    <stringProp name="Argument.value">wsignin1.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="idpflag" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">idpflag</stringProp>
                    <stringProp name="Argument.value">direct</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="wreply" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">wreply</stringProp>
                    <stringProp name="Argument.value">${scheme}://login.microsoftonline.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/ancillaryData/indication</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Me.srf</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">iframe</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="S07_Administrator" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(pRampupDuration)}</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller [Login]" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S07_Administrator_T001z_Login" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T001a_Login_Landing" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">ui1.prd.dna.informa-labs.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T001b_Login_discovery_instance" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="api-version" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">api-version</stringProp>
                    <stringProp name="Argument.value">1.1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="authorization_endpoint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">authorization_endpoint</stringProp>
                    <stringProp name="Argument.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/common//discovery/instance</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T001c_Login_openid_configuration" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/v2.0/.well-known/openid-configuration</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T001d_Login_authorize_1" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">id_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="canary" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">canary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ctx" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ctx</stringProp>
                <stringProp name="RegexExtractor.regex">ctx%3d(.+?)\\</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="flowToken" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">flowToken</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sFT&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">hpgrequestid</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Me.htm-50" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Me.htm</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Moz" elementType="Header">
                    <stringProp name="Header.name">X-Moz</stringProp>
                    <stringProp name="Header.value">prefetch</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T001e_Login_GetCredentialType" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;username&quot;:&quot;${pUsername}&quot;,&quot;isOtherIdpSupported&quot;:true,&quot;checkPhones&quot;:false,&quot;isRemoteNGCSupported&quot;:true,&quot;isCookieBannerShown&quot;:false,&quot;isFidoSupported&quot;:true,&quot;originalRequest&quot;:&quot;${ctx}&quot;,&quot;country&quot;:&quot;PL&quot;,&quot;forceotclogin&quot;:false,&quot;isExternalFederationDisallowed&quot;:false,&quot;isRemoteConnectSupported&quot;:false,&quot;federationFlags&quot;:0,&quot;isSignup&quot;:false,&quot;flowToken&quot;:&quot;${flowToken}&quot;,&quot;isAccessPassSupported&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/GetCredentialType?mkt=en-US</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize?response_type=id_token&amp;scope=${scheme}%3A%2F%2Fmeenakshimuralidharanmindtr.onmicrosoft.com%2Fec9d67a6-4db3-4c2b-9629-829003e10247%2Fuser%20openid%20profile&amp;client_id=7f2d1e8b-4209-482f-b1d9-470c988a3a0a&amp;redirect_uri=${scheme}%3A%2F%2Fui1.prd.dna.informa-labs.com&amp;state=eyJpZCI6ImRkOTc2N2QyLTY4MWMtNGM3Zi04OTY5LTQ2YjkwOWEzZTM3MCIsInRzIjoxNjM0NzIwNTQ0LCJtZXRob2QiOiJyZWRpcmVjdEludGVyYWN0aW9uIn0%3D&amp;nonce=4c1a38ad-64f5-42df-b0c3-ff53167f0e1d&amp;client_info=1&amp;x-client-SKU=MSAL.JS&amp;x-client-Ver=1.4.14&amp;client-request-id=db3e0e67-a0c5-43e8-acb1-41fe59887d30&amp;response_mode=fragment</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">1800</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">AQABAAAAAAD--DLA3VO7QrddgJg7WevrWAiEmTLPW-qImBEU9wOnFRjt-1R3fEW1AN1Dcy71PBjgcAg3oLENFSL6p2jLWKXuLzQBUU4kS0Llp4oDnSb4VAzTddCyOvjOXBs6NXVYF47NaBPlhMNDa6wyolntBJbG8M5G56DMExb5zJz-mmAOq6S6s8X3uX5cz00eh_utlEUL8ri4zJgvN2_yZL3JSmztyw1LCV84JtpJdpOex6KIzCAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">ac7e0214-5c43-485a-858a-f83153fcb800</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1104</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">db3e0e67-a0c5-43e8-acb1-41fe59887d30</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T001f_Login_login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="i13" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i13</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="loginfmt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">loginfmt</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrt</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrtPartition" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrtPartition</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisRegion" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisRegion</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisScaleUnit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisScaleUnit</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="passwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">passwd</stringProp>
                    <stringProp name="Argument.value">${pPassword}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ps" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ps</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCDefaultType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCDefaultType</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCEntropy" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCEntropy</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCSLK" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCSLK</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                    <stringProp name="Argument.value">${canary}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                    <stringProp name="Argument.value">${ctx}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                    <stringProp name="Argument.value">${hpgrequestid}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                    <stringProp name="Argument.value">${flowToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PPSX" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">PPSX</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="NewUser" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">NewUser</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="FoundMSAs" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">FoundMSAs</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fspost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fspost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i21" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i21</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CookieDisclosure" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CookieDisclosure</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="IsFidoSupported" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">IsFidoSupported</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="isSignupPost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">isSignupPost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i2</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i17" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i17</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i18" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i18</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">32731</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize?response_type=id_token&amp;scope=${scheme}%3A%2F%2Fmeenakshimuralidharanmindtr.onmicrosoft.com%2Fec9d67a6-4db3-4c2b-9629-829003e10247%2Fuser%20openid%20profile&amp;client_id=7f2d1e8b-4209-482f-b1d9-470c988a3a0a&amp;redirect_uri=${scheme}%3A%2F%2Fui1.prd.dna.informa-labs.com&amp;state=eyJpZCI6ImRkOTc2N2QyLTY4MWMtNGM3Zi04OTY5LTQ2YjkwOWEzZTM3MCIsInRzIjoxNjM0NzIwNTQ0LCJtZXRob2QiOiJyZWRpcmVjdEludGVyYWN0aW9uIn0%3D&amp;nonce=4c1a38ad-64f5-42df-b0c3-ff53167f0e1d&amp;client_info=1&amp;x-client-SKU=MSAL.JS&amp;x-client-Ver=1.4.14&amp;client-request-id=db3e0e67-a0c5-43e8-acb1-41fe59887d30&amp;response_mode=fragment</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="canary" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">canary1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ctx" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ctx1</stringProp>
                <stringProp name="RegexExtractor.regex">ctx%3d(.+?)\\</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="flowToken" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">flowToken1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sFT&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">hpgrequestid1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T001g_Login_kmsi" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">28</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i2</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i17" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i17</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i18" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i18</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">10167</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${canary1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${ctx1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${hpgrequestid1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${flowToken1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/kmsi</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/login</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T001h_Login_authorize_2" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com/auth.html</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login_hint</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="prompt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">prompt</stringProp>
                    <stringProp name="Argument.value">none</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">iframe</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T001i_Login_authorize_3" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login_hint</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">token</stringProp>
                <stringProp name="RegexExtractor.regex">access_token=(.+?)&amp;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1615526678">not_found</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">token</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
                <intProp name="OnError.action">4</intProp>
              </ResultAction>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S07_Administrator_T002z_AdminTab" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T002a_authorization_user" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/authorization/user</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T002b_DataSourceGroup" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/DataSourceGroup</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Ancillary Data -- No requests" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T003z_DataSource" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/DataSource</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
            <stringProp name="RandomTimer.range">1000</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T004z_UserRoles&amp;Permission_UserCompany" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/Processor/GetAll/true</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
            <stringProp name="RandomTimer.range">1000</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T005z_UserRoles&amp;Permission_UserGroups" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/UserGroup</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
            <stringProp name="RandomTimer.range">1000</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S07_Administrator_T006z_UserRoles&amp;Permission_Users" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T006a_UserGroup" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/UserGroup</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T006b_User_UserRole_true" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/User/UserRole/true</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
            <stringProp name="RandomTimer.range">1000</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S07_Administrator_T007z_UserRoles&amp;Permission_RolesAndPermission" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T007a_Role_GetPermissionGroup" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Role/GetPermissionGroup</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T007b_Role" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Role</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
            <stringProp name="RandomTimer.range">1000</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T008z_Ageing_Drugs" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/drugAgeing</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
            <stringProp name="RandomTimer.range">1000</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T009z_Ageing_Trials" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ageing</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
            <stringProp name="RandomTimer.range">1000</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T010z_Ageing_Person" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/personAgeing</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
            <stringProp name="RandomTimer.range">1000</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T011z_Ageing_Company" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/companyAgeing</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
            <stringProp name="RandomTimer.range">1000</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T012z_Ageing_Organization" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/organizationAgeing</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
            <stringProp name="RandomTimer.range">1000</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S07_Administrator_T013z_QueueSetup" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T013a_Queue_Masters" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Queue/Masters</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_Administrator_T013b_Queue" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">admin.prd.dna.informa-labs.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/Queue</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${host}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="S08_AgeingReport" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(pRampupDuration)}</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller [Login]" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S08_AgeingReport_T001z_Login" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S08_AgeingReport_T001a_Login_Landing" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">ui1.prd.dna.informa-labs.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S08_AgeingReport_T001b_Login_discovery_instance" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="api-version" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">api-version</stringProp>
                    <stringProp name="Argument.value">1.1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="authorization_endpoint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">authorization_endpoint</stringProp>
                    <stringProp name="Argument.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/common//discovery/instance</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S08_AgeingReport_T001c_Login_openid_configuration" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/v2.0/.well-known/openid-configuration</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S08_AgeingReport_T001d_Login_authorize_1" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">id_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="canary" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">canary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ctx" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ctx</stringProp>
                <stringProp name="RegexExtractor.regex">ctx%3d(.+?)\\</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="flowToken" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">flowToken</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sFT&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">hpgrequestid</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Me.htm-50" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Me.htm</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Moz" elementType="Header">
                    <stringProp name="Header.name">X-Moz</stringProp>
                    <stringProp name="Header.value">prefetch</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S08_AgeingReport_T001e_Login_GetCredentialType" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;username&quot;:&quot;${pUsername}&quot;,&quot;isOtherIdpSupported&quot;:true,&quot;checkPhones&quot;:false,&quot;isRemoteNGCSupported&quot;:true,&quot;isCookieBannerShown&quot;:false,&quot;isFidoSupported&quot;:true,&quot;originalRequest&quot;:&quot;${ctx}&quot;,&quot;country&quot;:&quot;PL&quot;,&quot;forceotclogin&quot;:false,&quot;isExternalFederationDisallowed&quot;:false,&quot;isRemoteConnectSupported&quot;:false,&quot;federationFlags&quot;:0,&quot;isSignup&quot;:false,&quot;flowToken&quot;:&quot;${flowToken}&quot;,&quot;isAccessPassSupported&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/GetCredentialType?mkt=en-US</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize?response_type=id_token&amp;scope=${scheme}%3A%2F%2Fmeenakshimuralidharanmindtr.onmicrosoft.com%2Fec9d67a6-4db3-4c2b-9629-829003e10247%2Fuser%20openid%20profile&amp;client_id=7f2d1e8b-4209-482f-b1d9-470c988a3a0a&amp;redirect_uri=${scheme}%3A%2F%2Fui1.prd.dna.informa-labs.com&amp;state=eyJpZCI6ImRkOTc2N2QyLTY4MWMtNGM3Zi04OTY5LTQ2YjkwOWEzZTM3MCIsInRzIjoxNjM0NzIwNTQ0LCJtZXRob2QiOiJyZWRpcmVjdEludGVyYWN0aW9uIn0%3D&amp;nonce=4c1a38ad-64f5-42df-b0c3-ff53167f0e1d&amp;client_info=1&amp;x-client-SKU=MSAL.JS&amp;x-client-Ver=1.4.14&amp;client-request-id=db3e0e67-a0c5-43e8-acb1-41fe59887d30&amp;response_mode=fragment</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">1800</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">AQABAAAAAAD--DLA3VO7QrddgJg7WevrWAiEmTLPW-qImBEU9wOnFRjt-1R3fEW1AN1Dcy71PBjgcAg3oLENFSL6p2jLWKXuLzQBUU4kS0Llp4oDnSb4VAzTddCyOvjOXBs6NXVYF47NaBPlhMNDa6wyolntBJbG8M5G56DMExb5zJz-mmAOq6S6s8X3uX5cz00eh_utlEUL8ri4zJgvN2_yZL3JSmztyw1LCV84JtpJdpOex6KIzCAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">ac7e0214-5c43-485a-858a-f83153fcb800</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1104</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">db3e0e67-a0c5-43e8-acb1-41fe59887d30</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S08_AgeingReport_T001f_Login_login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="i13" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i13</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="loginfmt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">loginfmt</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrt</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrtPartition" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrtPartition</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisRegion" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisRegion</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisScaleUnit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisScaleUnit</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="passwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">passwd</stringProp>
                    <stringProp name="Argument.value">${pPassword}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ps" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ps</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCDefaultType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCDefaultType</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCEntropy" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCEntropy</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCSLK" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCSLK</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                    <stringProp name="Argument.value">${canary}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                    <stringProp name="Argument.value">${ctx}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                    <stringProp name="Argument.value">${hpgrequestid}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                    <stringProp name="Argument.value">${flowToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PPSX" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">PPSX</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="NewUser" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">NewUser</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="FoundMSAs" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">FoundMSAs</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fspost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fspost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i21" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i21</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CookieDisclosure" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CookieDisclosure</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="IsFidoSupported" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">IsFidoSupported</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="isSignupPost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">isSignupPost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i2</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i17" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i17</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i18" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i18</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">32731</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize?response_type=id_token&amp;scope=${scheme}%3A%2F%2Fmeenakshimuralidharanmindtr.onmicrosoft.com%2Fec9d67a6-4db3-4c2b-9629-829003e10247%2Fuser%20openid%20profile&amp;client_id=7f2d1e8b-4209-482f-b1d9-470c988a3a0a&amp;redirect_uri=${scheme}%3A%2F%2Fui1.prd.dna.informa-labs.com&amp;state=eyJpZCI6ImRkOTc2N2QyLTY4MWMtNGM3Zi04OTY5LTQ2YjkwOWEzZTM3MCIsInRzIjoxNjM0NzIwNTQ0LCJtZXRob2QiOiJyZWRpcmVjdEludGVyYWN0aW9uIn0%3D&amp;nonce=4c1a38ad-64f5-42df-b0c3-ff53167f0e1d&amp;client_info=1&amp;x-client-SKU=MSAL.JS&amp;x-client-Ver=1.4.14&amp;client-request-id=db3e0e67-a0c5-43e8-acb1-41fe59887d30&amp;response_mode=fragment</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="canary" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">canary1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ctx" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ctx1</stringProp>
                <stringProp name="RegexExtractor.regex">ctx%3d(.+?)\\</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="flowToken" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">flowToken1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sFT&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">hpgrequestid1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S08_AgeingReport_T001g_Login_kmsi" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">28</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i2</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i17" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i17</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i18" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i18</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">10167</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${canary1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${ctx1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${hpgrequestid1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${flowToken1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/kmsi</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/login</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S08_AgeingReport_T001h_Login_authorize_2" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com/auth.html</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login_hint</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="prompt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">prompt</stringProp>
                    <stringProp name="Argument.value">none</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">iframe</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S08_AgeingReport_T001i_Login_authorize_3" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login_hint</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">token</stringProp>
                <stringProp name="RegexExtractor.regex">access_token=(.+?)&amp;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1615526678">not_found</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">token</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
                <intProp name="OnError.action">4</intProp>
              </ResultAction>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S08_AgeingReport_T002z_api_AgeingStatisticsReport" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">report-api.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/AgeingStatisticsReport/08-31-2021</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">${scheme}://${host}/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">${scheme}://${host}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${pThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">60000</stringProp>
            <stringProp name="RandomTimer.range">30000</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="S09_ComplexSearch" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(pRampupDuration)}</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller [Login]" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S09_ComplexSearch_T001z_Login" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T001a_Login_Landing" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">ui1.prd.dna.informa-labs.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T001b_Login_discovery_instance" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="api-version" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">api-version</stringProp>
                    <stringProp name="Argument.value">1.1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="authorization_endpoint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">authorization_endpoint</stringProp>
                    <stringProp name="Argument.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/common//discovery/instance</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T001c_Login_openid_configuration" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/v2.0/.well-known/openid-configuration</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T001d_Login_authorize_1" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">id_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="canary" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">canary</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ctx" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ctx</stringProp>
                <stringProp name="RegexExtractor.regex">ctx%3d(.+?)\\</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="flowToken" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">flowToken</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sFT&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">hpgrequestid</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Me.htm-50" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Me.htm</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Moz" elementType="Header">
                    <stringProp name="Header.name">X-Moz</stringProp>
                    <stringProp name="Header.value">prefetch</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T001e_Login_GetCredentialType" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;username&quot;:&quot;${pUsername}&quot;,&quot;isOtherIdpSupported&quot;:true,&quot;checkPhones&quot;:false,&quot;isRemoteNGCSupported&quot;:true,&quot;isCookieBannerShown&quot;:false,&quot;isFidoSupported&quot;:true,&quot;originalRequest&quot;:&quot;${ctx}&quot;,&quot;country&quot;:&quot;PL&quot;,&quot;forceotclogin&quot;:false,&quot;isExternalFederationDisallowed&quot;:false,&quot;isRemoteConnectSupported&quot;:false,&quot;federationFlags&quot;:0,&quot;isSignup&quot;:false,&quot;flowToken&quot;:&quot;${flowToken}&quot;,&quot;isAccessPassSupported&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/common/GetCredentialType?mkt=en-US</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize?response_type=id_token&amp;scope=${scheme}%3A%2F%2Fmeenakshimuralidharanmindtr.onmicrosoft.com%2Fec9d67a6-4db3-4c2b-9629-829003e10247%2Fuser%20openid%20profile&amp;client_id=7f2d1e8b-4209-482f-b1d9-470c988a3a0a&amp;redirect_uri=${scheme}%3A%2F%2Fui1.prd.dna.informa-labs.com&amp;state=eyJpZCI6ImRkOTc2N2QyLTY4MWMtNGM3Zi04OTY5LTQ2YjkwOWEzZTM3MCIsInRzIjoxNjM0NzIwNTQ0LCJtZXRob2QiOiJyZWRpcmVjdEludGVyYWN0aW9uIn0%3D&amp;nonce=4c1a38ad-64f5-42df-b0c3-ff53167f0e1d&amp;client_info=1&amp;x-client-SKU=MSAL.JS&amp;x-client-Ver=1.4.14&amp;client-request-id=db3e0e67-a0c5-43e8-acb1-41fe59887d30&amp;response_mode=fragment</stringProp>
                  </elementProp>
                  <elementProp name="hpgact" elementType="Header">
                    <stringProp name="Header.name">hpgact</stringProp>
                    <stringProp name="Header.value">1800</stringProp>
                  </elementProp>
                  <elementProp name="canary" elementType="Header">
                    <stringProp name="Header.name">canary</stringProp>
                    <stringProp name="Header.value">AQABAAAAAAD--DLA3VO7QrddgJg7WevrWAiEmTLPW-qImBEU9wOnFRjt-1R3fEW1AN1Dcy71PBjgcAg3oLENFSL6p2jLWKXuLzQBUU4kS0Llp4oDnSb4VAzTddCyOvjOXBs6NXVYF47NaBPlhMNDa6wyolntBJbG8M5G56DMExb5zJz-mmAOq6S6s8X3uX5cz00eh_utlEUL8ri4zJgvN2_yZL3JSmztyw1LCV84JtpJdpOex6KIzCAA</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="Header">
                    <stringProp name="Header.name">hpgrequestid</stringProp>
                    <stringProp name="Header.value">ac7e0214-5c43-485a-858a-f83153fcb800</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="hpgid" elementType="Header">
                    <stringProp name="Header.name">hpgid</stringProp>
                    <stringProp name="Header.value">1104</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">db3e0e67-a0c5-43e8-acb1-41fe59887d30</stringProp>
                  </elementProp>
                  <elementProp name="Content-type" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T001f_Login_login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="i13" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i13</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="loginfmt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">loginfmt</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrt</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lrtPartition" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lrtPartition</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisRegion" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisRegion</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hisScaleUnit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hisScaleUnit</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="passwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">passwd</stringProp>
                    <stringProp name="Argument.value">${pPassword}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ps" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ps</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCDefaultType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCDefaultType</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCEntropy" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCEntropy</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="psRNGCSLK" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">psRNGCSLK</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                    <stringProp name="Argument.value">${canary}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                    <stringProp name="Argument.value">${ctx}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                    <stringProp name="Argument.value">${hpgrequestid}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                    <stringProp name="Argument.value">${flowToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PPSX" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">PPSX</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="NewUser" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">NewUser</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="FoundMSAs" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">FoundMSAs</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fspost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fspost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i21" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i21</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CookieDisclosure" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CookieDisclosure</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="IsFidoSupported" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">IsFidoSupported</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="isSignupPost" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">isSignupPost</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i2</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i17" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i17</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i18" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i18</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">32731</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize?response_type=id_token&amp;scope=${scheme}%3A%2F%2Fmeenakshimuralidharanmindtr.onmicrosoft.com%2Fec9d67a6-4db3-4c2b-9629-829003e10247%2Fuser%20openid%20profile&amp;client_id=7f2d1e8b-4209-482f-b1d9-470c988a3a0a&amp;redirect_uri=${scheme}%3A%2F%2Fui1.prd.dna.informa-labs.com&amp;state=eyJpZCI6ImRkOTc2N2QyLTY4MWMtNGM3Zi04OTY5LTQ2YjkwOWEzZTM3MCIsInRzIjoxNjM0NzIwNTQ0LCJtZXRob2QiOiJyZWRpcmVjdEludGVyYWN0aW9uIn0%3D&amp;nonce=4c1a38ad-64f5-42df-b0c3-ff53167f0e1d&amp;client_info=1&amp;x-client-SKU=MSAL.JS&amp;x-client-Ver=1.4.14&amp;client-request-id=db3e0e67-a0c5-43e8-acb1-41fe59887d30&amp;response_mode=fragment</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="canary" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">canary1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;canary&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ctx" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ctx1</stringProp>
                <stringProp name="RegexExtractor.regex">ctx%3d(.+?)\\</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="flowToken" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">flowToken1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sFT&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="hpgrequestid" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">hpgrequestid1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;sessionId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T001g_Login_kmsi" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="LoginOptions" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginOptions</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">28</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i2</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i17" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i17</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i18" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i18</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="i19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">i19</stringProp>
                    <stringProp name="Argument.value">10167</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="canary" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${canary1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">canary</stringProp>
                  </elementProp>
                  <elementProp name="ctx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${ctx1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ctx</stringProp>
                  </elementProp>
                  <elementProp name="hpgrequestid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${hpgrequestid1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">hpgrequestid</stringProp>
                  </elementProp>
                  <elementProp name="flowToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${flowToken1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">flowToken</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/kmsi</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com/d6226454-95de-49e5-a725-aa078e128080/login</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://login.microsoftonline.com</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T001h_Login_authorize_2" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com/auth.html</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login_hint</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="prompt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">prompt</stringProp>
                    <stringProp name="Argument.value">none</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">iframe</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T001i_Login_authorize_3" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://meenakshimuralidharanmindtr.onmicrosoft.com/ec9d67a6-4db3-4c2b-9629-829003e10247/user openid profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">7f2d1e8b-4209-482f-b1d9-470c988a3a0a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://ui1.prd.dna.informa-labs.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${__base64Encode({&quot;id&quot;:&quot;${__UUID}&quot;\,&quot;ts&quot;:${__time()}\,&quot;method&quot;:&quot;redirectInteraction&quot;},)}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">MSAL.JS</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="x-client-Ver" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-Ver</stringProp>
                    <stringProp name="Argument.value">1.4.14</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">login_hint</stringProp>
                    <stringProp name="Argument.value">${pUsername}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client-request-id</stringProp>
                    <stringProp name="Argument.value">${__UUID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_mode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">response_mode</stringProp>
                    <stringProp name="Argument.value">fragment</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/d6226454-95de-49e5-a725-aa078e128080/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://ui1.prd.dna.informa-labs.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">token</stringProp>
                <stringProp name="RegexExtractor.regex">access_token=(.+?)&amp;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not_found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1615526678">not_found</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">token</stringProp>
              </ResponseAssertion>
              <hashTree/>
              <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
                <intProp name="OnError.action">4</intProp>
              </ResultAction>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T002z_ClinicalTrials_Ids_500Plus" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;resultOptions&quot;:{&quot;showColumns&quot;:[&quot;secondaryDrugs&quot;,&quot;collaborators&quot;,&quot;id&quot;,&quot;patientSegments&quot;,&quot;diseaseTypes&quot;,&quot;sponsors&quot;,&quot;primaryDrugs&quot;,&quot;protocolIds&quot;,&quot;trialTitle&quot;,&quot;trialPhase&quot;,&quot;trialStatus&quot;,&quot;productionStatusId&quot;]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;id&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1&quot;,&quot;searchValueName&quot;:&quot;1&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;4&quot;,&quot;searchValueName&quot;:&quot;4&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;5&quot;,&quot;searchValueName&quot;:&quot;5&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;378304&quot;,&quot;searchValueName&quot;:&quot;378304&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410132&quot;,&quot;searchValueName&quot;:&quot;410132&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410131&quot;,&quot;searchValueName&quot;:&quot;410131&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410159&quot;,&quot;searchValueName&quot;:&quot;410159&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410158&quot;,&quot;searchValueName&quot;:&quot;410158&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410138&quot;,&quot;searchValueName&quot;:&quot;410138&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410190&quot;,&quot;searchValueName&quot;:&quot;410190&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410184&quot;,&quot;searchValueName&quot;:&quot;410184&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410169&quot;,&quot;searchValueName&quot;:&quot;410169&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410152&quot;,&quot;searchValueName&quot;:&quot;410152&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410201&quot;,&quot;searchValueName&quot;:&quot;410201&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410150&quot;,&quot;searchValueName&quot;:&quot;410150&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410193&quot;,&quot;searchValueName&quot;:&quot;410193&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410135&quot;,&quot;searchValueName&quot;:&quot;410135&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410167&quot;,&quot;searchValueName&quot;:&quot;410167&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410161&quot;,&quot;searchValueName&quot;:&quot;410161&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410145&quot;,&quot;searchValueName&quot;:&quot;410145&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410192&quot;,&quot;searchValueName&quot;:&quot;410192&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410196&quot;,&quot;searchValueName&quot;:&quot;410196&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410203&quot;,&quot;searchValueName&quot;:&quot;410203&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410165&quot;,&quot;searchValueName&quot;:&quot;410165&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410172&quot;,&quot;searchValueName&quot;:&quot;410172&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410146&quot;,&quot;searchValueName&quot;:&quot;410146&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410168&quot;,&quot;searchValueName&quot;:&quot;410168&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410199&quot;,&quot;searchValueName&quot;:&quot;410199&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410149&quot;,&quot;searchValueName&quot;:&quot;410149&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410205&quot;,&quot;searchValueName&quot;:&quot;410205&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410194&quot;,&quot;searchValueName&quot;:&quot;410194&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410187&quot;,&quot;searchValueName&quot;:&quot;410187&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410202&quot;,&quot;searchValueName&quot;:&quot;410202&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410157&quot;,&quot;searchValueName&quot;:&quot;410157&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410182&quot;,&quot;searchValueName&quot;:&quot;410182&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410134&quot;,&quot;searchValueName&quot;:&quot;410134&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410156&quot;,&quot;searchValueName&quot;:&quot;410156&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410207&quot;,&quot;searchValueName&quot;:&quot;410207&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410173&quot;,&quot;searchValueName&quot;:&quot;410173&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410204&quot;,&quot;searchValueName&quot;:&quot;410204&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410186&quot;,&quot;searchValueName&quot;:&quot;410186&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410147&quot;,&quot;searchValueName&quot;:&quot;410147&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410178&quot;,&quot;searchValueName&quot;:&quot;410178&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410160&quot;,&quot;searchValueName&quot;:&quot;410160&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410142&quot;,&quot;searchValueName&quot;:&quot;410142&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410179&quot;,&quot;searchValueName&quot;:&quot;410179&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410206&quot;,&quot;searchValueName&quot;:&quot;410206&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410140&quot;,&quot;searchValueName&quot;:&quot;410140&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410208&quot;,&quot;searchValueName&quot;:&quot;410208&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410137&quot;,&quot;searchValueName&quot;:&quot;410137&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410198&quot;,&quot;searchValueName&quot;:&quot;410198&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410144&quot;,&quot;searchValueName&quot;:&quot;410144&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410143&quot;,&quot;searchValueName&quot;:&quot;410143&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410200&quot;,&quot;searchValueName&quot;:&quot;410200&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410195&quot;,&quot;searchValueName&quot;:&quot;410195&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410174&quot;,&quot;searchValueName&quot;:&quot;410174&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410176&quot;,&quot;searchValueName&quot;:&quot;410176&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410166&quot;,&quot;searchValueName&quot;:&quot;410166&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410155&quot;,&quot;searchValueName&quot;:&quot;410155&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410191&quot;,&quot;searchValueName&quot;:&quot;410191&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410177&quot;,&quot;searchValueName&quot;:&quot;410177&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410183&quot;,&quot;searchValueName&quot;:&quot;410183&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410153&quot;,&quot;searchValueName&quot;:&quot;410153&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410197&quot;,&quot;searchValueName&quot;:&quot;410197&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410141&quot;,&quot;searchValueName&quot;:&quot;410141&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410189&quot;,&quot;searchValueName&quot;:&quot;410189&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410180&quot;,&quot;searchValueName&quot;:&quot;410180&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410175&quot;,&quot;searchValueName&quot;:&quot;410175&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410188&quot;,&quot;searchValueName&quot;:&quot;410188&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410151&quot;,&quot;searchValueName&quot;:&quot;410151&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410185&quot;,&quot;searchValueName&quot;:&quot;410185&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410164&quot;,&quot;searchValueName&quot;:&quot;410164&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410133&quot;,&quot;searchValueName&quot;:&quot;410133&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410181&quot;,&quot;searchValueName&quot;:&quot;410181&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410163&quot;,&quot;searchValueName&quot;:&quot;410163&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410162&quot;,&quot;searchValueName&quot;:&quot;410162&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410154&quot;,&quot;searchValueName&quot;:&quot;410154&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410136&quot;,&quot;searchValueName&quot;:&quot;410136&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410171&quot;,&quot;searchValueName&quot;:&quot;410171&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410170&quot;,&quot;searchValueName&quot;:&quot;410170&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410148&quot;,&quot;searchValueName&quot;:&quot;410148&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410139&quot;,&quot;searchValueName&quot;:&quot;410139&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;16167&quot;,&quot;searchValueName&quot;:&quot;16167&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;400445&quot;,&quot;searchValueName&quot;:&quot;400445&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410064&quot;,&quot;searchValueName&quot;:&quot;410064&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410101&quot;,&quot;searchValueName&quot;:&quot;410101&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410053&quot;,&quot;searchValueName&quot;:&quot;410053&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410074&quot;,&quot;searchValueName&quot;:&quot;410074&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410059&quot;,&quot;searchValueName&quot;:&quot;410059&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410108&quot;,&quot;searchValueName&quot;:&quot;410108&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410084&quot;,&quot;searchValueName&quot;:&quot;410084&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410065&quot;,&quot;searchValueName&quot;:&quot;410065&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410048&quot;,&quot;searchValueName&quot;:&quot;410048&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410072&quot;,&quot;searchValueName&quot;:&quot;410072&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410093&quot;,&quot;searchValueName&quot;:&quot;410093&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410092&quot;,&quot;searchValueName&quot;:&quot;410092&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410038&quot;,&quot;searchValueName&quot;:&quot;410038&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410057&quot;,&quot;searchValueName&quot;:&quot;410057&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410073&quot;,&quot;searchValueName&quot;:&quot;410073&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410077&quot;,&quot;searchValueName&quot;:&quot;410077&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410082&quot;,&quot;searchValueName&quot;:&quot;410082&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410036&quot;,&quot;searchValueName&quot;:&quot;410036&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410054&quot;,&quot;searchValueName&quot;:&quot;410054&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410044&quot;,&quot;searchValueName&quot;:&quot;410044&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410034&quot;,&quot;searchValueName&quot;:&quot;410034&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410099&quot;,&quot;searchValueName&quot;:&quot;410099&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410102&quot;,&quot;searchValueName&quot;:&quot;410102&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410066&quot;,&quot;searchValueName&quot;:&quot;410066&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410045&quot;,&quot;searchValueName&quot;:&quot;410045&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410060&quot;,&quot;searchValueName&quot;:&quot;410060&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410114&quot;,&quot;searchValueName&quot;:&quot;410114&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410058&quot;,&quot;searchValueName&quot;:&quot;410058&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410041&quot;,&quot;searchValueName&quot;:&quot;410041&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410085&quot;,&quot;searchValueName&quot;:&quot;410085&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410040&quot;,&quot;searchValueName&quot;:&quot;410040&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410079&quot;,&quot;searchValueName&quot;:&quot;410079&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410029&quot;,&quot;searchValueName&quot;:&quot;410029&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410075&quot;,&quot;searchValueName&quot;:&quot;410075&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410026&quot;,&quot;searchValueName&quot;:&quot;410026&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410107&quot;,&quot;searchValueName&quot;:&quot;410107&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410071&quot;,&quot;searchValueName&quot;:&quot;410071&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410120&quot;,&quot;searchValueName&quot;:&quot;410120&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410126&quot;,&quot;searchValueName&quot;:&quot;410126&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410078&quot;,&quot;searchValueName&quot;:&quot;410078&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410061&quot;,&quot;searchValueName&quot;:&quot;410061&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410094&quot;,&quot;searchValueName&quot;:&quot;410094&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410122&quot;,&quot;searchValueName&quot;:&quot;410122&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410081&quot;,&quot;searchValueName&quot;:&quot;410081&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410105&quot;,&quot;searchValueName&quot;:&quot;410105&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410123&quot;,&quot;searchValueName&quot;:&quot;410123&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410119&quot;,&quot;searchValueName&quot;:&quot;410119&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410116&quot;,&quot;searchValueName&quot;:&quot;410116&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410115&quot;,&quot;searchValueName&quot;:&quot;410115&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410047&quot;,&quot;searchValueName&quot;:&quot;410047&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410130&quot;,&quot;searchValueName&quot;:&quot;410130&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410121&quot;,&quot;searchValueName&quot;:&quot;410121&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410109&quot;,&quot;searchValueName&quot;:&quot;410109&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410039&quot;,&quot;searchValueName&quot;:&quot;410039&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410035&quot;,&quot;searchValueName&quot;:&quot;410035&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410129&quot;,&quot;searchValueName&quot;:&quot;410129&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410032&quot;,&quot;searchValueName&quot;:&quot;410032&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410062&quot;,&quot;searchValueName&quot;:&quot;410062&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410027&quot;,&quot;searchValueName&quot;:&quot;410027&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410033&quot;,&quot;searchValueName&quot;:&quot;410033&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410037&quot;,&quot;searchValueName&quot;:&quot;410037&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410118&quot;,&quot;searchValueName&quot;:&quot;410118&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410067&quot;,&quot;searchValueName&quot;:&quot;410067&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410042&quot;,&quot;searchValueName&quot;:&quot;410042&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410125&quot;,&quot;searchValueName&quot;:&quot;410125&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410050&quot;,&quot;searchValueName&quot;:&quot;410050&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410055&quot;,&quot;searchValueName&quot;:&quot;410055&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410046&quot;,&quot;searchValueName&quot;:&quot;410046&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410086&quot;,&quot;searchValueName&quot;:&quot;410086&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410063&quot;,&quot;searchValueName&quot;:&quot;410063&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410113&quot;,&quot;searchValueName&quot;:&quot;410113&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410028&quot;,&quot;searchValueName&quot;:&quot;410028&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410052&quot;,&quot;searchValueName&quot;:&quot;410052&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410096&quot;,&quot;searchValueName&quot;:&quot;410096&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410095&quot;,&quot;searchValueName&quot;:&quot;410095&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410068&quot;,&quot;searchValueName&quot;:&quot;410068&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410083&quot;,&quot;searchValueName&quot;:&quot;410083&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410097&quot;,&quot;searchValueName&quot;:&quot;410097&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410103&quot;,&quot;searchValueName&quot;:&quot;410103&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410070&quot;,&quot;searchValueName&quot;:&quot;410070&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410069&quot;,&quot;searchValueName&quot;:&quot;410069&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410088&quot;,&quot;searchValueName&quot;:&quot;410088&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410098&quot;,&quot;searchValueName&quot;:&quot;410098&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410089&quot;,&quot;searchValueName&quot;:&quot;410089&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410076&quot;,&quot;searchValueName&quot;:&quot;410076&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410112&quot;,&quot;searchValueName&quot;:&quot;410112&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410087&quot;,&quot;searchValueName&quot;:&quot;410087&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410025&quot;,&quot;searchValueName&quot;:&quot;410025&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410106&quot;,&quot;searchValueName&quot;:&quot;410106&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410031&quot;,&quot;searchValueName&quot;:&quot;410031&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410110&quot;,&quot;searchValueName&quot;:&quot;410110&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410111&quot;,&quot;searchValueName&quot;:&quot;410111&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410030&quot;,&quot;searchValueName&quot;:&quot;410030&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410090&quot;,&quot;searchValueName&quot;:&quot;410090&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410100&quot;,&quot;searchValueName&quot;:&quot;410100&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410049&quot;,&quot;searchValueName&quot;:&quot;410049&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410024&quot;,&quot;searchValueName&quot;:&quot;410024&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410056&quot;,&quot;searchValueName&quot;:&quot;410056&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410117&quot;,&quot;searchValueName&quot;:&quot;410117&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410043&quot;,&quot;searchValueName&quot;:&quot;410043&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410104&quot;,&quot;searchValueName&quot;:&quot;410104&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410051&quot;,&quot;searchValueName&quot;:&quot;410051&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410080&quot;,&quot;searchValueName&quot;:&quot;410080&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410091&quot;,&quot;searchValueName&quot;:&quot;410091&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410127&quot;,&quot;searchValueName&quot;:&quot;410127&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410128&quot;,&quot;searchValueName&quot;:&quot;410128&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410124&quot;,&quot;searchValueName&quot;:&quot;410124&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409972&quot;,&quot;searchValueName&quot;:&quot;409972&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409982&quot;,&quot;searchValueName&quot;:&quot;409982&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409980&quot;,&quot;searchValueName&quot;:&quot;409980&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409985&quot;,&quot;searchValueName&quot;:&quot;409985&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410005&quot;,&quot;searchValueName&quot;:&quot;410005&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410004&quot;,&quot;searchValueName&quot;:&quot;410004&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409963&quot;,&quot;searchValueName&quot;:&quot;409963&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410000&quot;,&quot;searchValueName&quot;:&quot;410000&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409992&quot;,&quot;searchValueName&quot;:&quot;409992&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409981&quot;,&quot;searchValueName&quot;:&quot;409981&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409971&quot;,&quot;searchValueName&quot;:&quot;409971&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409986&quot;,&quot;searchValueName&quot;:&quot;409986&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410008&quot;,&quot;searchValueName&quot;:&quot;410008&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410006&quot;,&quot;searchValueName&quot;:&quot;410006&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409994&quot;,&quot;searchValueName&quot;:&quot;409994&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410018&quot;,&quot;searchValueName&quot;:&quot;410018&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409991&quot;,&quot;searchValueName&quot;:&quot;409991&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409968&quot;,&quot;searchValueName&quot;:&quot;409968&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409993&quot;,&quot;searchValueName&quot;:&quot;409993&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409962&quot;,&quot;searchValueName&quot;:&quot;409962&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410003&quot;,&quot;searchValueName&quot;:&quot;410003&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409996&quot;,&quot;searchValueName&quot;:&quot;409996&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409998&quot;,&quot;searchValueName&quot;:&quot;409998&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409984&quot;,&quot;searchValueName&quot;:&quot;409984&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409964&quot;,&quot;searchValueName&quot;:&quot;409964&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409990&quot;,&quot;searchValueName&quot;:&quot;409990&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410001&quot;,&quot;searchValueName&quot;:&quot;410001&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409995&quot;,&quot;searchValueName&quot;:&quot;409995&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409969&quot;,&quot;searchValueName&quot;:&quot;409969&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410007&quot;,&quot;searchValueName&quot;:&quot;410007&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409997&quot;,&quot;searchValueName&quot;:&quot;409997&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409973&quot;,&quot;searchValueName&quot;:&quot;409973&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409965&quot;,&quot;searchValueName&quot;:&quot;409965&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410002&quot;,&quot;searchValueName&quot;:&quot;410002&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409983&quot;,&quot;searchValueName&quot;:&quot;409983&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410021&quot;,&quot;searchValueName&quot;:&quot;410021&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409959&quot;,&quot;searchValueName&quot;:&quot;409959&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410017&quot;,&quot;searchValueName&quot;:&quot;410017&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410020&quot;,&quot;searchValueName&quot;:&quot;410020&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410019&quot;,&quot;searchValueName&quot;:&quot;410019&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410022&quot;,&quot;searchValueName&quot;:&quot;410022&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409970&quot;,&quot;searchValueName&quot;:&quot;409970&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409960&quot;,&quot;searchValueName&quot;:&quot;409960&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409957&quot;,&quot;searchValueName&quot;:&quot;409957&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409979&quot;,&quot;searchValueName&quot;:&quot;409979&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409974&quot;,&quot;searchValueName&quot;:&quot;409974&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409961&quot;,&quot;searchValueName&quot;:&quot;409961&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409977&quot;,&quot;searchValueName&quot;:&quot;409977&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410023&quot;,&quot;searchValueName&quot;:&quot;410023&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409978&quot;,&quot;searchValueName&quot;:&quot;409978&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410016&quot;,&quot;searchValueName&quot;:&quot;410016&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409989&quot;,&quot;searchValueName&quot;:&quot;409989&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410012&quot;,&quot;searchValueName&quot;:&quot;410012&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410013&quot;,&quot;searchValueName&quot;:&quot;410013&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409958&quot;,&quot;searchValueName&quot;:&quot;409958&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409975&quot;,&quot;searchValueName&quot;:&quot;409975&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410014&quot;,&quot;searchValueName&quot;:&quot;410014&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410011&quot;,&quot;searchValueName&quot;:&quot;410011&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409966&quot;,&quot;searchValueName&quot;:&quot;409966&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410009&quot;,&quot;searchValueName&quot;:&quot;410009&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410015&quot;,&quot;searchValueName&quot;:&quot;410015&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409987&quot;,&quot;searchValueName&quot;:&quot;409987&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409988&quot;,&quot;searchValueName&quot;:&quot;409988&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409967&quot;,&quot;searchValueName&quot;:&quot;409967&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;410010&quot;,&quot;searchValueName&quot;:&quot;410010&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409976&quot;,&quot;searchValueName&quot;:&quot;409976&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409999&quot;,&quot;searchValueName&quot;:&quot;409999&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;8561&quot;,&quot;searchValueName&quot;:&quot;8561&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;7409&quot;,&quot;searchValueName&quot;:&quot;7409&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;8756&quot;,&quot;searchValueName&quot;:&quot;8756&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409956&quot;,&quot;searchValueName&quot;:&quot;409956&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409955&quot;,&quot;searchValueName&quot;:&quot;409955&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409954&quot;,&quot;searchValueName&quot;:&quot;409954&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409953&quot;,&quot;searchValueName&quot;:&quot;409953&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409952&quot;,&quot;searchValueName&quot;:&quot;409952&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409951&quot;,&quot;searchValueName&quot;:&quot;409951&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409950&quot;,&quot;searchValueName&quot;:&quot;409950&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409949&quot;,&quot;searchValueName&quot;:&quot;409949&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409948&quot;,&quot;searchValueName&quot;:&quot;409948&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409947&quot;,&quot;searchValueName&quot;:&quot;409947&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409946&quot;,&quot;searchValueName&quot;:&quot;409946&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409945&quot;,&quot;searchValueName&quot;:&quot;409945&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409944&quot;,&quot;searchValueName&quot;:&quot;409944&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409943&quot;,&quot;searchValueName&quot;:&quot;409943&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409942&quot;,&quot;searchValueName&quot;:&quot;409942&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409941&quot;,&quot;searchValueName&quot;:&quot;409941&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409940&quot;,&quot;searchValueName&quot;:&quot;409940&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409939&quot;,&quot;searchValueName&quot;:&quot;409939&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409938&quot;,&quot;searchValueName&quot;:&quot;409938&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409937&quot;,&quot;searchValueName&quot;:&quot;409937&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409936&quot;,&quot;searchValueName&quot;:&quot;409936&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409935&quot;,&quot;searchValueName&quot;:&quot;409935&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409934&quot;,&quot;searchValueName&quot;:&quot;409934&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409933&quot;,&quot;searchValueName&quot;:&quot;409933&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409932&quot;,&quot;searchValueName&quot;:&quot;409932&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409931&quot;,&quot;searchValueName&quot;:&quot;409931&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409930&quot;,&quot;searchValueName&quot;:&quot;409930&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409929&quot;,&quot;searchValueName&quot;:&quot;409929&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409928&quot;,&quot;searchValueName&quot;:&quot;409928&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409927&quot;,&quot;searchValueName&quot;:&quot;409927&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409926&quot;,&quot;searchValueName&quot;:&quot;409926&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409925&quot;,&quot;searchValueName&quot;:&quot;409925&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409924&quot;,&quot;searchValueName&quot;:&quot;409924&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409923&quot;,&quot;searchValueName&quot;:&quot;409923&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409922&quot;,&quot;searchValueName&quot;:&quot;409922&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409921&quot;,&quot;searchValueName&quot;:&quot;409921&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409920&quot;,&quot;searchValueName&quot;:&quot;409920&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409918&quot;,&quot;searchValueName&quot;:&quot;409918&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409917&quot;,&quot;searchValueName&quot;:&quot;409917&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409916&quot;,&quot;searchValueName&quot;:&quot;409916&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409915&quot;,&quot;searchValueName&quot;:&quot;409915&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409914&quot;,&quot;searchValueName&quot;:&quot;409914&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409913&quot;,&quot;searchValueName&quot;:&quot;409913&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409912&quot;,&quot;searchValueName&quot;:&quot;409912&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409911&quot;,&quot;searchValueName&quot;:&quot;409911&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409878&quot;,&quot;searchValueName&quot;:&quot;409878&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409876&quot;,&quot;searchValueName&quot;:&quot;409876&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409874&quot;,&quot;searchValueName&quot;:&quot;409874&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409870&quot;,&quot;searchValueName&quot;:&quot;409870&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409869&quot;,&quot;searchValueName&quot;:&quot;409869&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409868&quot;,&quot;searchValueName&quot;:&quot;409868&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409863&quot;,&quot;searchValueName&quot;:&quot;409863&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409862&quot;,&quot;searchValueName&quot;:&quot;409862&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409861&quot;,&quot;searchValueName&quot;:&quot;409861&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409859&quot;,&quot;searchValueName&quot;:&quot;409859&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409857&quot;,&quot;searchValueName&quot;:&quot;409857&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409856&quot;,&quot;searchValueName&quot;:&quot;409856&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409854&quot;,&quot;searchValueName&quot;:&quot;409854&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409848&quot;,&quot;searchValueName&quot;:&quot;409848&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409846&quot;,&quot;searchValueName&quot;:&quot;409846&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409842&quot;,&quot;searchValueName&quot;:&quot;409842&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409841&quot;,&quot;searchValueName&quot;:&quot;409841&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409835&quot;,&quot;searchValueName&quot;:&quot;409835&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409834&quot;,&quot;searchValueName&quot;:&quot;409834&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409832&quot;,&quot;searchValueName&quot;:&quot;409832&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409831&quot;,&quot;searchValueName&quot;:&quot;409831&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409824&quot;,&quot;searchValueName&quot;:&quot;409824&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409823&quot;,&quot;searchValueName&quot;:&quot;409823&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409822&quot;,&quot;searchValueName&quot;:&quot;409822&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409820&quot;,&quot;searchValueName&quot;:&quot;409820&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409819&quot;,&quot;searchValueName&quot;:&quot;409819&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409818&quot;,&quot;searchValueName&quot;:&quot;409818&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409816&quot;,&quot;searchValueName&quot;:&quot;409816&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;5153&quot;,&quot;searchValueName&quot;:&quot;5153&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;7377&quot;,&quot;searchValueName&quot;:&quot;7377&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;20104&quot;,&quot;searchValueName&quot;:&quot;20104&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;8224&quot;,&quot;searchValueName&quot;:&quot;8224&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409836&quot;,&quot;searchValueName&quot;:&quot;409836&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409907&quot;,&quot;searchValueName&quot;:&quot;409907&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409919&quot;,&quot;searchValueName&quot;:&quot;409919&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409881&quot;,&quot;searchValueName&quot;:&quot;409881&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409889&quot;,&quot;searchValueName&quot;:&quot;409889&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409897&quot;,&quot;searchValueName&quot;:&quot;409897&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409910&quot;,&quot;searchValueName&quot;:&quot;409910&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409837&quot;,&quot;searchValueName&quot;:&quot;409837&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409847&quot;,&quot;searchValueName&quot;:&quot;409847&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409855&quot;,&quot;searchValueName&quot;:&quot;409855&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409828&quot;,&quot;searchValueName&quot;:&quot;409828&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409904&quot;,&quot;searchValueName&quot;:&quot;409904&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409906&quot;,&quot;searchValueName&quot;:&quot;409906&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409890&quot;,&quot;searchValueName&quot;:&quot;409890&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409894&quot;,&quot;searchValueName&quot;:&quot;409894&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409845&quot;,&quot;searchValueName&quot;:&quot;409845&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409830&quot;,&quot;searchValueName&quot;:&quot;409830&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409843&quot;,&quot;searchValueName&quot;:&quot;409843&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409880&quot;,&quot;searchValueName&quot;:&quot;409880&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409825&quot;,&quot;searchValueName&quot;:&quot;409825&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409887&quot;,&quot;searchValueName&quot;:&quot;409887&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409901&quot;,&quot;searchValueName&quot;:&quot;409901&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409883&quot;,&quot;searchValueName&quot;:&quot;409883&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409895&quot;,&quot;searchValueName&quot;:&quot;409895&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409826&quot;,&quot;searchValueName&quot;:&quot;409826&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409833&quot;,&quot;searchValueName&quot;:&quot;409833&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409872&quot;,&quot;searchValueName&quot;:&quot;409872&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409908&quot;,&quot;searchValueName&quot;:&quot;409908&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409875&quot;,&quot;searchValueName&quot;:&quot;409875&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409852&quot;,&quot;searchValueName&quot;:&quot;409852&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409886&quot;,&quot;searchValueName&quot;:&quot;409886&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409879&quot;,&quot;searchValueName&quot;:&quot;409879&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409858&quot;,&quot;searchValueName&quot;:&quot;409858&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409853&quot;,&quot;searchValueName&quot;:&quot;409853&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409896&quot;,&quot;searchValueName&quot;:&quot;409896&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409884&quot;,&quot;searchValueName&quot;:&quot;409884&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409898&quot;,&quot;searchValueName&quot;:&quot;409898&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409885&quot;,&quot;searchValueName&quot;:&quot;409885&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409873&quot;,&quot;searchValueName&quot;:&quot;409873&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409865&quot;,&quot;searchValueName&quot;:&quot;409865&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409827&quot;,&quot;searchValueName&quot;:&quot;409827&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409909&quot;,&quot;searchValueName&quot;:&quot;409909&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409844&quot;,&quot;searchValueName&quot;:&quot;409844&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409903&quot;,&quot;searchValueName&quot;:&quot;409903&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409864&quot;,&quot;searchValueName&quot;:&quot;409864&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409849&quot;,&quot;searchValueName&quot;:&quot;409849&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409899&quot;,&quot;searchValueName&quot;:&quot;409899&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409838&quot;,&quot;searchValueName&quot;:&quot;409838&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409850&quot;,&quot;searchValueName&quot;:&quot;409850&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409877&quot;,&quot;searchValueName&quot;:&quot;409877&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409882&quot;,&quot;searchValueName&quot;:&quot;409882&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409840&quot;,&quot;searchValueName&quot;:&quot;409840&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409867&quot;,&quot;searchValueName&quot;:&quot;409867&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409829&quot;,&quot;searchValueName&quot;:&quot;409829&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409839&quot;,&quot;searchValueName&quot;:&quot;409839&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409871&quot;,&quot;searchValueName&quot;:&quot;409871&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409821&quot;,&quot;searchValueName&quot;:&quot;409821&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409905&quot;,&quot;searchValueName&quot;:&quot;409905&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409892&quot;,&quot;searchValueName&quot;:&quot;409892&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409817&quot;,&quot;searchValueName&quot;:&quot;409817&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409902&quot;,&quot;searchValueName&quot;:&quot;409902&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409900&quot;,&quot;searchValueName&quot;:&quot;409900&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409888&quot;,&quot;searchValueName&quot;:&quot;409888&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409851&quot;,&quot;searchValueName&quot;:&quot;409851&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409860&quot;,&quot;searchValueName&quot;:&quot;409860&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409866&quot;,&quot;searchValueName&quot;:&quot;409866&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409893&quot;,&quot;searchValueName&quot;:&quot;409893&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409891&quot;,&quot;searchValueName&quot;:&quot;409891&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;12014&quot;,&quot;searchValueName&quot;:&quot;12014&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409815&quot;,&quot;searchValueName&quot;:&quot;409815&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409814&quot;,&quot;searchValueName&quot;:&quot;409814&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409813&quot;,&quot;searchValueName&quot;:&quot;409813&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409812&quot;,&quot;searchValueName&quot;:&quot;409812&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409811&quot;,&quot;searchValueName&quot;:&quot;409811&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409810&quot;,&quot;searchValueName&quot;:&quot;409810&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409809&quot;,&quot;searchValueName&quot;:&quot;409809&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409808&quot;,&quot;searchValueName&quot;:&quot;409808&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409807&quot;,&quot;searchValueName&quot;:&quot;409807&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409806&quot;,&quot;searchValueName&quot;:&quot;409806&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409805&quot;,&quot;searchValueName&quot;:&quot;409805&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409804&quot;,&quot;searchValueName&quot;:&quot;409804&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409803&quot;,&quot;searchValueName&quot;:&quot;409803&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409802&quot;,&quot;searchValueName&quot;:&quot;409802&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409801&quot;,&quot;searchValueName&quot;:&quot;409801&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409800&quot;,&quot;searchValueName&quot;:&quot;409800&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409799&quot;,&quot;searchValueName&quot;:&quot;409799&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409798&quot;,&quot;searchValueName&quot;:&quot;409798&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409797&quot;,&quot;searchValueName&quot;:&quot;409797&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409796&quot;,&quot;searchValueName&quot;:&quot;409796&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409795&quot;,&quot;searchValueName&quot;:&quot;409795&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409794&quot;,&quot;searchValueName&quot;:&quot;409794&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409793&quot;,&quot;searchValueName&quot;:&quot;409793&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409792&quot;,&quot;searchValueName&quot;:&quot;409792&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409791&quot;,&quot;searchValueName&quot;:&quot;409791&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409790&quot;,&quot;searchValueName&quot;:&quot;409790&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409789&quot;,&quot;searchValueName&quot;:&quot;409789&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409788&quot;,&quot;searchValueName&quot;:&quot;409788&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409787&quot;,&quot;searchValueName&quot;:&quot;409787&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409786&quot;,&quot;searchValueName&quot;:&quot;409786&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409785&quot;,&quot;searchValueName&quot;:&quot;409785&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409784&quot;,&quot;searchValueName&quot;:&quot;409784&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409783&quot;,&quot;searchValueName&quot;:&quot;409783&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409782&quot;,&quot;searchValueName&quot;:&quot;409782&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409781&quot;,&quot;searchValueName&quot;:&quot;409781&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409780&quot;,&quot;searchValueName&quot;:&quot;409780&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409779&quot;,&quot;searchValueName&quot;:&quot;409779&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409778&quot;,&quot;searchValueName&quot;:&quot;409778&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409777&quot;,&quot;searchValueName&quot;:&quot;409777&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409776&quot;,&quot;searchValueName&quot;:&quot;409776&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409775&quot;,&quot;searchValueName&quot;:&quot;409775&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409774&quot;,&quot;searchValueName&quot;:&quot;409774&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409773&quot;,&quot;searchValueName&quot;:&quot;409773&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409772&quot;,&quot;searchValueName&quot;:&quot;409772&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409771&quot;,&quot;searchValueName&quot;:&quot;409771&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409770&quot;,&quot;searchValueName&quot;:&quot;409770&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409769&quot;,&quot;searchValueName&quot;:&quot;409769&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409768&quot;,&quot;searchValueName&quot;:&quot;409768&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409767&quot;,&quot;searchValueName&quot;:&quot;409767&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409766&quot;,&quot;searchValueName&quot;:&quot;409766&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409765&quot;,&quot;searchValueName&quot;:&quot;409765&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409764&quot;,&quot;searchValueName&quot;:&quot;409764&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409763&quot;,&quot;searchValueName&quot;:&quot;409763&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409762&quot;,&quot;searchValueName&quot;:&quot;409762&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409761&quot;,&quot;searchValueName&quot;:&quot;409761&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409760&quot;,&quot;searchValueName&quot;:&quot;409760&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409759&quot;,&quot;searchValueName&quot;:&quot;409759&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409758&quot;,&quot;searchValueName&quot;:&quot;409758&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409757&quot;,&quot;searchValueName&quot;:&quot;409757&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409756&quot;,&quot;searchValueName&quot;:&quot;409756&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409755&quot;,&quot;searchValueName&quot;:&quot;409755&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409754&quot;,&quot;searchValueName&quot;:&quot;409754&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409753&quot;,&quot;searchValueName&quot;:&quot;409753&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409752&quot;,&quot;searchValueName&quot;:&quot;409752&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409751&quot;,&quot;searchValueName&quot;:&quot;409751&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409750&quot;,&quot;searchValueName&quot;:&quot;409750&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409749&quot;,&quot;searchValueName&quot;:&quot;409749&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409748&quot;,&quot;searchValueName&quot;:&quot;409748&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409747&quot;,&quot;searchValueName&quot;:&quot;409747&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409746&quot;,&quot;searchValueName&quot;:&quot;409746&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409745&quot;,&quot;searchValueName&quot;:&quot;409745&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409744&quot;,&quot;searchValueName&quot;:&quot;409744&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409743&quot;,&quot;searchValueName&quot;:&quot;409743&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409742&quot;,&quot;searchValueName&quot;:&quot;409742&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409741&quot;,&quot;searchValueName&quot;:&quot;409741&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409740&quot;,&quot;searchValueName&quot;:&quot;409740&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409739&quot;,&quot;searchValueName&quot;:&quot;409739&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409738&quot;,&quot;searchValueName&quot;:&quot;409738&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409737&quot;,&quot;searchValueName&quot;:&quot;409737&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409736&quot;,&quot;searchValueName&quot;:&quot;409736&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409735&quot;,&quot;searchValueName&quot;:&quot;409735&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409734&quot;,&quot;searchValueName&quot;:&quot;409734&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409733&quot;,&quot;searchValueName&quot;:&quot;409733&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409732&quot;,&quot;searchValueName&quot;:&quot;409732&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409731&quot;,&quot;searchValueName&quot;:&quot;409731&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409730&quot;,&quot;searchValueName&quot;:&quot;409730&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409729&quot;,&quot;searchValueName&quot;:&quot;409729&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409728&quot;,&quot;searchValueName&quot;:&quot;409728&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409727&quot;,&quot;searchValueName&quot;:&quot;409727&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409726&quot;,&quot;searchValueName&quot;:&quot;409726&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409725&quot;,&quot;searchValueName&quot;:&quot;409725&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409724&quot;,&quot;searchValueName&quot;:&quot;409724&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409723&quot;,&quot;searchValueName&quot;:&quot;409723&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409722&quot;,&quot;searchValueName&quot;:&quot;409722&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409721&quot;,&quot;searchValueName&quot;:&quot;409721&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409720&quot;,&quot;searchValueName&quot;:&quot;409720&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409719&quot;,&quot;searchValueName&quot;:&quot;409719&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409707&quot;,&quot;searchValueName&quot;:&quot;409707&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409623&quot;,&quot;searchValueName&quot;:&quot;409623&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409622&quot;,&quot;searchValueName&quot;:&quot;409622&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409620&quot;,&quot;searchValueName&quot;:&quot;409620&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409616&quot;,&quot;searchValueName&quot;:&quot;409616&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409614&quot;,&quot;searchValueName&quot;:&quot;409614&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409613&quot;,&quot;searchValueName&quot;:&quot;409613&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409611&quot;,&quot;searchValueName&quot;:&quot;409611&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Trial ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;409610&quot;,&quot;searchValueName&quot;:&quot;409610&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;}]}],&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrialAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-11-05T12:35:07.223</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">trials.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-11-05T12:35:07.223</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T003z_ClinicalTrials_Title10" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;resultOptions&quot;:{&quot;showColumns&quot;:[&quot;secondaryDrugs&quot;,&quot;collaborators&quot;,&quot;id&quot;,&quot;patientSegments&quot;,&quot;diseaseTypes&quot;,&quot;sponsors&quot;,&quot;primaryDrugs&quot;,&quot;protocolIds&quot;,&quot;trialTitle&quot;,&quot;trialPhase&quot;,&quot;trialStatus&quot;,&quot;productionStatusId&quot;]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;trialtitle&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;trialtitle&quot;,&quot;categoryName&quot;:&quot;Trial Title&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Hydroxychloroquine&quot;,&quot;searchValueName&quot;:&quot;Hydroxychloroquine&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;trialtitle&quot;},{&quot;columnName&quot;:&quot;trialtitle&quot;,&quot;categoryName&quot;:&quot;Trial Title&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Hydroxychloroquine&quot;,&quot;searchValueName&quot;:&quot;Hydroxychloroquine&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;trialtitle&quot;},{&quot;columnName&quot;:&quot;trialtitle&quot;,&quot;categoryName&quot;:&quot;Trial Title&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;COVID-19&quot;,&quot;searchValueName&quot;:&quot;COVID-19&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;trialtitle&quot;},{&quot;columnName&quot;:&quot;trialtitle&quot;,&quot;categoryName&quot;:&quot;Trial Title&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;HIV&quot;,&quot;searchValueName&quot;:&quot;HIV&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;trialtitle&quot;},{&quot;columnName&quot;:&quot;trialtitle&quot;,&quot;categoryName&quot;:&quot;Trial Title&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;tumor&quot;,&quot;searchValueName&quot;:&quot;tumor&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;trialtitle&quot;},{&quot;columnName&quot;:&quot;trialtitle&quot;,&quot;categoryName&quot;:&quot;Trial Title&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;syndrome&quot;,&quot;searchValueName&quot;:&quot;syndrome&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;trialtitle&quot;},{&quot;columnName&quot;:&quot;trialtitle&quot;,&quot;categoryName&quot;:&quot;Trial Title&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;neoplasia&quot;,&quot;searchValueName&quot;:&quot;neoplasia&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;trialtitle&quot;},{&quot;columnName&quot;:&quot;trialtitle&quot;,&quot;categoryName&quot;:&quot;Trial Title&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;MPN&quot;,&quot;searchValueName&quot;:&quot;MPN&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;trialtitle&quot;},{&quot;columnName&quot;:&quot;trialtitle&quot;,&quot;categoryName&quot;:&quot;Trial Title&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;malign&quot;,&quot;searchValueName&quot;:&quot;malign&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;trialtitle&quot;},{&quot;columnName&quot;:&quot;trialtitle&quot;,&quot;categoryName&quot;:&quot;Trial Title&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Surgery&quot;,&quot;searchValueName&quot;:&quot;Surgery&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;trialtitle&quot;},{&quot;columnName&quot;:&quot;trialtitle&quot;,&quot;categoryName&quot;:&quot;Trial Title&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Radiotherapy&quot;,&quot;searchValueName&quot;:&quot;Radiotherapy&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;trialtitle&quot;}]}],&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrialAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-11-07T20:53:26.444</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">trials.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-11-07T20:53:26.444</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T004z_ClinicalTrials_DiseaseType_10" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;resultOptions&quot;:{&quot;showColumns&quot;:[&quot;secondaryDrugs&quot;,&quot;collaborators&quot;,&quot;id&quot;,&quot;patientSegments&quot;,&quot;diseaseTypes&quot;,&quot;sponsors&quot;,&quot;primaryDrugs&quot;,&quot;protocolIds&quot;,&quot;trialTitle&quot;,&quot;trialPhase&quot;,&quot;trialStatus&quot;,&quot;productionStatusId&quot;]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;diseasetypeid&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;diseasetypeid&quot;,&quot;categoryName&quot;:&quot;Disease Type&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:1,&quot;searchValueName&quot;:&quot;Bladder&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;diseasetypeid&quot;},{&quot;columnName&quot;:&quot;diseasetypeid&quot;,&quot;categoryName&quot;:&quot;Disease Type&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:2,&quot;searchValueName&quot;:&quot;Breast&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;diseasetypeid&quot;},{&quot;columnName&quot;:&quot;diseasetypeid&quot;,&quot;categoryName&quot;:&quot;Disease Type&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:3,&quot;searchValueName&quot;:&quot;Colorectal&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;diseasetypeid&quot;},{&quot;columnName&quot;:&quot;diseasetypeid&quot;,&quot;categoryName&quot;:&quot;Disease Type&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:6,&quot;searchValueName&quot;:&quot;Ovarian&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;diseasetypeid&quot;},{&quot;columnName&quot;:&quot;diseasetypeid&quot;,&quot;categoryName&quot;:&quot;Disease Type&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:207,&quot;searchValueName&quot;:&quot;Neonatal Brain Injury&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;diseasetypeid&quot;},{&quot;columnName&quot;:&quot;diseasetypeid&quot;,&quot;categoryName&quot;:&quot;Disease Type&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:7,&quot;searchValueName&quot;:&quot;Pancreas&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;diseasetypeid&quot;},{&quot;columnName&quot;:&quot;diseasetypeid&quot;,&quot;categoryName&quot;:&quot;Disease Type&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:8,&quot;searchValueName&quot;:&quot;Prostate&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;diseasetypeid&quot;},{&quot;columnName&quot;:&quot;diseasetypeid&quot;,&quot;categoryName&quot;:&quot;Disease Type&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:11,&quot;searchValueName&quot;:&quot;Melanoma&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;diseasetypeid&quot;},{&quot;columnName&quot;:&quot;diseasetypeid&quot;,&quot;categoryName&quot;:&quot;Disease Type&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:106,&quot;searchValueName&quot;:&quot;HBV&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;diseasetypeid&quot;},{&quot;columnName&quot;:&quot;diseasetypeid&quot;,&quot;categoryName&quot;:&quot;Disease Type&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:108,&quot;searchValueName&quot;:&quot;Psoriasis&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;diseasetypeid&quot;}]}],&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrialAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T11:21:51.234</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">trials.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T11:21:51.234</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T005z_ClinicalTrials_ProtocolIds_10" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;resultOptions&quot;:{&quot;showColumns&quot;:[&quot;secondaryDrugs&quot;,&quot;collaborators&quot;,&quot;id&quot;,&quot;patientSegments&quot;,&quot;diseaseTypes&quot;,&quot;sponsors&quot;,&quot;primaryDrugs&quot;,&quot;protocolIds&quot;,&quot;trialTitle&quot;,&quot;trialPhase&quot;,&quot;trialStatus&quot;,&quot;productionStatusId&quot;]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;protocolids&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;protocolids&quot;,&quot;categoryName&quot;:&quot;Protocol ID&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;MED1&quot;,&quot;searchValueName&quot;:&quot;MED1&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;protocolids&quot;},{&quot;columnName&quot;:&quot;protocolids&quot;,&quot;categoryName&quot;:&quot;Protocol ID&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;NCT04454684&quot;,&quot;searchValueName&quot;:&quot;NCT04454684&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;protocolids&quot;},{&quot;columnName&quot;:&quot;protocolids&quot;,&quot;categoryName&quot;:&quot;Protocol ID&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;TrialTroveID-410131&quot;,&quot;searchValueName&quot;:&quot;TrialTroveID-410131&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;protocolids&quot;},{&quot;columnName&quot;:&quot;protocolids&quot;,&quot;categoryName&quot;:&quot;Protocol ID&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;NCT05011396&quot;,&quot;searchValueName&quot;:&quot;NCT05011396&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;protocolids&quot;},{&quot;columnName&quot;:&quot;protocolids&quot;,&quot;categoryName&quot;:&quot;Protocol ID&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Palisade-2&quot;,&quot;searchValueName&quot;:&quot;Palisade-2&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;protocolids&quot;},{&quot;columnName&quot;:&quot;protocolids&quot;,&quot;categoryName&quot;:&quot;Protocol ID&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;PH94B-CL032&quot;,&quot;searchValueName&quot;:&quot;PH94B-CL032&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;protocolids&quot;},{&quot;columnName&quot;:&quot;protocolids&quot;,&quot;categoryName&quot;:&quot;Protocol ID&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;05-303&quot;,&quot;searchValueName&quot;:&quot;05-303&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;protocolids&quot;},{&quot;columnName&quot;:&quot;protocolids&quot;,&quot;categoryName&quot;:&quot;Protocol ID&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;FLT&quot;,&quot;searchValueName&quot;:&quot;FLT&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;protocolids&quot;},{&quot;columnName&quot;:&quot;protocolids&quot;,&quot;categoryName&quot;:&quot;Protocol ID&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;NCT00633958&quot;,&quot;searchValueName&quot;:&quot;NCT00633958&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;protocolids&quot;},{&quot;columnName&quot;:&quot;protocolids&quot;,&quot;categoryName&quot;:&quot;Protocol ID&quot;,&quot;operator&quot;:3,&quot;searchValue&quot;:&quot;NCT05016947&quot;,&quot;searchValueName&quot;:&quot;NCT05016947&quot;,&quot;condition&quot;:0,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;protocolids&quot;}]}],&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrialAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T11:28:46.564</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">trials.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T11:28:46.564</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T006z_ClinicalTrials_MultipleCategories" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;resultOptions&quot;:{&quot;showColumns&quot;:[&quot;secondaryDrugs&quot;,&quot;collaborators&quot;,&quot;id&quot;,&quot;patientSegments&quot;,&quot;diseaseTypes&quot;,&quot;sponsors&quot;,&quot;primaryDrugs&quot;,&quot;protocolIds&quot;,&quot;trialTitle&quot;,&quot;trialPhase&quot;,&quot;trialStatus&quot;,&quot;productionStatusId&quot;]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;trialstatusid&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;trialstatusid&quot;,&quot;categoryName&quot;:&quot;Trial Status&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:3,&quot;searchValueName&quot;:&quot;Open&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;trialstatusid&quot;}]},{&quot;groupName&quot;:&quot;trialphaseid&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;trialphaseid&quot;,&quot;categoryName&quot;:&quot;Trial Phase&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:3,&quot;searchValueName&quot;:&quot;III&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;trialphaseid&quot;}]},{&quot;groupName&quot;:&quot;productionstatusid&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;productionstatusid&quot;,&quot;categoryName&quot;:&quot;Production Status&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:1,&quot;searchValueName&quot;:&quot;In Production&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;productionstatusid&quot;},{&quot;columnName&quot;:&quot;productionstatusid&quot;,&quot;categoryName&quot;:&quot;Production Status&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:5,&quot;searchValueName&quot;:&quot;External Source&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;productionstatusid&quot;}]},{&quot;groupName&quot;:&quot;notes&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;notes&quot;,&quot;categoryName&quot;:&quot;Trial Notes&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Test&quot;,&quot;searchValueName&quot;:&quot;Test&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;notes&quot;}]},{&quot;groupName&quot;:&quot;location&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;location&quot;,&quot;categoryName&quot;:&quot;Location&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:47,&quot;searchValueName&quot;:&quot;India&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;location&quot;}]},{&quot;groupName&quot;:&quot;therapeuticareaid&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;therapeuticareaid&quot;,&quot;categoryName&quot;:&quot;Therapeutic Area&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:1,&quot;searchValueName&quot;:&quot;Oncology&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;therapeuticareaid&quot;}]},{&quot;groupName&quot;:&quot;trialoutcomeid&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;trialoutcomeid&quot;,&quot;categoryName&quot;:&quot;Trial Outcome&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:1,&quot;searchValueName&quot;:&quot;Terminated, Safety/adverse effects&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;trialoutcomeid&quot;}]}],&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">trials.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClinicalTrialAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T09:35:46.032</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">trials.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T09:35:46.032</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T007z_Drug_Ids_500Plus" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;resultOptions&quot;:{&quot;showColumns&quot;:[&quot;productionStatus&quot;,&quot;drugKey&quot;,&quot;globalStatus&quot;,&quot;deliveryRoute&quot;,&quot;id&quot;,&quot;drugName&quot;,&quot;therapeuticClass&quot;,&quot;mechanismOfAction&quot;,&quot;disease&quot;,&quot;company&quot;,&quot;dplCountry&quot;,&quot;currentDevelopmentStatus&quot;]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;id&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193905&quot;,&quot;searchValueName&quot;:&quot;193905&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193904&quot;,&quot;searchValueName&quot;:&quot;193904&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193903&quot;,&quot;searchValueName&quot;:&quot;193903&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193902&quot;,&quot;searchValueName&quot;:&quot;193902&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193901&quot;,&quot;searchValueName&quot;:&quot;193901&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193900&quot;,&quot;searchValueName&quot;:&quot;193900&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193899&quot;,&quot;searchValueName&quot;:&quot;193899&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193898&quot;,&quot;searchValueName&quot;:&quot;193898&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193897&quot;,&quot;searchValueName&quot;:&quot;193897&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193896&quot;,&quot;searchValueName&quot;:&quot;193896&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193895&quot;,&quot;searchValueName&quot;:&quot;193895&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193894&quot;,&quot;searchValueName&quot;:&quot;193894&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193893&quot;,&quot;searchValueName&quot;:&quot;193893&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193892&quot;,&quot;searchValueName&quot;:&quot;193892&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193891&quot;,&quot;searchValueName&quot;:&quot;193891&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193890&quot;,&quot;searchValueName&quot;:&quot;193890&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193889&quot;,&quot;searchValueName&quot;:&quot;193889&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193888&quot;,&quot;searchValueName&quot;:&quot;193888&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193887&quot;,&quot;searchValueName&quot;:&quot;193887&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193886&quot;,&quot;searchValueName&quot;:&quot;193886&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193885&quot;,&quot;searchValueName&quot;:&quot;193885&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193884&quot;,&quot;searchValueName&quot;:&quot;193884&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193883&quot;,&quot;searchValueName&quot;:&quot;193883&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193882&quot;,&quot;searchValueName&quot;:&quot;193882&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193881&quot;,&quot;searchValueName&quot;:&quot;193881&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193880&quot;,&quot;searchValueName&quot;:&quot;193880&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193879&quot;,&quot;searchValueName&quot;:&quot;193879&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193878&quot;,&quot;searchValueName&quot;:&quot;193878&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193877&quot;,&quot;searchValueName&quot;:&quot;193877&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193876&quot;,&quot;searchValueName&quot;:&quot;193876&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193875&quot;,&quot;searchValueName&quot;:&quot;193875&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193874&quot;,&quot;searchValueName&quot;:&quot;193874&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193873&quot;,&quot;searchValueName&quot;:&quot;193873&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193872&quot;,&quot;searchValueName&quot;:&quot;193872&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193871&quot;,&quot;searchValueName&quot;:&quot;193871&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193870&quot;,&quot;searchValueName&quot;:&quot;193870&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193869&quot;,&quot;searchValueName&quot;:&quot;193869&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193868&quot;,&quot;searchValueName&quot;:&quot;193868&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193867&quot;,&quot;searchValueName&quot;:&quot;193867&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193866&quot;,&quot;searchValueName&quot;:&quot;193866&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193865&quot;,&quot;searchValueName&quot;:&quot;193865&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193864&quot;,&quot;searchValueName&quot;:&quot;193864&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193863&quot;,&quot;searchValueName&quot;:&quot;193863&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193862&quot;,&quot;searchValueName&quot;:&quot;193862&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193861&quot;,&quot;searchValueName&quot;:&quot;193861&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193860&quot;,&quot;searchValueName&quot;:&quot;193860&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193859&quot;,&quot;searchValueName&quot;:&quot;193859&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193858&quot;,&quot;searchValueName&quot;:&quot;193858&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193857&quot;,&quot;searchValueName&quot;:&quot;193857&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193856&quot;,&quot;searchValueName&quot;:&quot;193856&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193855&quot;,&quot;searchValueName&quot;:&quot;193855&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193854&quot;,&quot;searchValueName&quot;:&quot;193854&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193853&quot;,&quot;searchValueName&quot;:&quot;193853&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193852&quot;,&quot;searchValueName&quot;:&quot;193852&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193851&quot;,&quot;searchValueName&quot;:&quot;193851&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193850&quot;,&quot;searchValueName&quot;:&quot;193850&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193849&quot;,&quot;searchValueName&quot;:&quot;193849&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193848&quot;,&quot;searchValueName&quot;:&quot;193848&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193847&quot;,&quot;searchValueName&quot;:&quot;193847&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193846&quot;,&quot;searchValueName&quot;:&quot;193846&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193845&quot;,&quot;searchValueName&quot;:&quot;193845&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193844&quot;,&quot;searchValueName&quot;:&quot;193844&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193843&quot;,&quot;searchValueName&quot;:&quot;193843&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193842&quot;,&quot;searchValueName&quot;:&quot;193842&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193841&quot;,&quot;searchValueName&quot;:&quot;193841&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193840&quot;,&quot;searchValueName&quot;:&quot;193840&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193839&quot;,&quot;searchValueName&quot;:&quot;193839&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193838&quot;,&quot;searchValueName&quot;:&quot;193838&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193837&quot;,&quot;searchValueName&quot;:&quot;193837&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193836&quot;,&quot;searchValueName&quot;:&quot;193836&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193835&quot;,&quot;searchValueName&quot;:&quot;193835&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193834&quot;,&quot;searchValueName&quot;:&quot;193834&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193833&quot;,&quot;searchValueName&quot;:&quot;193833&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193832&quot;,&quot;searchValueName&quot;:&quot;193832&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193831&quot;,&quot;searchValueName&quot;:&quot;193831&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193830&quot;,&quot;searchValueName&quot;:&quot;193830&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193829&quot;,&quot;searchValueName&quot;:&quot;193829&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193828&quot;,&quot;searchValueName&quot;:&quot;193828&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193827&quot;,&quot;searchValueName&quot;:&quot;193827&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193826&quot;,&quot;searchValueName&quot;:&quot;193826&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193825&quot;,&quot;searchValueName&quot;:&quot;193825&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193824&quot;,&quot;searchValueName&quot;:&quot;193824&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193823&quot;,&quot;searchValueName&quot;:&quot;193823&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193822&quot;,&quot;searchValueName&quot;:&quot;193822&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193821&quot;,&quot;searchValueName&quot;:&quot;193821&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193820&quot;,&quot;searchValueName&quot;:&quot;193820&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193819&quot;,&quot;searchValueName&quot;:&quot;193819&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193818&quot;,&quot;searchValueName&quot;:&quot;193818&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193817&quot;,&quot;searchValueName&quot;:&quot;193817&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193816&quot;,&quot;searchValueName&quot;:&quot;193816&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193815&quot;,&quot;searchValueName&quot;:&quot;193815&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193814&quot;,&quot;searchValueName&quot;:&quot;193814&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193813&quot;,&quot;searchValueName&quot;:&quot;193813&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193812&quot;,&quot;searchValueName&quot;:&quot;193812&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193811&quot;,&quot;searchValueName&quot;:&quot;193811&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193810&quot;,&quot;searchValueName&quot;:&quot;193810&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193809&quot;,&quot;searchValueName&quot;:&quot;193809&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193808&quot;,&quot;searchValueName&quot;:&quot;193808&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193807&quot;,&quot;searchValueName&quot;:&quot;193807&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193806&quot;,&quot;searchValueName&quot;:&quot;193806&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193805&quot;,&quot;searchValueName&quot;:&quot;193805&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193804&quot;,&quot;searchValueName&quot;:&quot;193804&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193803&quot;,&quot;searchValueName&quot;:&quot;193803&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193802&quot;,&quot;searchValueName&quot;:&quot;193802&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193801&quot;,&quot;searchValueName&quot;:&quot;193801&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193800&quot;,&quot;searchValueName&quot;:&quot;193800&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193799&quot;,&quot;searchValueName&quot;:&quot;193799&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193798&quot;,&quot;searchValueName&quot;:&quot;193798&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193797&quot;,&quot;searchValueName&quot;:&quot;193797&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193796&quot;,&quot;searchValueName&quot;:&quot;193796&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193795&quot;,&quot;searchValueName&quot;:&quot;193795&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193794&quot;,&quot;searchValueName&quot;:&quot;193794&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193793&quot;,&quot;searchValueName&quot;:&quot;193793&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193792&quot;,&quot;searchValueName&quot;:&quot;193792&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193791&quot;,&quot;searchValueName&quot;:&quot;193791&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193790&quot;,&quot;searchValueName&quot;:&quot;193790&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193789&quot;,&quot;searchValueName&quot;:&quot;193789&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193788&quot;,&quot;searchValueName&quot;:&quot;193788&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193787&quot;,&quot;searchValueName&quot;:&quot;193787&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193786&quot;,&quot;searchValueName&quot;:&quot;193786&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193785&quot;,&quot;searchValueName&quot;:&quot;193785&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193784&quot;,&quot;searchValueName&quot;:&quot;193784&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193783&quot;,&quot;searchValueName&quot;:&quot;193783&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193782&quot;,&quot;searchValueName&quot;:&quot;193782&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193781&quot;,&quot;searchValueName&quot;:&quot;193781&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193780&quot;,&quot;searchValueName&quot;:&quot;193780&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193779&quot;,&quot;searchValueName&quot;:&quot;193779&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193778&quot;,&quot;searchValueName&quot;:&quot;193778&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193777&quot;,&quot;searchValueName&quot;:&quot;193777&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193776&quot;,&quot;searchValueName&quot;:&quot;193776&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193775&quot;,&quot;searchValueName&quot;:&quot;193775&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193774&quot;,&quot;searchValueName&quot;:&quot;193774&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193773&quot;,&quot;searchValueName&quot;:&quot;193773&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193772&quot;,&quot;searchValueName&quot;:&quot;193772&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193771&quot;,&quot;searchValueName&quot;:&quot;193771&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193770&quot;,&quot;searchValueName&quot;:&quot;193770&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193769&quot;,&quot;searchValueName&quot;:&quot;193769&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193768&quot;,&quot;searchValueName&quot;:&quot;193768&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193767&quot;,&quot;searchValueName&quot;:&quot;193767&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193766&quot;,&quot;searchValueName&quot;:&quot;193766&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193765&quot;,&quot;searchValueName&quot;:&quot;193765&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193764&quot;,&quot;searchValueName&quot;:&quot;193764&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193763&quot;,&quot;searchValueName&quot;:&quot;193763&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193762&quot;,&quot;searchValueName&quot;:&quot;193762&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193761&quot;,&quot;searchValueName&quot;:&quot;193761&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193760&quot;,&quot;searchValueName&quot;:&quot;193760&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193759&quot;,&quot;searchValueName&quot;:&quot;193759&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193758&quot;,&quot;searchValueName&quot;:&quot;193758&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193757&quot;,&quot;searchValueName&quot;:&quot;193757&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193756&quot;,&quot;searchValueName&quot;:&quot;193756&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193755&quot;,&quot;searchValueName&quot;:&quot;193755&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193754&quot;,&quot;searchValueName&quot;:&quot;193754&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193753&quot;,&quot;searchValueName&quot;:&quot;193753&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193752&quot;,&quot;searchValueName&quot;:&quot;193752&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193751&quot;,&quot;searchValueName&quot;:&quot;193751&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193750&quot;,&quot;searchValueName&quot;:&quot;193750&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193749&quot;,&quot;searchValueName&quot;:&quot;193749&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193748&quot;,&quot;searchValueName&quot;:&quot;193748&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193747&quot;,&quot;searchValueName&quot;:&quot;193747&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193746&quot;,&quot;searchValueName&quot;:&quot;193746&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193745&quot;,&quot;searchValueName&quot;:&quot;193745&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193744&quot;,&quot;searchValueName&quot;:&quot;193744&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193743&quot;,&quot;searchValueName&quot;:&quot;193743&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193742&quot;,&quot;searchValueName&quot;:&quot;193742&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193741&quot;,&quot;searchValueName&quot;:&quot;193741&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193740&quot;,&quot;searchValueName&quot;:&quot;193740&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193739&quot;,&quot;searchValueName&quot;:&quot;193739&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193738&quot;,&quot;searchValueName&quot;:&quot;193738&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193737&quot;,&quot;searchValueName&quot;:&quot;193737&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193736&quot;,&quot;searchValueName&quot;:&quot;193736&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193735&quot;,&quot;searchValueName&quot;:&quot;193735&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193734&quot;,&quot;searchValueName&quot;:&quot;193734&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193733&quot;,&quot;searchValueName&quot;:&quot;193733&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193732&quot;,&quot;searchValueName&quot;:&quot;193732&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193731&quot;,&quot;searchValueName&quot;:&quot;193731&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193730&quot;,&quot;searchValueName&quot;:&quot;193730&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193729&quot;,&quot;searchValueName&quot;:&quot;193729&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193728&quot;,&quot;searchValueName&quot;:&quot;193728&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193727&quot;,&quot;searchValueName&quot;:&quot;193727&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193726&quot;,&quot;searchValueName&quot;:&quot;193726&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193725&quot;,&quot;searchValueName&quot;:&quot;193725&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193724&quot;,&quot;searchValueName&quot;:&quot;193724&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193723&quot;,&quot;searchValueName&quot;:&quot;193723&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193722&quot;,&quot;searchValueName&quot;:&quot;193722&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193721&quot;,&quot;searchValueName&quot;:&quot;193721&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193720&quot;,&quot;searchValueName&quot;:&quot;193720&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193719&quot;,&quot;searchValueName&quot;:&quot;193719&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193718&quot;,&quot;searchValueName&quot;:&quot;193718&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193717&quot;,&quot;searchValueName&quot;:&quot;193717&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193716&quot;,&quot;searchValueName&quot;:&quot;193716&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193715&quot;,&quot;searchValueName&quot;:&quot;193715&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193714&quot;,&quot;searchValueName&quot;:&quot;193714&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193713&quot;,&quot;searchValueName&quot;:&quot;193713&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193712&quot;,&quot;searchValueName&quot;:&quot;193712&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193711&quot;,&quot;searchValueName&quot;:&quot;193711&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193710&quot;,&quot;searchValueName&quot;:&quot;193710&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193709&quot;,&quot;searchValueName&quot;:&quot;193709&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193708&quot;,&quot;searchValueName&quot;:&quot;193708&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193707&quot;,&quot;searchValueName&quot;:&quot;193707&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193706&quot;,&quot;searchValueName&quot;:&quot;193706&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193705&quot;,&quot;searchValueName&quot;:&quot;193705&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193704&quot;,&quot;searchValueName&quot;:&quot;193704&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193703&quot;,&quot;searchValueName&quot;:&quot;193703&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193702&quot;,&quot;searchValueName&quot;:&quot;193702&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193701&quot;,&quot;searchValueName&quot;:&quot;193701&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193700&quot;,&quot;searchValueName&quot;:&quot;193700&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193699&quot;,&quot;searchValueName&quot;:&quot;193699&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193698&quot;,&quot;searchValueName&quot;:&quot;193698&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193697&quot;,&quot;searchValueName&quot;:&quot;193697&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193696&quot;,&quot;searchValueName&quot;:&quot;193696&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193695&quot;,&quot;searchValueName&quot;:&quot;193695&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193694&quot;,&quot;searchValueName&quot;:&quot;193694&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193693&quot;,&quot;searchValueName&quot;:&quot;193693&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193692&quot;,&quot;searchValueName&quot;:&quot;193692&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193691&quot;,&quot;searchValueName&quot;:&quot;193691&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193690&quot;,&quot;searchValueName&quot;:&quot;193690&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193689&quot;,&quot;searchValueName&quot;:&quot;193689&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193688&quot;,&quot;searchValueName&quot;:&quot;193688&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193687&quot;,&quot;searchValueName&quot;:&quot;193687&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193686&quot;,&quot;searchValueName&quot;:&quot;193686&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193685&quot;,&quot;searchValueName&quot;:&quot;193685&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193684&quot;,&quot;searchValueName&quot;:&quot;193684&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193683&quot;,&quot;searchValueName&quot;:&quot;193683&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193682&quot;,&quot;searchValueName&quot;:&quot;193682&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193681&quot;,&quot;searchValueName&quot;:&quot;193681&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193680&quot;,&quot;searchValueName&quot;:&quot;193680&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193679&quot;,&quot;searchValueName&quot;:&quot;193679&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193678&quot;,&quot;searchValueName&quot;:&quot;193678&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193675&quot;,&quot;searchValueName&quot;:&quot;193675&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193674&quot;,&quot;searchValueName&quot;:&quot;193674&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193673&quot;,&quot;searchValueName&quot;:&quot;193673&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193672&quot;,&quot;searchValueName&quot;:&quot;193672&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193671&quot;,&quot;searchValueName&quot;:&quot;193671&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193670&quot;,&quot;searchValueName&quot;:&quot;193670&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193669&quot;,&quot;searchValueName&quot;:&quot;193669&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193668&quot;,&quot;searchValueName&quot;:&quot;193668&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193667&quot;,&quot;searchValueName&quot;:&quot;193667&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193666&quot;,&quot;searchValueName&quot;:&quot;193666&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193665&quot;,&quot;searchValueName&quot;:&quot;193665&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193664&quot;,&quot;searchValueName&quot;:&quot;193664&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193663&quot;,&quot;searchValueName&quot;:&quot;193663&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193662&quot;,&quot;searchValueName&quot;:&quot;193662&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193661&quot;,&quot;searchValueName&quot;:&quot;193661&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193660&quot;,&quot;searchValueName&quot;:&quot;193660&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193659&quot;,&quot;searchValueName&quot;:&quot;193659&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193658&quot;,&quot;searchValueName&quot;:&quot;193658&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193657&quot;,&quot;searchValueName&quot;:&quot;193657&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193656&quot;,&quot;searchValueName&quot;:&quot;193656&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193655&quot;,&quot;searchValueName&quot;:&quot;193655&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193654&quot;,&quot;searchValueName&quot;:&quot;193654&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193653&quot;,&quot;searchValueName&quot;:&quot;193653&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193652&quot;,&quot;searchValueName&quot;:&quot;193652&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193651&quot;,&quot;searchValueName&quot;:&quot;193651&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193650&quot;,&quot;searchValueName&quot;:&quot;193650&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193649&quot;,&quot;searchValueName&quot;:&quot;193649&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193648&quot;,&quot;searchValueName&quot;:&quot;193648&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193647&quot;,&quot;searchValueName&quot;:&quot;193647&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193646&quot;,&quot;searchValueName&quot;:&quot;193646&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193645&quot;,&quot;searchValueName&quot;:&quot;193645&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193644&quot;,&quot;searchValueName&quot;:&quot;193644&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193643&quot;,&quot;searchValueName&quot;:&quot;193643&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193642&quot;,&quot;searchValueName&quot;:&quot;193642&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193641&quot;,&quot;searchValueName&quot;:&quot;193641&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193640&quot;,&quot;searchValueName&quot;:&quot;193640&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193638&quot;,&quot;searchValueName&quot;:&quot;193638&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193636&quot;,&quot;searchValueName&quot;:&quot;193636&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193635&quot;,&quot;searchValueName&quot;:&quot;193635&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193634&quot;,&quot;searchValueName&quot;:&quot;193634&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193633&quot;,&quot;searchValueName&quot;:&quot;193633&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193632&quot;,&quot;searchValueName&quot;:&quot;193632&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193631&quot;,&quot;searchValueName&quot;:&quot;193631&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193630&quot;,&quot;searchValueName&quot;:&quot;193630&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193629&quot;,&quot;searchValueName&quot;:&quot;193629&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193628&quot;,&quot;searchValueName&quot;:&quot;193628&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193627&quot;,&quot;searchValueName&quot;:&quot;193627&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193626&quot;,&quot;searchValueName&quot;:&quot;193626&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193625&quot;,&quot;searchValueName&quot;:&quot;193625&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193624&quot;,&quot;searchValueName&quot;:&quot;193624&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193623&quot;,&quot;searchValueName&quot;:&quot;193623&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193622&quot;,&quot;searchValueName&quot;:&quot;193622&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193621&quot;,&quot;searchValueName&quot;:&quot;193621&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193620&quot;,&quot;searchValueName&quot;:&quot;193620&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193619&quot;,&quot;searchValueName&quot;:&quot;193619&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193618&quot;,&quot;searchValueName&quot;:&quot;193618&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193617&quot;,&quot;searchValueName&quot;:&quot;193617&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193616&quot;,&quot;searchValueName&quot;:&quot;193616&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193615&quot;,&quot;searchValueName&quot;:&quot;193615&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193614&quot;,&quot;searchValueName&quot;:&quot;193614&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193613&quot;,&quot;searchValueName&quot;:&quot;193613&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193612&quot;,&quot;searchValueName&quot;:&quot;193612&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193611&quot;,&quot;searchValueName&quot;:&quot;193611&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193610&quot;,&quot;searchValueName&quot;:&quot;193610&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193609&quot;,&quot;searchValueName&quot;:&quot;193609&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193608&quot;,&quot;searchValueName&quot;:&quot;193608&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193607&quot;,&quot;searchValueName&quot;:&quot;193607&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193606&quot;,&quot;searchValueName&quot;:&quot;193606&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193605&quot;,&quot;searchValueName&quot;:&quot;193605&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193604&quot;,&quot;searchValueName&quot;:&quot;193604&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193603&quot;,&quot;searchValueName&quot;:&quot;193603&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193602&quot;,&quot;searchValueName&quot;:&quot;193602&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193601&quot;,&quot;searchValueName&quot;:&quot;193601&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193600&quot;,&quot;searchValueName&quot;:&quot;193600&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193599&quot;,&quot;searchValueName&quot;:&quot;193599&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193598&quot;,&quot;searchValueName&quot;:&quot;193598&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193597&quot;,&quot;searchValueName&quot;:&quot;193597&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193596&quot;,&quot;searchValueName&quot;:&quot;193596&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193595&quot;,&quot;searchValueName&quot;:&quot;193595&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193594&quot;,&quot;searchValueName&quot;:&quot;193594&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193593&quot;,&quot;searchValueName&quot;:&quot;193593&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193592&quot;,&quot;searchValueName&quot;:&quot;193592&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193591&quot;,&quot;searchValueName&quot;:&quot;193591&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193588&quot;,&quot;searchValueName&quot;:&quot;193588&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193587&quot;,&quot;searchValueName&quot;:&quot;193587&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193586&quot;,&quot;searchValueName&quot;:&quot;193586&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193585&quot;,&quot;searchValueName&quot;:&quot;193585&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193584&quot;,&quot;searchValueName&quot;:&quot;193584&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193583&quot;,&quot;searchValueName&quot;:&quot;193583&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193582&quot;,&quot;searchValueName&quot;:&quot;193582&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193581&quot;,&quot;searchValueName&quot;:&quot;193581&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193580&quot;,&quot;searchValueName&quot;:&quot;193580&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193579&quot;,&quot;searchValueName&quot;:&quot;193579&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193578&quot;,&quot;searchValueName&quot;:&quot;193578&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193577&quot;,&quot;searchValueName&quot;:&quot;193577&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193576&quot;,&quot;searchValueName&quot;:&quot;193576&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193575&quot;,&quot;searchValueName&quot;:&quot;193575&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193574&quot;,&quot;searchValueName&quot;:&quot;193574&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193573&quot;,&quot;searchValueName&quot;:&quot;193573&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193572&quot;,&quot;searchValueName&quot;:&quot;193572&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193571&quot;,&quot;searchValueName&quot;:&quot;193571&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193570&quot;,&quot;searchValueName&quot;:&quot;193570&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193569&quot;,&quot;searchValueName&quot;:&quot;193569&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193568&quot;,&quot;searchValueName&quot;:&quot;193568&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193567&quot;,&quot;searchValueName&quot;:&quot;193567&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193566&quot;,&quot;searchValueName&quot;:&quot;193566&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193565&quot;,&quot;searchValueName&quot;:&quot;193565&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193564&quot;,&quot;searchValueName&quot;:&quot;193564&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193563&quot;,&quot;searchValueName&quot;:&quot;193563&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193562&quot;,&quot;searchValueName&quot;:&quot;193562&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193561&quot;,&quot;searchValueName&quot;:&quot;193561&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193560&quot;,&quot;searchValueName&quot;:&quot;193560&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193559&quot;,&quot;searchValueName&quot;:&quot;193559&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193558&quot;,&quot;searchValueName&quot;:&quot;193558&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193557&quot;,&quot;searchValueName&quot;:&quot;193557&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193556&quot;,&quot;searchValueName&quot;:&quot;193556&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193555&quot;,&quot;searchValueName&quot;:&quot;193555&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193554&quot;,&quot;searchValueName&quot;:&quot;193554&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193553&quot;,&quot;searchValueName&quot;:&quot;193553&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193552&quot;,&quot;searchValueName&quot;:&quot;193552&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193551&quot;,&quot;searchValueName&quot;:&quot;193551&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193550&quot;,&quot;searchValueName&quot;:&quot;193550&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193549&quot;,&quot;searchValueName&quot;:&quot;193549&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193548&quot;,&quot;searchValueName&quot;:&quot;193548&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193547&quot;,&quot;searchValueName&quot;:&quot;193547&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193546&quot;,&quot;searchValueName&quot;:&quot;193546&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193543&quot;,&quot;searchValueName&quot;:&quot;193543&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193542&quot;,&quot;searchValueName&quot;:&quot;193542&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193541&quot;,&quot;searchValueName&quot;:&quot;193541&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193540&quot;,&quot;searchValueName&quot;:&quot;193540&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193539&quot;,&quot;searchValueName&quot;:&quot;193539&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193538&quot;,&quot;searchValueName&quot;:&quot;193538&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193537&quot;,&quot;searchValueName&quot;:&quot;193537&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193536&quot;,&quot;searchValueName&quot;:&quot;193536&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193535&quot;,&quot;searchValueName&quot;:&quot;193535&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193534&quot;,&quot;searchValueName&quot;:&quot;193534&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193533&quot;,&quot;searchValueName&quot;:&quot;193533&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193532&quot;,&quot;searchValueName&quot;:&quot;193532&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193531&quot;,&quot;searchValueName&quot;:&quot;193531&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193530&quot;,&quot;searchValueName&quot;:&quot;193530&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193529&quot;,&quot;searchValueName&quot;:&quot;193529&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193528&quot;,&quot;searchValueName&quot;:&quot;193528&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193527&quot;,&quot;searchValueName&quot;:&quot;193527&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193526&quot;,&quot;searchValueName&quot;:&quot;193526&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193525&quot;,&quot;searchValueName&quot;:&quot;193525&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193524&quot;,&quot;searchValueName&quot;:&quot;193524&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193523&quot;,&quot;searchValueName&quot;:&quot;193523&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193522&quot;,&quot;searchValueName&quot;:&quot;193522&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193521&quot;,&quot;searchValueName&quot;:&quot;193521&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193520&quot;,&quot;searchValueName&quot;:&quot;193520&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193517&quot;,&quot;searchValueName&quot;:&quot;193517&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193516&quot;,&quot;searchValueName&quot;:&quot;193516&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193515&quot;,&quot;searchValueName&quot;:&quot;193515&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193514&quot;,&quot;searchValueName&quot;:&quot;193514&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193513&quot;,&quot;searchValueName&quot;:&quot;193513&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193512&quot;,&quot;searchValueName&quot;:&quot;193512&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193511&quot;,&quot;searchValueName&quot;:&quot;193511&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193510&quot;,&quot;searchValueName&quot;:&quot;193510&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193509&quot;,&quot;searchValueName&quot;:&quot;193509&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193508&quot;,&quot;searchValueName&quot;:&quot;193508&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193507&quot;,&quot;searchValueName&quot;:&quot;193507&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193506&quot;,&quot;searchValueName&quot;:&quot;193506&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193505&quot;,&quot;searchValueName&quot;:&quot;193505&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193504&quot;,&quot;searchValueName&quot;:&quot;193504&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193503&quot;,&quot;searchValueName&quot;:&quot;193503&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193502&quot;,&quot;searchValueName&quot;:&quot;193502&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193501&quot;,&quot;searchValueName&quot;:&quot;193501&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193500&quot;,&quot;searchValueName&quot;:&quot;193500&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193499&quot;,&quot;searchValueName&quot;:&quot;193499&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193498&quot;,&quot;searchValueName&quot;:&quot;193498&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193497&quot;,&quot;searchValueName&quot;:&quot;193497&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193496&quot;,&quot;searchValueName&quot;:&quot;193496&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193495&quot;,&quot;searchValueName&quot;:&quot;193495&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193494&quot;,&quot;searchValueName&quot;:&quot;193494&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193493&quot;,&quot;searchValueName&quot;:&quot;193493&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193492&quot;,&quot;searchValueName&quot;:&quot;193492&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193491&quot;,&quot;searchValueName&quot;:&quot;193491&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193490&quot;,&quot;searchValueName&quot;:&quot;193490&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193489&quot;,&quot;searchValueName&quot;:&quot;193489&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193488&quot;,&quot;searchValueName&quot;:&quot;193488&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193487&quot;,&quot;searchValueName&quot;:&quot;193487&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193486&quot;,&quot;searchValueName&quot;:&quot;193486&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193485&quot;,&quot;searchValueName&quot;:&quot;193485&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193484&quot;,&quot;searchValueName&quot;:&quot;193484&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193483&quot;,&quot;searchValueName&quot;:&quot;193483&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193482&quot;,&quot;searchValueName&quot;:&quot;193482&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193481&quot;,&quot;searchValueName&quot;:&quot;193481&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193480&quot;,&quot;searchValueName&quot;:&quot;193480&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193479&quot;,&quot;searchValueName&quot;:&quot;193479&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193478&quot;,&quot;searchValueName&quot;:&quot;193478&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193477&quot;,&quot;searchValueName&quot;:&quot;193477&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193476&quot;,&quot;searchValueName&quot;:&quot;193476&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193475&quot;,&quot;searchValueName&quot;:&quot;193475&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193474&quot;,&quot;searchValueName&quot;:&quot;193474&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193473&quot;,&quot;searchValueName&quot;:&quot;193473&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193472&quot;,&quot;searchValueName&quot;:&quot;193472&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193471&quot;,&quot;searchValueName&quot;:&quot;193471&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193470&quot;,&quot;searchValueName&quot;:&quot;193470&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193469&quot;,&quot;searchValueName&quot;:&quot;193469&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193468&quot;,&quot;searchValueName&quot;:&quot;193468&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193467&quot;,&quot;searchValueName&quot;:&quot;193467&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193466&quot;,&quot;searchValueName&quot;:&quot;193466&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193465&quot;,&quot;searchValueName&quot;:&quot;193465&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193464&quot;,&quot;searchValueName&quot;:&quot;193464&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193463&quot;,&quot;searchValueName&quot;:&quot;193463&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193462&quot;,&quot;searchValueName&quot;:&quot;193462&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193461&quot;,&quot;searchValueName&quot;:&quot;193461&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193460&quot;,&quot;searchValueName&quot;:&quot;193460&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193459&quot;,&quot;searchValueName&quot;:&quot;193459&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193458&quot;,&quot;searchValueName&quot;:&quot;193458&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193457&quot;,&quot;searchValueName&quot;:&quot;193457&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193456&quot;,&quot;searchValueName&quot;:&quot;193456&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193455&quot;,&quot;searchValueName&quot;:&quot;193455&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193454&quot;,&quot;searchValueName&quot;:&quot;193454&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193453&quot;,&quot;searchValueName&quot;:&quot;193453&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193452&quot;,&quot;searchValueName&quot;:&quot;193452&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193451&quot;,&quot;searchValueName&quot;:&quot;193451&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193450&quot;,&quot;searchValueName&quot;:&quot;193450&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193449&quot;,&quot;searchValueName&quot;:&quot;193449&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193448&quot;,&quot;searchValueName&quot;:&quot;193448&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193447&quot;,&quot;searchValueName&quot;:&quot;193447&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193446&quot;,&quot;searchValueName&quot;:&quot;193446&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193445&quot;,&quot;searchValueName&quot;:&quot;193445&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193444&quot;,&quot;searchValueName&quot;:&quot;193444&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193443&quot;,&quot;searchValueName&quot;:&quot;193443&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193442&quot;,&quot;searchValueName&quot;:&quot;193442&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193441&quot;,&quot;searchValueName&quot;:&quot;193441&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193440&quot;,&quot;searchValueName&quot;:&quot;193440&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193439&quot;,&quot;searchValueName&quot;:&quot;193439&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193438&quot;,&quot;searchValueName&quot;:&quot;193438&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193437&quot;,&quot;searchValueName&quot;:&quot;193437&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193436&quot;,&quot;searchValueName&quot;:&quot;193436&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193435&quot;,&quot;searchValueName&quot;:&quot;193435&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193434&quot;,&quot;searchValueName&quot;:&quot;193434&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193433&quot;,&quot;searchValueName&quot;:&quot;193433&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193432&quot;,&quot;searchValueName&quot;:&quot;193432&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193431&quot;,&quot;searchValueName&quot;:&quot;193431&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193430&quot;,&quot;searchValueName&quot;:&quot;193430&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193429&quot;,&quot;searchValueName&quot;:&quot;193429&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193428&quot;,&quot;searchValueName&quot;:&quot;193428&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193427&quot;,&quot;searchValueName&quot;:&quot;193427&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193426&quot;,&quot;searchValueName&quot;:&quot;193426&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193425&quot;,&quot;searchValueName&quot;:&quot;193425&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193424&quot;,&quot;searchValueName&quot;:&quot;193424&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193423&quot;,&quot;searchValueName&quot;:&quot;193423&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193422&quot;,&quot;searchValueName&quot;:&quot;193422&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193421&quot;,&quot;searchValueName&quot;:&quot;193421&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193420&quot;,&quot;searchValueName&quot;:&quot;193420&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193419&quot;,&quot;searchValueName&quot;:&quot;193419&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193418&quot;,&quot;searchValueName&quot;:&quot;193418&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193417&quot;,&quot;searchValueName&quot;:&quot;193417&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193416&quot;,&quot;searchValueName&quot;:&quot;193416&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193415&quot;,&quot;searchValueName&quot;:&quot;193415&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193414&quot;,&quot;searchValueName&quot;:&quot;193414&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193413&quot;,&quot;searchValueName&quot;:&quot;193413&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193412&quot;,&quot;searchValueName&quot;:&quot;193412&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193411&quot;,&quot;searchValueName&quot;:&quot;193411&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193410&quot;,&quot;searchValueName&quot;:&quot;193410&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193409&quot;,&quot;searchValueName&quot;:&quot;193409&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193408&quot;,&quot;searchValueName&quot;:&quot;193408&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193405&quot;,&quot;searchValueName&quot;:&quot;193405&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193404&quot;,&quot;searchValueName&quot;:&quot;193404&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193403&quot;,&quot;searchValueName&quot;:&quot;193403&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193402&quot;,&quot;searchValueName&quot;:&quot;193402&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193401&quot;,&quot;searchValueName&quot;:&quot;193401&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193400&quot;,&quot;searchValueName&quot;:&quot;193400&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193399&quot;,&quot;searchValueName&quot;:&quot;193399&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193398&quot;,&quot;searchValueName&quot;:&quot;193398&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193397&quot;,&quot;searchValueName&quot;:&quot;193397&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193396&quot;,&quot;searchValueName&quot;:&quot;193396&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193395&quot;,&quot;searchValueName&quot;:&quot;193395&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193394&quot;,&quot;searchValueName&quot;:&quot;193394&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193393&quot;,&quot;searchValueName&quot;:&quot;193393&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193392&quot;,&quot;searchValueName&quot;:&quot;193392&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193391&quot;,&quot;searchValueName&quot;:&quot;193391&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193390&quot;,&quot;searchValueName&quot;:&quot;193390&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193389&quot;,&quot;searchValueName&quot;:&quot;193389&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193388&quot;,&quot;searchValueName&quot;:&quot;193388&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193387&quot;,&quot;searchValueName&quot;:&quot;193387&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193386&quot;,&quot;searchValueName&quot;:&quot;193386&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193385&quot;,&quot;searchValueName&quot;:&quot;193385&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Drug ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;193384&quot;,&quot;searchValueName&quot;:&quot;193384&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;id&quot;}]}],&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/DrugsAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-11-05T12:46:02.184</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">drugs.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-11-05T12:46:02.184</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T008z_Drug_Name10" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;resultOptions&quot;:{&quot;showColumns&quot;:[&quot;productionStatus&quot;,&quot;drugKey&quot;,&quot;globalStatus&quot;,&quot;deliveryRoute&quot;,&quot;id&quot;,&quot;drugName&quot;,&quot;therapeuticClass&quot;,&quot;mechanismOfAction&quot;,&quot;disease&quot;,&quot;company&quot;,&quot;dplCountry&quot;,&quot;currentDevelopmentStatus&quot;]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;drugname&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;drugname&quot;,&quot;categoryName&quot;:&quot;Drug Names&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Dexamethasone&quot;,&quot;searchValueName&quot;:&quot;Dexamethasone&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;drugname&quot;},{&quot;columnName&quot;:&quot;drugname&quot;,&quot;categoryName&quot;:&quot;Drug Names&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Epidural stimulation&quot;,&quot;searchValueName&quot;:&quot;Epidural stimulation&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;drugname&quot;},{&quot;columnName&quot;:&quot;drugname&quot;,&quot;categoryName&quot;:&quot;Drug Names&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;EVICEL&quot;,&quot;searchValueName&quot;:&quot;EVICEL&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;drugname&quot;},{&quot;columnName&quot;:&quot;drugname&quot;,&quot;categoryName&quot;:&quot;Drug Names&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Investigational varicella vaccine&quot;,&quot;searchValueName&quot;:&quot;Investigational varicella vaccine&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;drugname&quot;},{&quot;columnName&quot;:&quot;drugname&quot;,&quot;categoryName&quot;:&quot;Drug Names&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;BT051&quot;,&quot;searchValueName&quot;:&quot;BT051&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;drugname&quot;},{&quot;columnName&quot;:&quot;drugname&quot;,&quot;categoryName&quot;:&quot;Drug Names&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Biltricide&quot;,&quot;searchValueName&quot;:&quot;Biltricide&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;drugname&quot;},{&quot;columnName&quot;:&quot;drugname&quot;,&quot;categoryName&quot;:&quot;Drug Names&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Sleeve gastrectomy&quot;,&quot;searchValueName&quot;:&quot;Sleeve gastrectomy&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;drugname&quot;},{&quot;columnName&quot;:&quot;drugname&quot;,&quot;categoryName&quot;:&quot;Drug Names&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Dim Light Melatonin Onset&quot;,&quot;searchValueName&quot;:&quot;Dim Light Melatonin Onset&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;drugname&quot;},{&quot;columnName&quot;:&quot;drugname&quot;,&quot;categoryName&quot;:&quot;Drug Names&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;18F-FluorApoTrace&quot;,&quot;searchValueName&quot;:&quot;18F-FluorApoTrace&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;drugname&quot;},{&quot;columnName&quot;:&quot;drugname&quot;,&quot;categoryName&quot;:&quot;Drug Names&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;LEN&quot;,&quot;searchValueName&quot;:&quot;LEN&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;drugname&quot;}]}],&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/DrugsAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-11-07T21:07:19.828</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">drugs.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-11-07T21:07:19.828</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T009z_Drug_DPLDisease_10" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;resultOptions&quot;:{&quot;showColumns&quot;:[&quot;productionStatus&quot;,&quot;drugKey&quot;,&quot;globalStatus&quot;,&quot;deliveryRoute&quot;,&quot;id&quot;,&quot;drugName&quot;,&quot;therapeuticClass&quot;,&quot;mechanismOfAction&quot;,&quot;disease&quot;,&quot;company&quot;,&quot;dplCountry&quot;,&quot;currentDevelopmentStatus&quot;]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;diseaseid&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;diseaseid&quot;,&quot;categoryName&quot;:&quot;DPL Disease&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:8698,&quot;searchValueName&quot;:&quot;PT Drug Disease User112_1636375846005&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;diseaseid&quot;},{&quot;columnName&quot;:&quot;diseaseid&quot;,&quot;categoryName&quot;:&quot;DPL Disease&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:3,&quot;searchValueName&quot;:&quot;Hyperparathyroidism&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;diseaseid&quot;},{&quot;columnName&quot;:&quot;diseaseid&quot;,&quot;categoryName&quot;:&quot;DPL Disease&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:18,&quot;searchValueName&quot;:&quot;Infection, Helicobacter pylori prophylaxis&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;diseaseid&quot;},{&quot;columnName&quot;:&quot;diseaseid&quot;,&quot;categoryName&quot;:&quot;DPL Disease&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:10,&quot;searchValueName&quot;:&quot;Infection, Ebola virus&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;diseaseid&quot;},{&quot;columnName&quot;:&quot;diseaseid&quot;,&quot;categoryName&quot;:&quot;DPL Disease&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:25,&quot;searchValueName&quot;:&quot;Infection, hepatitis-C virus&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;diseaseid&quot;},{&quot;columnName&quot;:&quot;diseaseid&quot;,&quot;categoryName&quot;:&quot;DPL Disease&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:58,&quot;searchValueName&quot;:&quot;Acne&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;diseaseid&quot;},{&quot;columnName&quot;:&quot;diseaseid&quot;,&quot;categoryName&quot;:&quot;DPL Disease&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:61,&quot;searchValueName&quot;:&quot;Addiction, cocaine&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;diseaseid&quot;},{&quot;columnName&quot;:&quot;diseaseid&quot;,&quot;categoryName&quot;:&quot;DPL Disease&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:77,&quot;searchValueName&quot;:&quot;Anaesthesia&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;diseaseid&quot;},{&quot;columnName&quot;:&quot;diseaseid&quot;,&quot;categoryName&quot;:&quot;DPL Disease&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:97,&quot;searchValueName&quot;:&quot;Crohn&apos;s disease&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;diseaseid&quot;},{&quot;columnName&quot;:&quot;diseaseid&quot;,&quot;categoryName&quot;:&quot;DPL Disease&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:31,&quot;searchValueName&quot;:&quot;Cancer, oral&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;diseaseid&quot;}]}],&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/DrugsAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-11-07T21:07:19.828</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">drugs.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-11-07T21:07:19.828</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T010z_Drug_MultipleCategories" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;resultOptions&quot;:{&quot;showColumns&quot;:[&quot;productionStatus&quot;,&quot;drugKey&quot;,&quot;globalStatus&quot;,&quot;deliveryRoute&quot;,&quot;id&quot;,&quot;drugName&quot;,&quot;therapeuticClass&quot;,&quot;mechanismOfAction&quot;,&quot;disease&quot;,&quot;company&quot;,&quot;dplCountry&quot;,&quot;currentDevelopmentStatus&quot;]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;prodstatus&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;prodstatus&quot;,&quot;categoryName&quot;:&quot;Production Status&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:1,&quot;searchValueName&quot;:&quot;In Production&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;prodstatus&quot;}]},{&quot;groupName&quot;:&quot;drugname&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;drugname&quot;,&quot;categoryName&quot;:&quot;Drug Names&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Beta&quot;,&quot;searchValueName&quot;:&quot;Beta&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;drugname&quot;}]},{&quot;groupName&quot;:&quot;therapeuticclassid&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;therapeuticclassid&quot;,&quot;categoryName&quot;:&quot;Therapeutic Class&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:1,&quot;searchValueName&quot;:&quot;Antidiabetic&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;therapeuticclassid&quot;}]},{&quot;groupName&quot;:&quot;therapeuticclassstatusid&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;therapeuticclassstatusid&quot;,&quot;categoryName&quot;:&quot;Therapeutic Class Status&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:3,&quot;searchValueName&quot;:&quot;Launched&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;therapeuticclassstatusid&quot;}]},{&quot;groupName&quot;:&quot;targetid&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;targetid&quot;,&quot;categoryName&quot;:&quot;Target&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:6,&quot;searchValueName&quot;:&quot;histamine receptor H1&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;targetid&quot;}]},{&quot;groupName&quot;:&quot;mechanismofactionid&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;mechanismofactionid&quot;,&quot;categoryName&quot;:&quot;Mechanism&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:2226,&quot;searchValueName&quot;:&quot;Oxygenase inhibitor&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;int&quot;,&quot;groupName&quot;:&quot;mechanismofactionid&quot;}]},{&quot;groupName&quot;:&quot;notetext&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;notetext&quot;,&quot;categoryName&quot;:&quot;Notes&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Test&quot;,&quot;searchValueName&quot;:&quot;Test&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;notetext&quot;}]}],&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">drugs.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/DrugsAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T09:47:45.345</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">drugs.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T09:47:45.345</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T011z_Company_Ids_500Plus" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;resultOptions&quot;:{&quot;showColumns&quot;:[&quot;productionStatus&quot;,&quot;id&quot;,&quot;companyName&quot;,&quot;city&quot;,&quot;state&quot;,&quot;country&quot;]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;id&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;19002&quot;,&quot;searchValueName&quot;:&quot;19002&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;19001&quot;,&quot;searchValueName&quot;:&quot;19001&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;19000&quot;,&quot;searchValueName&quot;:&quot;19000&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18999&quot;,&quot;searchValueName&quot;:&quot;18999&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18998&quot;,&quot;searchValueName&quot;:&quot;18998&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18997&quot;,&quot;searchValueName&quot;:&quot;18997&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18996&quot;,&quot;searchValueName&quot;:&quot;18996&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18995&quot;,&quot;searchValueName&quot;:&quot;18995&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18994&quot;,&quot;searchValueName&quot;:&quot;18994&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18993&quot;,&quot;searchValueName&quot;:&quot;18993&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18992&quot;,&quot;searchValueName&quot;:&quot;18992&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18991&quot;,&quot;searchValueName&quot;:&quot;18991&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18990&quot;,&quot;searchValueName&quot;:&quot;18990&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18989&quot;,&quot;searchValueName&quot;:&quot;18989&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18988&quot;,&quot;searchValueName&quot;:&quot;18988&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18987&quot;,&quot;searchValueName&quot;:&quot;18987&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18986&quot;,&quot;searchValueName&quot;:&quot;18986&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18985&quot;,&quot;searchValueName&quot;:&quot;18985&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18984&quot;,&quot;searchValueName&quot;:&quot;18984&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18983&quot;,&quot;searchValueName&quot;:&quot;18983&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18982&quot;,&quot;searchValueName&quot;:&quot;18982&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18981&quot;,&quot;searchValueName&quot;:&quot;18981&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18980&quot;,&quot;searchValueName&quot;:&quot;18980&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18979&quot;,&quot;searchValueName&quot;:&quot;18979&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18978&quot;,&quot;searchValueName&quot;:&quot;18978&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18977&quot;,&quot;searchValueName&quot;:&quot;18977&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18976&quot;,&quot;searchValueName&quot;:&quot;18976&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18975&quot;,&quot;searchValueName&quot;:&quot;18975&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18974&quot;,&quot;searchValueName&quot;:&quot;18974&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18973&quot;,&quot;searchValueName&quot;:&quot;18973&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18972&quot;,&quot;searchValueName&quot;:&quot;18972&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18971&quot;,&quot;searchValueName&quot;:&quot;18971&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18970&quot;,&quot;searchValueName&quot;:&quot;18970&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18969&quot;,&quot;searchValueName&quot;:&quot;18969&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18968&quot;,&quot;searchValueName&quot;:&quot;18968&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18967&quot;,&quot;searchValueName&quot;:&quot;18967&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18966&quot;,&quot;searchValueName&quot;:&quot;18966&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18965&quot;,&quot;searchValueName&quot;:&quot;18965&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18964&quot;,&quot;searchValueName&quot;:&quot;18964&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18963&quot;,&quot;searchValueName&quot;:&quot;18963&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18962&quot;,&quot;searchValueName&quot;:&quot;18962&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18961&quot;,&quot;searchValueName&quot;:&quot;18961&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18960&quot;,&quot;searchValueName&quot;:&quot;18960&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18959&quot;,&quot;searchValueName&quot;:&quot;18959&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18958&quot;,&quot;searchValueName&quot;:&quot;18958&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18957&quot;,&quot;searchValueName&quot;:&quot;18957&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18956&quot;,&quot;searchValueName&quot;:&quot;18956&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18955&quot;,&quot;searchValueName&quot;:&quot;18955&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18954&quot;,&quot;searchValueName&quot;:&quot;18954&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18953&quot;,&quot;searchValueName&quot;:&quot;18953&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18952&quot;,&quot;searchValueName&quot;:&quot;18952&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18950&quot;,&quot;searchValueName&quot;:&quot;18950&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18949&quot;,&quot;searchValueName&quot;:&quot;18949&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18947&quot;,&quot;searchValueName&quot;:&quot;18947&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18946&quot;,&quot;searchValueName&quot;:&quot;18946&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18945&quot;,&quot;searchValueName&quot;:&quot;18945&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18944&quot;,&quot;searchValueName&quot;:&quot;18944&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18943&quot;,&quot;searchValueName&quot;:&quot;18943&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18941&quot;,&quot;searchValueName&quot;:&quot;18941&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18940&quot;,&quot;searchValueName&quot;:&quot;18940&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18939&quot;,&quot;searchValueName&quot;:&quot;18939&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18938&quot;,&quot;searchValueName&quot;:&quot;18938&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18937&quot;,&quot;searchValueName&quot;:&quot;18937&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18936&quot;,&quot;searchValueName&quot;:&quot;18936&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18935&quot;,&quot;searchValueName&quot;:&quot;18935&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18934&quot;,&quot;searchValueName&quot;:&quot;18934&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18933&quot;,&quot;searchValueName&quot;:&quot;18933&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18929&quot;,&quot;searchValueName&quot;:&quot;18929&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18927&quot;,&quot;searchValueName&quot;:&quot;18927&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18926&quot;,&quot;searchValueName&quot;:&quot;18926&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18925&quot;,&quot;searchValueName&quot;:&quot;18925&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18924&quot;,&quot;searchValueName&quot;:&quot;18924&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18923&quot;,&quot;searchValueName&quot;:&quot;18923&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18922&quot;,&quot;searchValueName&quot;:&quot;18922&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18921&quot;,&quot;searchValueName&quot;:&quot;18921&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18920&quot;,&quot;searchValueName&quot;:&quot;18920&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18918&quot;,&quot;searchValueName&quot;:&quot;18918&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18917&quot;,&quot;searchValueName&quot;:&quot;18917&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18915&quot;,&quot;searchValueName&quot;:&quot;18915&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18914&quot;,&quot;searchValueName&quot;:&quot;18914&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18913&quot;,&quot;searchValueName&quot;:&quot;18913&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18912&quot;,&quot;searchValueName&quot;:&quot;18912&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18911&quot;,&quot;searchValueName&quot;:&quot;18911&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18910&quot;,&quot;searchValueName&quot;:&quot;18910&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18909&quot;,&quot;searchValueName&quot;:&quot;18909&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18908&quot;,&quot;searchValueName&quot;:&quot;18908&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18907&quot;,&quot;searchValueName&quot;:&quot;18907&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18906&quot;,&quot;searchValueName&quot;:&quot;18906&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18901&quot;,&quot;searchValueName&quot;:&quot;18901&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18900&quot;,&quot;searchValueName&quot;:&quot;18900&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18899&quot;,&quot;searchValueName&quot;:&quot;18899&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18898&quot;,&quot;searchValueName&quot;:&quot;18898&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18897&quot;,&quot;searchValueName&quot;:&quot;18897&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18896&quot;,&quot;searchValueName&quot;:&quot;18896&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18893&quot;,&quot;searchValueName&quot;:&quot;18893&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18892&quot;,&quot;searchValueName&quot;:&quot;18892&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18891&quot;,&quot;searchValueName&quot;:&quot;18891&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18890&quot;,&quot;searchValueName&quot;:&quot;18890&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18889&quot;,&quot;searchValueName&quot;:&quot;18889&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18888&quot;,&quot;searchValueName&quot;:&quot;18888&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18887&quot;,&quot;searchValueName&quot;:&quot;18887&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18885&quot;,&quot;searchValueName&quot;:&quot;18885&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18884&quot;,&quot;searchValueName&quot;:&quot;18884&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18883&quot;,&quot;searchValueName&quot;:&quot;18883&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18882&quot;,&quot;searchValueName&quot;:&quot;18882&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18881&quot;,&quot;searchValueName&quot;:&quot;18881&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18880&quot;,&quot;searchValueName&quot;:&quot;18880&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18879&quot;,&quot;searchValueName&quot;:&quot;18879&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18878&quot;,&quot;searchValueName&quot;:&quot;18878&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18877&quot;,&quot;searchValueName&quot;:&quot;18877&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18876&quot;,&quot;searchValueName&quot;:&quot;18876&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18875&quot;,&quot;searchValueName&quot;:&quot;18875&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18874&quot;,&quot;searchValueName&quot;:&quot;18874&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18873&quot;,&quot;searchValueName&quot;:&quot;18873&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18872&quot;,&quot;searchValueName&quot;:&quot;18872&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18871&quot;,&quot;searchValueName&quot;:&quot;18871&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18870&quot;,&quot;searchValueName&quot;:&quot;18870&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18869&quot;,&quot;searchValueName&quot;:&quot;18869&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18868&quot;,&quot;searchValueName&quot;:&quot;18868&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18867&quot;,&quot;searchValueName&quot;:&quot;18867&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18866&quot;,&quot;searchValueName&quot;:&quot;18866&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18865&quot;,&quot;searchValueName&quot;:&quot;18865&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18864&quot;,&quot;searchValueName&quot;:&quot;18864&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18863&quot;,&quot;searchValueName&quot;:&quot;18863&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18862&quot;,&quot;searchValueName&quot;:&quot;18862&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18861&quot;,&quot;searchValueName&quot;:&quot;18861&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18860&quot;,&quot;searchValueName&quot;:&quot;18860&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18859&quot;,&quot;searchValueName&quot;:&quot;18859&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18858&quot;,&quot;searchValueName&quot;:&quot;18858&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18857&quot;,&quot;searchValueName&quot;:&quot;18857&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18856&quot;,&quot;searchValueName&quot;:&quot;18856&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18855&quot;,&quot;searchValueName&quot;:&quot;18855&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18854&quot;,&quot;searchValueName&quot;:&quot;18854&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18853&quot;,&quot;searchValueName&quot;:&quot;18853&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18852&quot;,&quot;searchValueName&quot;:&quot;18852&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18851&quot;,&quot;searchValueName&quot;:&quot;18851&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18850&quot;,&quot;searchValueName&quot;:&quot;18850&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18849&quot;,&quot;searchValueName&quot;:&quot;18849&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18848&quot;,&quot;searchValueName&quot;:&quot;18848&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18846&quot;,&quot;searchValueName&quot;:&quot;18846&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18845&quot;,&quot;searchValueName&quot;:&quot;18845&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18844&quot;,&quot;searchValueName&quot;:&quot;18844&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18843&quot;,&quot;searchValueName&quot;:&quot;18843&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18842&quot;,&quot;searchValueName&quot;:&quot;18842&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18841&quot;,&quot;searchValueName&quot;:&quot;18841&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18840&quot;,&quot;searchValueName&quot;:&quot;18840&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18839&quot;,&quot;searchValueName&quot;:&quot;18839&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18838&quot;,&quot;searchValueName&quot;:&quot;18838&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18837&quot;,&quot;searchValueName&quot;:&quot;18837&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18836&quot;,&quot;searchValueName&quot;:&quot;18836&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18835&quot;,&quot;searchValueName&quot;:&quot;18835&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18834&quot;,&quot;searchValueName&quot;:&quot;18834&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18832&quot;,&quot;searchValueName&quot;:&quot;18832&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18831&quot;,&quot;searchValueName&quot;:&quot;18831&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18830&quot;,&quot;searchValueName&quot;:&quot;18830&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18829&quot;,&quot;searchValueName&quot;:&quot;18829&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18828&quot;,&quot;searchValueName&quot;:&quot;18828&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18827&quot;,&quot;searchValueName&quot;:&quot;18827&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18826&quot;,&quot;searchValueName&quot;:&quot;18826&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18825&quot;,&quot;searchValueName&quot;:&quot;18825&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18823&quot;,&quot;searchValueName&quot;:&quot;18823&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18822&quot;,&quot;searchValueName&quot;:&quot;18822&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18821&quot;,&quot;searchValueName&quot;:&quot;18821&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18820&quot;,&quot;searchValueName&quot;:&quot;18820&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18819&quot;,&quot;searchValueName&quot;:&quot;18819&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18818&quot;,&quot;searchValueName&quot;:&quot;18818&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18817&quot;,&quot;searchValueName&quot;:&quot;18817&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18816&quot;,&quot;searchValueName&quot;:&quot;18816&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18815&quot;,&quot;searchValueName&quot;:&quot;18815&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18814&quot;,&quot;searchValueName&quot;:&quot;18814&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18813&quot;,&quot;searchValueName&quot;:&quot;18813&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18812&quot;,&quot;searchValueName&quot;:&quot;18812&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18811&quot;,&quot;searchValueName&quot;:&quot;18811&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18810&quot;,&quot;searchValueName&quot;:&quot;18810&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18809&quot;,&quot;searchValueName&quot;:&quot;18809&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18808&quot;,&quot;searchValueName&quot;:&quot;18808&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18807&quot;,&quot;searchValueName&quot;:&quot;18807&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18806&quot;,&quot;searchValueName&quot;:&quot;18806&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18805&quot;,&quot;searchValueName&quot;:&quot;18805&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18804&quot;,&quot;searchValueName&quot;:&quot;18804&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18803&quot;,&quot;searchValueName&quot;:&quot;18803&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18802&quot;,&quot;searchValueName&quot;:&quot;18802&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18801&quot;,&quot;searchValueName&quot;:&quot;18801&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18800&quot;,&quot;searchValueName&quot;:&quot;18800&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18799&quot;,&quot;searchValueName&quot;:&quot;18799&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18798&quot;,&quot;searchValueName&quot;:&quot;18798&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18797&quot;,&quot;searchValueName&quot;:&quot;18797&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18796&quot;,&quot;searchValueName&quot;:&quot;18796&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18795&quot;,&quot;searchValueName&quot;:&quot;18795&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18794&quot;,&quot;searchValueName&quot;:&quot;18794&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18793&quot;,&quot;searchValueName&quot;:&quot;18793&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18792&quot;,&quot;searchValueName&quot;:&quot;18792&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18791&quot;,&quot;searchValueName&quot;:&quot;18791&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18790&quot;,&quot;searchValueName&quot;:&quot;18790&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18789&quot;,&quot;searchValueName&quot;:&quot;18789&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18788&quot;,&quot;searchValueName&quot;:&quot;18788&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18787&quot;,&quot;searchValueName&quot;:&quot;18787&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18786&quot;,&quot;searchValueName&quot;:&quot;18786&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18784&quot;,&quot;searchValueName&quot;:&quot;18784&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18783&quot;,&quot;searchValueName&quot;:&quot;18783&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18781&quot;,&quot;searchValueName&quot;:&quot;18781&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18780&quot;,&quot;searchValueName&quot;:&quot;18780&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18779&quot;,&quot;searchValueName&quot;:&quot;18779&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18778&quot;,&quot;searchValueName&quot;:&quot;18778&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18777&quot;,&quot;searchValueName&quot;:&quot;18777&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18775&quot;,&quot;searchValueName&quot;:&quot;18775&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18774&quot;,&quot;searchValueName&quot;:&quot;18774&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18773&quot;,&quot;searchValueName&quot;:&quot;18773&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18771&quot;,&quot;searchValueName&quot;:&quot;18771&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18770&quot;,&quot;searchValueName&quot;:&quot;18770&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18769&quot;,&quot;searchValueName&quot;:&quot;18769&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18768&quot;,&quot;searchValueName&quot;:&quot;18768&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18767&quot;,&quot;searchValueName&quot;:&quot;18767&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18766&quot;,&quot;searchValueName&quot;:&quot;18766&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18765&quot;,&quot;searchValueName&quot;:&quot;18765&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18764&quot;,&quot;searchValueName&quot;:&quot;18764&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18763&quot;,&quot;searchValueName&quot;:&quot;18763&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18762&quot;,&quot;searchValueName&quot;:&quot;18762&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18761&quot;,&quot;searchValueName&quot;:&quot;18761&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18760&quot;,&quot;searchValueName&quot;:&quot;18760&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18759&quot;,&quot;searchValueName&quot;:&quot;18759&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18758&quot;,&quot;searchValueName&quot;:&quot;18758&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18757&quot;,&quot;searchValueName&quot;:&quot;18757&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18756&quot;,&quot;searchValueName&quot;:&quot;18756&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18755&quot;,&quot;searchValueName&quot;:&quot;18755&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18754&quot;,&quot;searchValueName&quot;:&quot;18754&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18753&quot;,&quot;searchValueName&quot;:&quot;18753&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18752&quot;,&quot;searchValueName&quot;:&quot;18752&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18751&quot;,&quot;searchValueName&quot;:&quot;18751&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18750&quot;,&quot;searchValueName&quot;:&quot;18750&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18749&quot;,&quot;searchValueName&quot;:&quot;18749&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18748&quot;,&quot;searchValueName&quot;:&quot;18748&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18747&quot;,&quot;searchValueName&quot;:&quot;18747&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18746&quot;,&quot;searchValueName&quot;:&quot;18746&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18745&quot;,&quot;searchValueName&quot;:&quot;18745&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18744&quot;,&quot;searchValueName&quot;:&quot;18744&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18743&quot;,&quot;searchValueName&quot;:&quot;18743&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18742&quot;,&quot;searchValueName&quot;:&quot;18742&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18741&quot;,&quot;searchValueName&quot;:&quot;18741&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18740&quot;,&quot;searchValueName&quot;:&quot;18740&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18739&quot;,&quot;searchValueName&quot;:&quot;18739&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18738&quot;,&quot;searchValueName&quot;:&quot;18738&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18737&quot;,&quot;searchValueName&quot;:&quot;18737&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18736&quot;,&quot;searchValueName&quot;:&quot;18736&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18735&quot;,&quot;searchValueName&quot;:&quot;18735&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18734&quot;,&quot;searchValueName&quot;:&quot;18734&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18733&quot;,&quot;searchValueName&quot;:&quot;18733&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18732&quot;,&quot;searchValueName&quot;:&quot;18732&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18731&quot;,&quot;searchValueName&quot;:&quot;18731&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18730&quot;,&quot;searchValueName&quot;:&quot;18730&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18729&quot;,&quot;searchValueName&quot;:&quot;18729&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18728&quot;,&quot;searchValueName&quot;:&quot;18728&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18727&quot;,&quot;searchValueName&quot;:&quot;18727&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18726&quot;,&quot;searchValueName&quot;:&quot;18726&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18725&quot;,&quot;searchValueName&quot;:&quot;18725&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18724&quot;,&quot;searchValueName&quot;:&quot;18724&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18723&quot;,&quot;searchValueName&quot;:&quot;18723&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18722&quot;,&quot;searchValueName&quot;:&quot;18722&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18721&quot;,&quot;searchValueName&quot;:&quot;18721&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18720&quot;,&quot;searchValueName&quot;:&quot;18720&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18719&quot;,&quot;searchValueName&quot;:&quot;18719&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18718&quot;,&quot;searchValueName&quot;:&quot;18718&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18717&quot;,&quot;searchValueName&quot;:&quot;18717&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18716&quot;,&quot;searchValueName&quot;:&quot;18716&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18715&quot;,&quot;searchValueName&quot;:&quot;18715&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18714&quot;,&quot;searchValueName&quot;:&quot;18714&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18713&quot;,&quot;searchValueName&quot;:&quot;18713&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18712&quot;,&quot;searchValueName&quot;:&quot;18712&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18711&quot;,&quot;searchValueName&quot;:&quot;18711&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18710&quot;,&quot;searchValueName&quot;:&quot;18710&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18709&quot;,&quot;searchValueName&quot;:&quot;18709&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18708&quot;,&quot;searchValueName&quot;:&quot;18708&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18707&quot;,&quot;searchValueName&quot;:&quot;18707&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18706&quot;,&quot;searchValueName&quot;:&quot;18706&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18705&quot;,&quot;searchValueName&quot;:&quot;18705&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18704&quot;,&quot;searchValueName&quot;:&quot;18704&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18703&quot;,&quot;searchValueName&quot;:&quot;18703&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18702&quot;,&quot;searchValueName&quot;:&quot;18702&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18701&quot;,&quot;searchValueName&quot;:&quot;18701&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18700&quot;,&quot;searchValueName&quot;:&quot;18700&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18699&quot;,&quot;searchValueName&quot;:&quot;18699&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18698&quot;,&quot;searchValueName&quot;:&quot;18698&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18697&quot;,&quot;searchValueName&quot;:&quot;18697&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18696&quot;,&quot;searchValueName&quot;:&quot;18696&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18695&quot;,&quot;searchValueName&quot;:&quot;18695&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18694&quot;,&quot;searchValueName&quot;:&quot;18694&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18693&quot;,&quot;searchValueName&quot;:&quot;18693&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18692&quot;,&quot;searchValueName&quot;:&quot;18692&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18690&quot;,&quot;searchValueName&quot;:&quot;18690&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18689&quot;,&quot;searchValueName&quot;:&quot;18689&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18688&quot;,&quot;searchValueName&quot;:&quot;18688&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18687&quot;,&quot;searchValueName&quot;:&quot;18687&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18686&quot;,&quot;searchValueName&quot;:&quot;18686&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18685&quot;,&quot;searchValueName&quot;:&quot;18685&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18684&quot;,&quot;searchValueName&quot;:&quot;18684&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18683&quot;,&quot;searchValueName&quot;:&quot;18683&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18682&quot;,&quot;searchValueName&quot;:&quot;18682&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18681&quot;,&quot;searchValueName&quot;:&quot;18681&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18680&quot;,&quot;searchValueName&quot;:&quot;18680&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18679&quot;,&quot;searchValueName&quot;:&quot;18679&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18678&quot;,&quot;searchValueName&quot;:&quot;18678&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18677&quot;,&quot;searchValueName&quot;:&quot;18677&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18675&quot;,&quot;searchValueName&quot;:&quot;18675&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18674&quot;,&quot;searchValueName&quot;:&quot;18674&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18673&quot;,&quot;searchValueName&quot;:&quot;18673&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18672&quot;,&quot;searchValueName&quot;:&quot;18672&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18671&quot;,&quot;searchValueName&quot;:&quot;18671&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18670&quot;,&quot;searchValueName&quot;:&quot;18670&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18669&quot;,&quot;searchValueName&quot;:&quot;18669&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18668&quot;,&quot;searchValueName&quot;:&quot;18668&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18667&quot;,&quot;searchValueName&quot;:&quot;18667&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18665&quot;,&quot;searchValueName&quot;:&quot;18665&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18664&quot;,&quot;searchValueName&quot;:&quot;18664&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18663&quot;,&quot;searchValueName&quot;:&quot;18663&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18662&quot;,&quot;searchValueName&quot;:&quot;18662&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18661&quot;,&quot;searchValueName&quot;:&quot;18661&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18660&quot;,&quot;searchValueName&quot;:&quot;18660&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18659&quot;,&quot;searchValueName&quot;:&quot;18659&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18658&quot;,&quot;searchValueName&quot;:&quot;18658&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18657&quot;,&quot;searchValueName&quot;:&quot;18657&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18656&quot;,&quot;searchValueName&quot;:&quot;18656&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18655&quot;,&quot;searchValueName&quot;:&quot;18655&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18654&quot;,&quot;searchValueName&quot;:&quot;18654&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18653&quot;,&quot;searchValueName&quot;:&quot;18653&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18652&quot;,&quot;searchValueName&quot;:&quot;18652&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18651&quot;,&quot;searchValueName&quot;:&quot;18651&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18650&quot;,&quot;searchValueName&quot;:&quot;18650&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18649&quot;,&quot;searchValueName&quot;:&quot;18649&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18648&quot;,&quot;searchValueName&quot;:&quot;18648&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18647&quot;,&quot;searchValueName&quot;:&quot;18647&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18646&quot;,&quot;searchValueName&quot;:&quot;18646&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18645&quot;,&quot;searchValueName&quot;:&quot;18645&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18644&quot;,&quot;searchValueName&quot;:&quot;18644&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18643&quot;,&quot;searchValueName&quot;:&quot;18643&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18642&quot;,&quot;searchValueName&quot;:&quot;18642&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18641&quot;,&quot;searchValueName&quot;:&quot;18641&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18640&quot;,&quot;searchValueName&quot;:&quot;18640&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18639&quot;,&quot;searchValueName&quot;:&quot;18639&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18638&quot;,&quot;searchValueName&quot;:&quot;18638&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18637&quot;,&quot;searchValueName&quot;:&quot;18637&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18636&quot;,&quot;searchValueName&quot;:&quot;18636&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18635&quot;,&quot;searchValueName&quot;:&quot;18635&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18634&quot;,&quot;searchValueName&quot;:&quot;18634&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18633&quot;,&quot;searchValueName&quot;:&quot;18633&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18632&quot;,&quot;searchValueName&quot;:&quot;18632&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18631&quot;,&quot;searchValueName&quot;:&quot;18631&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18630&quot;,&quot;searchValueName&quot;:&quot;18630&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18629&quot;,&quot;searchValueName&quot;:&quot;18629&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18628&quot;,&quot;searchValueName&quot;:&quot;18628&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18627&quot;,&quot;searchValueName&quot;:&quot;18627&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18626&quot;,&quot;searchValueName&quot;:&quot;18626&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18625&quot;,&quot;searchValueName&quot;:&quot;18625&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18624&quot;,&quot;searchValueName&quot;:&quot;18624&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18623&quot;,&quot;searchValueName&quot;:&quot;18623&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18621&quot;,&quot;searchValueName&quot;:&quot;18621&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18620&quot;,&quot;searchValueName&quot;:&quot;18620&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18619&quot;,&quot;searchValueName&quot;:&quot;18619&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18617&quot;,&quot;searchValueName&quot;:&quot;18617&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18616&quot;,&quot;searchValueName&quot;:&quot;18616&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18615&quot;,&quot;searchValueName&quot;:&quot;18615&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18614&quot;,&quot;searchValueName&quot;:&quot;18614&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18613&quot;,&quot;searchValueName&quot;:&quot;18613&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18612&quot;,&quot;searchValueName&quot;:&quot;18612&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18610&quot;,&quot;searchValueName&quot;:&quot;18610&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18609&quot;,&quot;searchValueName&quot;:&quot;18609&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18608&quot;,&quot;searchValueName&quot;:&quot;18608&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18606&quot;,&quot;searchValueName&quot;:&quot;18606&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18605&quot;,&quot;searchValueName&quot;:&quot;18605&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18604&quot;,&quot;searchValueName&quot;:&quot;18604&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18603&quot;,&quot;searchValueName&quot;:&quot;18603&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18602&quot;,&quot;searchValueName&quot;:&quot;18602&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18601&quot;,&quot;searchValueName&quot;:&quot;18601&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18600&quot;,&quot;searchValueName&quot;:&quot;18600&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18599&quot;,&quot;searchValueName&quot;:&quot;18599&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18598&quot;,&quot;searchValueName&quot;:&quot;18598&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18597&quot;,&quot;searchValueName&quot;:&quot;18597&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18596&quot;,&quot;searchValueName&quot;:&quot;18596&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18595&quot;,&quot;searchValueName&quot;:&quot;18595&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18594&quot;,&quot;searchValueName&quot;:&quot;18594&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18593&quot;,&quot;searchValueName&quot;:&quot;18593&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18592&quot;,&quot;searchValueName&quot;:&quot;18592&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18591&quot;,&quot;searchValueName&quot;:&quot;18591&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18590&quot;,&quot;searchValueName&quot;:&quot;18590&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18589&quot;,&quot;searchValueName&quot;:&quot;18589&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18588&quot;,&quot;searchValueName&quot;:&quot;18588&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18587&quot;,&quot;searchValueName&quot;:&quot;18587&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18586&quot;,&quot;searchValueName&quot;:&quot;18586&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18585&quot;,&quot;searchValueName&quot;:&quot;18585&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18584&quot;,&quot;searchValueName&quot;:&quot;18584&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18583&quot;,&quot;searchValueName&quot;:&quot;18583&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18582&quot;,&quot;searchValueName&quot;:&quot;18582&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18581&quot;,&quot;searchValueName&quot;:&quot;18581&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18580&quot;,&quot;searchValueName&quot;:&quot;18580&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18579&quot;,&quot;searchValueName&quot;:&quot;18579&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18578&quot;,&quot;searchValueName&quot;:&quot;18578&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18577&quot;,&quot;searchValueName&quot;:&quot;18577&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18576&quot;,&quot;searchValueName&quot;:&quot;18576&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18575&quot;,&quot;searchValueName&quot;:&quot;18575&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18574&quot;,&quot;searchValueName&quot;:&quot;18574&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18573&quot;,&quot;searchValueName&quot;:&quot;18573&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18572&quot;,&quot;searchValueName&quot;:&quot;18572&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18571&quot;,&quot;searchValueName&quot;:&quot;18571&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18570&quot;,&quot;searchValueName&quot;:&quot;18570&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18569&quot;,&quot;searchValueName&quot;:&quot;18569&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18568&quot;,&quot;searchValueName&quot;:&quot;18568&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18567&quot;,&quot;searchValueName&quot;:&quot;18567&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18566&quot;,&quot;searchValueName&quot;:&quot;18566&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18565&quot;,&quot;searchValueName&quot;:&quot;18565&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18564&quot;,&quot;searchValueName&quot;:&quot;18564&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18563&quot;,&quot;searchValueName&quot;:&quot;18563&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18562&quot;,&quot;searchValueName&quot;:&quot;18562&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18561&quot;,&quot;searchValueName&quot;:&quot;18561&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18560&quot;,&quot;searchValueName&quot;:&quot;18560&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18559&quot;,&quot;searchValueName&quot;:&quot;18559&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18558&quot;,&quot;searchValueName&quot;:&quot;18558&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18557&quot;,&quot;searchValueName&quot;:&quot;18557&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18556&quot;,&quot;searchValueName&quot;:&quot;18556&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18555&quot;,&quot;searchValueName&quot;:&quot;18555&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18554&quot;,&quot;searchValueName&quot;:&quot;18554&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18553&quot;,&quot;searchValueName&quot;:&quot;18553&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18552&quot;,&quot;searchValueName&quot;:&quot;18552&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18551&quot;,&quot;searchValueName&quot;:&quot;18551&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18550&quot;,&quot;searchValueName&quot;:&quot;18550&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18549&quot;,&quot;searchValueName&quot;:&quot;18549&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18548&quot;,&quot;searchValueName&quot;:&quot;18548&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18547&quot;,&quot;searchValueName&quot;:&quot;18547&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18546&quot;,&quot;searchValueName&quot;:&quot;18546&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18545&quot;,&quot;searchValueName&quot;:&quot;18545&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18544&quot;,&quot;searchValueName&quot;:&quot;18544&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18543&quot;,&quot;searchValueName&quot;:&quot;18543&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18542&quot;,&quot;searchValueName&quot;:&quot;18542&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18541&quot;,&quot;searchValueName&quot;:&quot;18541&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18540&quot;,&quot;searchValueName&quot;:&quot;18540&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18539&quot;,&quot;searchValueName&quot;:&quot;18539&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18538&quot;,&quot;searchValueName&quot;:&quot;18538&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18537&quot;,&quot;searchValueName&quot;:&quot;18537&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18536&quot;,&quot;searchValueName&quot;:&quot;18536&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18535&quot;,&quot;searchValueName&quot;:&quot;18535&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18534&quot;,&quot;searchValueName&quot;:&quot;18534&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18533&quot;,&quot;searchValueName&quot;:&quot;18533&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18532&quot;,&quot;searchValueName&quot;:&quot;18532&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18531&quot;,&quot;searchValueName&quot;:&quot;18531&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18530&quot;,&quot;searchValueName&quot;:&quot;18530&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18529&quot;,&quot;searchValueName&quot;:&quot;18529&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18528&quot;,&quot;searchValueName&quot;:&quot;18528&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18527&quot;,&quot;searchValueName&quot;:&quot;18527&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18526&quot;,&quot;searchValueName&quot;:&quot;18526&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18525&quot;,&quot;searchValueName&quot;:&quot;18525&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18524&quot;,&quot;searchValueName&quot;:&quot;18524&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18523&quot;,&quot;searchValueName&quot;:&quot;18523&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18521&quot;,&quot;searchValueName&quot;:&quot;18521&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18520&quot;,&quot;searchValueName&quot;:&quot;18520&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18519&quot;,&quot;searchValueName&quot;:&quot;18519&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18518&quot;,&quot;searchValueName&quot;:&quot;18518&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18517&quot;,&quot;searchValueName&quot;:&quot;18517&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18516&quot;,&quot;searchValueName&quot;:&quot;18516&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18515&quot;,&quot;searchValueName&quot;:&quot;18515&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18514&quot;,&quot;searchValueName&quot;:&quot;18514&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18513&quot;,&quot;searchValueName&quot;:&quot;18513&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18512&quot;,&quot;searchValueName&quot;:&quot;18512&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18511&quot;,&quot;searchValueName&quot;:&quot;18511&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18510&quot;,&quot;searchValueName&quot;:&quot;18510&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18509&quot;,&quot;searchValueName&quot;:&quot;18509&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18508&quot;,&quot;searchValueName&quot;:&quot;18508&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18507&quot;,&quot;searchValueName&quot;:&quot;18507&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18506&quot;,&quot;searchValueName&quot;:&quot;18506&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18505&quot;,&quot;searchValueName&quot;:&quot;18505&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18504&quot;,&quot;searchValueName&quot;:&quot;18504&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18503&quot;,&quot;searchValueName&quot;:&quot;18503&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18502&quot;,&quot;searchValueName&quot;:&quot;18502&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18501&quot;,&quot;searchValueName&quot;:&quot;18501&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18500&quot;,&quot;searchValueName&quot;:&quot;18500&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18499&quot;,&quot;searchValueName&quot;:&quot;18499&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18498&quot;,&quot;searchValueName&quot;:&quot;18498&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18497&quot;,&quot;searchValueName&quot;:&quot;18497&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18496&quot;,&quot;searchValueName&quot;:&quot;18496&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18495&quot;,&quot;searchValueName&quot;:&quot;18495&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18494&quot;,&quot;searchValueName&quot;:&quot;18494&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18493&quot;,&quot;searchValueName&quot;:&quot;18493&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18492&quot;,&quot;searchValueName&quot;:&quot;18492&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18491&quot;,&quot;searchValueName&quot;:&quot;18491&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18490&quot;,&quot;searchValueName&quot;:&quot;18490&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18489&quot;,&quot;searchValueName&quot;:&quot;18489&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18488&quot;,&quot;searchValueName&quot;:&quot;18488&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18487&quot;,&quot;searchValueName&quot;:&quot;18487&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18486&quot;,&quot;searchValueName&quot;:&quot;18486&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18484&quot;,&quot;searchValueName&quot;:&quot;18484&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18483&quot;,&quot;searchValueName&quot;:&quot;18483&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18482&quot;,&quot;searchValueName&quot;:&quot;18482&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18481&quot;,&quot;searchValueName&quot;:&quot;18481&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18480&quot;,&quot;searchValueName&quot;:&quot;18480&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18479&quot;,&quot;searchValueName&quot;:&quot;18479&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18478&quot;,&quot;searchValueName&quot;:&quot;18478&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18477&quot;,&quot;searchValueName&quot;:&quot;18477&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18476&quot;,&quot;searchValueName&quot;:&quot;18476&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18475&quot;,&quot;searchValueName&quot;:&quot;18475&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18474&quot;,&quot;searchValueName&quot;:&quot;18474&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18473&quot;,&quot;searchValueName&quot;:&quot;18473&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18472&quot;,&quot;searchValueName&quot;:&quot;18472&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18471&quot;,&quot;searchValueName&quot;:&quot;18471&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18469&quot;,&quot;searchValueName&quot;:&quot;18469&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18468&quot;,&quot;searchValueName&quot;:&quot;18468&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18467&quot;,&quot;searchValueName&quot;:&quot;18467&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18466&quot;,&quot;searchValueName&quot;:&quot;18466&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18465&quot;,&quot;searchValueName&quot;:&quot;18465&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18464&quot;,&quot;searchValueName&quot;:&quot;18464&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18459&quot;,&quot;searchValueName&quot;:&quot;18459&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18458&quot;,&quot;searchValueName&quot;:&quot;18458&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18457&quot;,&quot;searchValueName&quot;:&quot;18457&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Company ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;18456&quot;,&quot;searchValueName&quot;:&quot;18456&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;}]}],&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/CompanyAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-11-05T12:55:41.579</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">sites.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-11-05T12:55:41.579</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T012z_Company_Name_10" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;resultOptions&quot;:{&quot;showColumns&quot;:[&quot;productionStatus&quot;,&quot;id&quot;,&quot;companyName&quot;,&quot;city&quot;,&quot;state&quot;,&quot;country&quot;]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;name&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;name&quot;,&quot;categoryName&quot;:&quot;Company name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;EB TEST COMPANY 1&quot;,&quot;searchValueName&quot;:&quot;EB TEST COMPANY 1&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;name&quot;},{&quot;columnName&quot;:&quot;name&quot;,&quot;categoryName&quot;:&quot;Company name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Co_NewSanity&quot;,&quot;searchValueName&quot;:&quot;Co_NewSanity&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;name&quot;},{&quot;columnName&quot;:&quot;name&quot;,&quot;categoryName&quot;:&quot;Company name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;NewTestIan PharmA&quot;,&quot;searchValueName&quot;:&quot;NewTestIan PharmA&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;name&quot;},{&quot;columnName&quot;:&quot;name&quot;,&quot;categoryName&quot;:&quot;Company name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;fas US&quot;,&quot;searchValueName&quot;:&quot;fas US&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;name&quot;},{&quot;columnName&quot;:&quot;name&quot;,&quot;categoryName&quot;:&quot;Company name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;testteam HYD&quot;,&quot;searchValueName&quot;:&quot;testteam HYD&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;name&quot;},{&quot;columnName&quot;:&quot;name&quot;,&quot;categoryName&quot;:&quot;Company name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;UatHYD Ltd&quot;,&quot;searchValueName&quot;:&quot;UatHYD Ltd&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;name&quot;},{&quot;columnName&quot;:&quot;name&quot;,&quot;categoryName&quot;:&quot;Company name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;UATtest Bio&quot;,&quot;searchValueName&quot;:&quot;UATtest Bio&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;name&quot;},{&quot;columnName&quot;:&quot;name&quot;,&quot;categoryName&quot;:&quot;Company name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;GSK Ind&quot;,&quot;searchValueName&quot;:&quot;GSK Ind&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;name&quot;},{&quot;columnName&quot;:&quot;name&quot;,&quot;categoryName&quot;:&quot;Company name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;UAT comp MA&quot;,&quot;searchValueName&quot;:&quot;UAT comp MA&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;name&quot;},{&quot;columnName&quot;:&quot;name&quot;,&quot;categoryName&quot;:&quot;Company name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;hntestcomp&quot;,&quot;searchValueName&quot;:&quot;hntestcomp&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;name&quot;}]}],&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/CompanyAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T10:03:56.161</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">sites.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T10:03:56.161</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T013z_Company_StockExchange_10" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;resultOptions&quot;:{&quot;showColumns&quot;:[&quot;productionStatus&quot;,&quot;id&quot;,&quot;companyName&quot;,&quot;city&quot;,&quot;state&quot;,&quot;country&quot;]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;stockexchangeid&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;stockexchangeid&quot;,&quot;categoryName&quot;:&quot;Stock Exchange&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:1,&quot;searchValueName&quot;:&quot;AMEX&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;stockexchangeid&quot;},{&quot;columnName&quot;:&quot;stockexchangeid&quot;,&quot;categoryName&quot;:&quot;Stock Exchange&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:2,&quot;searchValueName&quot;:&quot;AMS&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;stockexchangeid&quot;},{&quot;columnName&quot;:&quot;stockexchangeid&quot;,&quot;categoryName&quot;:&quot;Stock Exchange&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:4,&quot;searchValueName&quot;:&quot;ATH&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;stockexchangeid&quot;},{&quot;columnName&quot;:&quot;stockexchangeid&quot;,&quot;categoryName&quot;:&quot;Stock Exchange&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:5,&quot;searchValueName&quot;:&quot;BDP&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;stockexchangeid&quot;},{&quot;columnName&quot;:&quot;stockexchangeid&quot;,&quot;categoryName&quot;:&quot;Stock Exchange&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:6,&quot;searchValueName&quot;:&quot;BIT&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;stockexchangeid&quot;},{&quot;columnName&quot;:&quot;stockexchangeid&quot;,&quot;categoryName&quot;:&quot;Stock Exchange&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:16,&quot;searchValueName&quot;:&quot;ISE&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;stockexchangeid&quot;},{&quot;columnName&quot;:&quot;stockexchangeid&quot;,&quot;categoryName&quot;:&quot;Stock Exchange&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:24,&quot;searchValueName&quot;:&quot;NSE&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;stockexchangeid&quot;},{&quot;columnName&quot;:&quot;stockexchangeid&quot;,&quot;categoryName&quot;:&quot;Stock Exchange&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:7,&quot;searchValueName&quot;:&quot;BSE&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;stockexchangeid&quot;},{&quot;columnName&quot;:&quot;stockexchangeid&quot;,&quot;categoryName&quot;:&quot;Stock Exchange&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:22,&quot;searchValueName&quot;:&quot;NASDAQ&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;stockexchangeid&quot;},{&quot;columnName&quot;:&quot;stockexchangeid&quot;,&quot;categoryName&quot;:&quot;Stock Exchange&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:25,&quot;searchValueName&quot;:&quot;NYSE&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;stockexchangeid&quot;}]}],&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata"></stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/CompanyAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T11:52:23.577</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">sites.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T11:52:23.577</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T014z_Company_MultipleCategories" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;resultOptions&quot;:{&quot;showColumns&quot;:[&quot;productionStatus&quot;,&quot;id&quot;,&quot;companyName&quot;,&quot;city&quot;,&quot;state&quot;,&quot;country&quot;]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;prodstatusid&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;prodstatusid&quot;,&quot;categoryName&quot;:&quot;Production Status&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:1,&quot;searchValueName&quot;:&quot;In Production&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;prodstatusid&quot;}]},{&quot;groupName&quot;:&quot;statusid&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;statusid&quot;,&quot;categoryName&quot;:&quot;Status&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:1,&quot;searchValueName&quot;:&quot;Active&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;statusid&quot;}]},{&quot;groupName&quot;:&quot;typeid&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;typeid&quot;,&quot;categoryName&quot;:&quot;Ownership&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:1,&quot;searchValueName&quot;:&quot;Public&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;typeid&quot;}]},{&quot;groupName&quot;:&quot;countryid&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;countryid&quot;,&quot;categoryName&quot;:&quot;Country&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:98,&quot;searchValueName&quot;:&quot;India&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;countryid&quot;}]},{&quot;groupName&quot;:&quot;establishedyear&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;establishedyear&quot;,&quot;categoryName&quot;:&quot;Year Established&quot;,&quot;operator&quot;:6,&quot;searchValue&quot;:&quot;2020&quot;,&quot;searchValueName&quot;:&quot;2020&quot;,&quot;condition&quot;:0,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;establishedyear&quot;},{&quot;columnName&quot;:&quot;establishedyear&quot;,&quot;categoryName&quot;:&quot;Year Established&quot;,&quot;operator&quot;:7,&quot;searchValue&quot;:&quot;2022&quot;,&quot;searchValueName&quot;:&quot;2022&quot;,&quot;condition&quot;:0,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;establishedyear&quot;}]},{&quot;groupName&quot;:&quot;relatedcompanyid&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;relatedcompanyid&quot;,&quot;categoryName&quot;:&quot;Subsidiary&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:17839,&quot;searchValueName&quot;:&quot;1200 Pharma&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;relatedcompanyid&quot;}]},{&quot;groupName&quot;:&quot;Notetext&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;Notetext&quot;,&quot;categoryName&quot;:&quot;Notes&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Test&quot;,&quot;searchValueName&quot;:&quot;Test&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;Notetext&quot;}]}],&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/CompanyAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-11-08T12:18:42.009</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">sites.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-11-08T12:18:42.009</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T015z_Person_Ids_500Plus" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;resultOptions&quot;:{&quot;showColumns&quot;:[&quot;licenses&quot;,&quot;id&quot;,&quot;personType&quot;,&quot;firstName&quot;,&quot;lastName&quot;,&quot;middleName&quot;,&quot;productionStatus&quot;,&quot;specialties&quot;,&quot;siteName&quot;,&quot;emailAddress&quot;,&quot;country&quot;]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;id&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084535&quot;,&quot;searchValueName&quot;:&quot;1084535&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084468&quot;,&quot;searchValueName&quot;:&quot;1084468&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084528&quot;,&quot;searchValueName&quot;:&quot;1084528&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084534&quot;,&quot;searchValueName&quot;:&quot;1084534&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084533&quot;,&quot;searchValueName&quot;:&quot;1084533&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084431&quot;,&quot;searchValueName&quot;:&quot;1084431&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084414&quot;,&quot;searchValueName&quot;:&quot;1084414&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084441&quot;,&quot;searchValueName&quot;:&quot;1084441&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084488&quot;,&quot;searchValueName&quot;:&quot;1084488&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084482&quot;,&quot;searchValueName&quot;:&quot;1084482&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084492&quot;,&quot;searchValueName&quot;:&quot;1084492&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084472&quot;,&quot;searchValueName&quot;:&quot;1084472&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084479&quot;,&quot;searchValueName&quot;:&quot;1084479&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084532&quot;,&quot;searchValueName&quot;:&quot;1084532&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084511&quot;,&quot;searchValueName&quot;:&quot;1084511&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084531&quot;,&quot;searchValueName&quot;:&quot;1084531&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084529&quot;,&quot;searchValueName&quot;:&quot;1084529&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084530&quot;,&quot;searchValueName&quot;:&quot;1084530&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;20000&quot;,&quot;searchValueName&quot;:&quot;20000&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10002&quot;,&quot;searchValueName&quot;:&quot;10002&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10001&quot;,&quot;searchValueName&quot;:&quot;10001&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10000&quot;,&quot;searchValueName&quot;:&quot;10000&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084527&quot;,&quot;searchValueName&quot;:&quot;1084527&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084525&quot;,&quot;searchValueName&quot;:&quot;1084525&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084526&quot;,&quot;searchValueName&quot;:&quot;1084526&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084524&quot;,&quot;searchValueName&quot;:&quot;1084524&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084517&quot;,&quot;searchValueName&quot;:&quot;1084517&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084024&quot;,&quot;searchValueName&quot;:&quot;1084024&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084523&quot;,&quot;searchValueName&quot;:&quot;1084523&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;212755&quot;,&quot;searchValueName&quot;:&quot;212755&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084487&quot;,&quot;searchValueName&quot;:&quot;1084487&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084521&quot;,&quot;searchValueName&quot;:&quot;1084521&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1081817&quot;,&quot;searchValueName&quot;:&quot;1081817&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084519&quot;,&quot;searchValueName&quot;:&quot;1084519&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084518&quot;,&quot;searchValueName&quot;:&quot;1084518&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;89769&quot;,&quot;searchValueName&quot;:&quot;89769&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084516&quot;,&quot;searchValueName&quot;:&quot;1084516&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1083774&quot;,&quot;searchValueName&quot;:&quot;1083774&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084515&quot;,&quot;searchValueName&quot;:&quot;1084515&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084503&quot;,&quot;searchValueName&quot;:&quot;1084503&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084513&quot;,&quot;searchValueName&quot;:&quot;1084513&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;111&quot;,&quot;searchValueName&quot;:&quot;111&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084502&quot;,&quot;searchValueName&quot;:&quot;1084502&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084501&quot;,&quot;searchValueName&quot;:&quot;1084501&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084493&quot;,&quot;searchValueName&quot;:&quot;1084493&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084478&quot;,&quot;searchValueName&quot;:&quot;1084478&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084494&quot;,&quot;searchValueName&quot;:&quot;1084494&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084466&quot;,&quot;searchValueName&quot;:&quot;1084466&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;123&quot;,&quot;searchValueName&quot;:&quot;123&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;939017&quot;,&quot;searchValueName&quot;:&quot;939017&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084454&quot;,&quot;searchValueName&quot;:&quot;1084454&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084450&quot;,&quot;searchValueName&quot;:&quot;1084450&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084480&quot;,&quot;searchValueName&quot;:&quot;1084480&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1082840&quot;,&quot;searchValueName&quot;:&quot;1082840&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084474&quot;,&quot;searchValueName&quot;:&quot;1084474&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1084393&quot;,&quot;searchValueName&quot;:&quot;1084393&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;1072805&quot;,&quot;searchValueName&quot;:&quot;1072805&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10911&quot;,&quot;searchValueName&quot;:&quot;10911&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10910&quot;,&quot;searchValueName&quot;:&quot;10910&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10903&quot;,&quot;searchValueName&quot;:&quot;10903&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10999&quot;,&quot;searchValueName&quot;:&quot;10999&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11000&quot;,&quot;searchValueName&quot;:&quot;11000&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11001&quot;,&quot;searchValueName&quot;:&quot;11001&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11002&quot;,&quot;searchValueName&quot;:&quot;11002&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11003&quot;,&quot;searchValueName&quot;:&quot;11003&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10922&quot;,&quot;searchValueName&quot;:&quot;10922&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10909&quot;,&quot;searchValueName&quot;:&quot;10909&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10921&quot;,&quot;searchValueName&quot;:&quot;10921&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10920&quot;,&quot;searchValueName&quot;:&quot;10920&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10908&quot;,&quot;searchValueName&quot;:&quot;10908&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10902&quot;,&quot;searchValueName&quot;:&quot;10902&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10898&quot;,&quot;searchValueName&quot;:&quot;10898&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10919&quot;,&quot;searchValueName&quot;:&quot;10919&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10918&quot;,&quot;searchValueName&quot;:&quot;10918&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10907&quot;,&quot;searchValueName&quot;:&quot;10907&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11015&quot;,&quot;searchValueName&quot;:&quot;11015&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11014&quot;,&quot;searchValueName&quot;:&quot;11014&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11016&quot;,&quot;searchValueName&quot;:&quot;11016&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11017&quot;,&quot;searchValueName&quot;:&quot;11017&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11018&quot;,&quot;searchValueName&quot;:&quot;11018&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11019&quot;,&quot;searchValueName&quot;:&quot;11019&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11020&quot;,&quot;searchValueName&quot;:&quot;11020&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11021&quot;,&quot;searchValueName&quot;:&quot;11021&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11022&quot;,&quot;searchValueName&quot;:&quot;11022&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11023&quot;,&quot;searchValueName&quot;:&quot;11023&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11071&quot;,&quot;searchValueName&quot;:&quot;11071&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11072&quot;,&quot;searchValueName&quot;:&quot;11072&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11073&quot;,&quot;searchValueName&quot;:&quot;11073&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11074&quot;,&quot;searchValueName&quot;:&quot;11074&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11075&quot;,&quot;searchValueName&quot;:&quot;11075&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11076&quot;,&quot;searchValueName&quot;:&quot;11076&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11077&quot;,&quot;searchValueName&quot;:&quot;11077&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11078&quot;,&quot;searchValueName&quot;:&quot;11078&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11079&quot;,&quot;searchValueName&quot;:&quot;11079&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11080&quot;,&quot;searchValueName&quot;:&quot;11080&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11081&quot;,&quot;searchValueName&quot;:&quot;11081&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11082&quot;,&quot;searchValueName&quot;:&quot;11082&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10917&quot;,&quot;searchValueName&quot;:&quot;10917&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11013&quot;,&quot;searchValueName&quot;:&quot;11013&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11012&quot;,&quot;searchValueName&quot;:&quot;11012&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10916&quot;,&quot;searchValueName&quot;:&quot;10916&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10906&quot;,&quot;searchValueName&quot;:&quot;10906&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10901&quot;,&quot;searchValueName&quot;:&quot;10901&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11011&quot;,&quot;searchValueName&quot;:&quot;11011&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11010&quot;,&quot;searchValueName&quot;:&quot;11010&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10915&quot;,&quot;searchValueName&quot;:&quot;10915&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11094&quot;,&quot;searchValueName&quot;:&quot;11094&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11093&quot;,&quot;searchValueName&quot;:&quot;11093&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11009&quot;,&quot;searchValueName&quot;:&quot;11009&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11095&quot;,&quot;searchValueName&quot;:&quot;11095&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11150&quot;,&quot;searchValueName&quot;:&quot;11150&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11151&quot;,&quot;searchValueName&quot;:&quot;11151&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11152&quot;,&quot;searchValueName&quot;:&quot;11152&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11153&quot;,&quot;searchValueName&quot;:&quot;11153&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11154&quot;,&quot;searchValueName&quot;:&quot;11154&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11155&quot;,&quot;searchValueName&quot;:&quot;11155&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11156&quot;,&quot;searchValueName&quot;:&quot;11156&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11157&quot;,&quot;searchValueName&quot;:&quot;11157&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11158&quot;,&quot;searchValueName&quot;:&quot;11158&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11159&quot;,&quot;searchValueName&quot;:&quot;11159&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11160&quot;,&quot;searchValueName&quot;:&quot;11160&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11161&quot;,&quot;searchValueName&quot;:&quot;11161&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11162&quot;,&quot;searchValueName&quot;:&quot;11162&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11163&quot;,&quot;searchValueName&quot;:&quot;11163&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11164&quot;,&quot;searchValueName&quot;:&quot;11164&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11189&quot;,&quot;searchValueName&quot;:&quot;11189&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11190&quot;,&quot;searchValueName&quot;:&quot;11190&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11191&quot;,&quot;searchValueName&quot;:&quot;11191&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11192&quot;,&quot;searchValueName&quot;:&quot;11192&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11193&quot;,&quot;searchValueName&quot;:&quot;11193&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11195&quot;,&quot;searchValueName&quot;:&quot;11195&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11196&quot;,&quot;searchValueName&quot;:&quot;11196&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11197&quot;,&quot;searchValueName&quot;:&quot;11197&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11198&quot;,&quot;searchValueName&quot;:&quot;11198&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11199&quot;,&quot;searchValueName&quot;:&quot;11199&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11200&quot;,&quot;searchValueName&quot;:&quot;11200&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11201&quot;,&quot;searchValueName&quot;:&quot;11201&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11202&quot;,&quot;searchValueName&quot;:&quot;11202&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11203&quot;,&quot;searchValueName&quot;:&quot;11203&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11204&quot;,&quot;searchValueName&quot;:&quot;11204&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11205&quot;,&quot;searchValueName&quot;:&quot;11205&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11206&quot;,&quot;searchValueName&quot;:&quot;11206&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11207&quot;,&quot;searchValueName&quot;:&quot;11207&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11208&quot;,&quot;searchValueName&quot;:&quot;11208&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11209&quot;,&quot;searchValueName&quot;:&quot;11209&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11210&quot;,&quot;searchValueName&quot;:&quot;11210&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11211&quot;,&quot;searchValueName&quot;:&quot;11211&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11212&quot;,&quot;searchValueName&quot;:&quot;11212&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11213&quot;,&quot;searchValueName&quot;:&quot;11213&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11286&quot;,&quot;searchValueName&quot;:&quot;11286&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11287&quot;,&quot;searchValueName&quot;:&quot;11287&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11288&quot;,&quot;searchValueName&quot;:&quot;11288&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11289&quot;,&quot;searchValueName&quot;:&quot;11289&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11290&quot;,&quot;searchValueName&quot;:&quot;11290&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11291&quot;,&quot;searchValueName&quot;:&quot;11291&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11292&quot;,&quot;searchValueName&quot;:&quot;11292&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11293&quot;,&quot;searchValueName&quot;:&quot;11293&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11294&quot;,&quot;searchValueName&quot;:&quot;11294&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11295&quot;,&quot;searchValueName&quot;:&quot;11295&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11296&quot;,&quot;searchValueName&quot;:&quot;11296&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11297&quot;,&quot;searchValueName&quot;:&quot;11297&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11092&quot;,&quot;searchValueName&quot;:&quot;11092&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11091&quot;,&quot;searchValueName&quot;:&quot;11091&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11008&quot;,&quot;searchValueName&quot;:&quot;11008&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10914&quot;,&quot;searchValueName&quot;:&quot;10914&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10905&quot;,&quot;searchValueName&quot;:&quot;10905&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11090&quot;,&quot;searchValueName&quot;:&quot;11090&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11089&quot;,&quot;searchValueName&quot;:&quot;11089&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11007&quot;,&quot;searchValueName&quot;:&quot;11007&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11309&quot;,&quot;searchValueName&quot;:&quot;11309&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11308&quot;,&quot;searchValueName&quot;:&quot;11308&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11088&quot;,&quot;searchValueName&quot;:&quot;11088&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11307&quot;,&quot;searchValueName&quot;:&quot;11307&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11357&quot;,&quot;searchValueName&quot;:&quot;11357&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11358&quot;,&quot;searchValueName&quot;:&quot;11358&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11359&quot;,&quot;searchValueName&quot;:&quot;11359&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11360&quot;,&quot;searchValueName&quot;:&quot;11360&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11361&quot;,&quot;searchValueName&quot;:&quot;11361&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11362&quot;,&quot;searchValueName&quot;:&quot;11362&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11363&quot;,&quot;searchValueName&quot;:&quot;11363&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11364&quot;,&quot;searchValueName&quot;:&quot;11364&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11365&quot;,&quot;searchValueName&quot;:&quot;11365&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11366&quot;,&quot;searchValueName&quot;:&quot;11366&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11367&quot;,&quot;searchValueName&quot;:&quot;11367&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11368&quot;,&quot;searchValueName&quot;:&quot;11368&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11369&quot;,&quot;searchValueName&quot;:&quot;11369&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11370&quot;,&quot;searchValueName&quot;:&quot;11370&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11371&quot;,&quot;searchValueName&quot;:&quot;11371&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11372&quot;,&quot;searchValueName&quot;:&quot;11372&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11373&quot;,&quot;searchValueName&quot;:&quot;11373&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11374&quot;,&quot;searchValueName&quot;:&quot;11374&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11375&quot;,&quot;searchValueName&quot;:&quot;11375&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11398&quot;,&quot;searchValueName&quot;:&quot;11398&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11399&quot;,&quot;searchValueName&quot;:&quot;11399&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11400&quot;,&quot;searchValueName&quot;:&quot;11400&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11401&quot;,&quot;searchValueName&quot;:&quot;11401&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11402&quot;,&quot;searchValueName&quot;:&quot;11402&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11404&quot;,&quot;searchValueName&quot;:&quot;11404&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11405&quot;,&quot;searchValueName&quot;:&quot;11405&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11406&quot;,&quot;searchValueName&quot;:&quot;11406&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11407&quot;,&quot;searchValueName&quot;:&quot;11407&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11408&quot;,&quot;searchValueName&quot;:&quot;11408&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11409&quot;,&quot;searchValueName&quot;:&quot;11409&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11410&quot;,&quot;searchValueName&quot;:&quot;11410&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11411&quot;,&quot;searchValueName&quot;:&quot;11411&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11412&quot;,&quot;searchValueName&quot;:&quot;11412&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11413&quot;,&quot;searchValueName&quot;:&quot;11413&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11414&quot;,&quot;searchValueName&quot;:&quot;11414&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11415&quot;,&quot;searchValueName&quot;:&quot;11415&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11416&quot;,&quot;searchValueName&quot;:&quot;11416&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11417&quot;,&quot;searchValueName&quot;:&quot;11417&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11418&quot;,&quot;searchValueName&quot;:&quot;11418&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11419&quot;,&quot;searchValueName&quot;:&quot;11419&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11420&quot;,&quot;searchValueName&quot;:&quot;11420&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11421&quot;,&quot;searchValueName&quot;:&quot;11421&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11422&quot;,&quot;searchValueName&quot;:&quot;11422&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11447&quot;,&quot;searchValueName&quot;:&quot;11447&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11448&quot;,&quot;searchValueName&quot;:&quot;11448&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11449&quot;,&quot;searchValueName&quot;:&quot;11449&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11450&quot;,&quot;searchValueName&quot;:&quot;11450&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11451&quot;,&quot;searchValueName&quot;:&quot;11451&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11452&quot;,&quot;searchValueName&quot;:&quot;11452&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11453&quot;,&quot;searchValueName&quot;:&quot;11453&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11454&quot;,&quot;searchValueName&quot;:&quot;11454&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11455&quot;,&quot;searchValueName&quot;:&quot;11455&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11456&quot;,&quot;searchValueName&quot;:&quot;11456&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11457&quot;,&quot;searchValueName&quot;:&quot;11457&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11458&quot;,&quot;searchValueName&quot;:&quot;11458&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11459&quot;,&quot;searchValueName&quot;:&quot;11459&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11460&quot;,&quot;searchValueName&quot;:&quot;11460&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11461&quot;,&quot;searchValueName&quot;:&quot;11461&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11462&quot;,&quot;searchValueName&quot;:&quot;11462&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11463&quot;,&quot;searchValueName&quot;:&quot;11463&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11464&quot;,&quot;searchValueName&quot;:&quot;11464&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11465&quot;,&quot;searchValueName&quot;:&quot;11465&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11466&quot;,&quot;searchValueName&quot;:&quot;11466&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11467&quot;,&quot;searchValueName&quot;:&quot;11467&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11468&quot;,&quot;searchValueName&quot;:&quot;11468&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11469&quot;,&quot;searchValueName&quot;:&quot;11469&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11470&quot;,&quot;searchValueName&quot;:&quot;11470&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11471&quot;,&quot;searchValueName&quot;:&quot;11471&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11472&quot;,&quot;searchValueName&quot;:&quot;11472&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11473&quot;,&quot;searchValueName&quot;:&quot;11473&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11474&quot;,&quot;searchValueName&quot;:&quot;11474&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11497&quot;,&quot;searchValueName&quot;:&quot;11497&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11498&quot;,&quot;searchValueName&quot;:&quot;11498&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11499&quot;,&quot;searchValueName&quot;:&quot;11499&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11500&quot;,&quot;searchValueName&quot;:&quot;11500&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11501&quot;,&quot;searchValueName&quot;:&quot;11501&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11502&quot;,&quot;searchValueName&quot;:&quot;11502&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11503&quot;,&quot;searchValueName&quot;:&quot;11503&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11504&quot;,&quot;searchValueName&quot;:&quot;11504&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11505&quot;,&quot;searchValueName&quot;:&quot;11505&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11506&quot;,&quot;searchValueName&quot;:&quot;11506&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11507&quot;,&quot;searchValueName&quot;:&quot;11507&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11508&quot;,&quot;searchValueName&quot;:&quot;11508&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11509&quot;,&quot;searchValueName&quot;:&quot;11509&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11510&quot;,&quot;searchValueName&quot;:&quot;11510&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11511&quot;,&quot;searchValueName&quot;:&quot;11511&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11512&quot;,&quot;searchValueName&quot;:&quot;11512&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11513&quot;,&quot;searchValueName&quot;:&quot;11513&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11514&quot;,&quot;searchValueName&quot;:&quot;11514&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11516&quot;,&quot;searchValueName&quot;:&quot;11516&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11517&quot;,&quot;searchValueName&quot;:&quot;11517&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11518&quot;,&quot;searchValueName&quot;:&quot;11518&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11519&quot;,&quot;searchValueName&quot;:&quot;11519&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11520&quot;,&quot;searchValueName&quot;:&quot;11520&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11521&quot;,&quot;searchValueName&quot;:&quot;11521&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11522&quot;,&quot;searchValueName&quot;:&quot;11522&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11523&quot;,&quot;searchValueName&quot;:&quot;11523&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11524&quot;,&quot;searchValueName&quot;:&quot;11524&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11525&quot;,&quot;searchValueName&quot;:&quot;11525&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11526&quot;,&quot;searchValueName&quot;:&quot;11526&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11527&quot;,&quot;searchValueName&quot;:&quot;11527&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11528&quot;,&quot;searchValueName&quot;:&quot;11528&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11529&quot;,&quot;searchValueName&quot;:&quot;11529&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11530&quot;,&quot;searchValueName&quot;:&quot;11530&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11531&quot;,&quot;searchValueName&quot;:&quot;11531&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11532&quot;,&quot;searchValueName&quot;:&quot;11532&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11533&quot;,&quot;searchValueName&quot;:&quot;11533&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11534&quot;,&quot;searchValueName&quot;:&quot;11534&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11535&quot;,&quot;searchValueName&quot;:&quot;11535&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11536&quot;,&quot;searchValueName&quot;:&quot;11536&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11537&quot;,&quot;searchValueName&quot;:&quot;11537&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11538&quot;,&quot;searchValueName&quot;:&quot;11538&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11539&quot;,&quot;searchValueName&quot;:&quot;11539&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11540&quot;,&quot;searchValueName&quot;:&quot;11540&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11542&quot;,&quot;searchValueName&quot;:&quot;11542&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11543&quot;,&quot;searchValueName&quot;:&quot;11543&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11306&quot;,&quot;searchValueName&quot;:&quot;11306&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11087&quot;,&quot;searchValueName&quot;:&quot;11087&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11006&quot;,&quot;searchValueName&quot;:&quot;11006&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;10913&quot;,&quot;searchValueName&quot;:&quot;10913&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11305&quot;,&quot;searchValueName&quot;:&quot;11305&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11304&quot;,&quot;searchValueName&quot;:&quot;11304&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11086&quot;,&quot;searchValueName&quot;:&quot;11086&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11555&quot;,&quot;searchValueName&quot;:&quot;11555&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11554&quot;,&quot;searchValueName&quot;:&quot;11554&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11303&quot;,&quot;searchValueName&quot;:&quot;11303&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11553&quot;,&quot;searchValueName&quot;:&quot;11553&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11552&quot;,&quot;searchValueName&quot;:&quot;11552&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11556&quot;,&quot;searchValueName&quot;:&quot;11556&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11557&quot;,&quot;searchValueName&quot;:&quot;11557&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11558&quot;,&quot;searchValueName&quot;:&quot;11558&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11560&quot;,&quot;searchValueName&quot;:&quot;11560&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11561&quot;,&quot;searchValueName&quot;:&quot;11561&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11562&quot;,&quot;searchValueName&quot;:&quot;11562&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11563&quot;,&quot;searchValueName&quot;:&quot;11563&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11564&quot;,&quot;searchValueName&quot;:&quot;11564&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11565&quot;,&quot;searchValueName&quot;:&quot;11565&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11566&quot;,&quot;searchValueName&quot;:&quot;11566&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11567&quot;,&quot;searchValueName&quot;:&quot;11567&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11568&quot;,&quot;searchValueName&quot;:&quot;11568&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11569&quot;,&quot;searchValueName&quot;:&quot;11569&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11570&quot;,&quot;searchValueName&quot;:&quot;11570&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11571&quot;,&quot;searchValueName&quot;:&quot;11571&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11572&quot;,&quot;searchValueName&quot;:&quot;11572&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11573&quot;,&quot;searchValueName&quot;:&quot;11573&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11574&quot;,&quot;searchValueName&quot;:&quot;11574&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11575&quot;,&quot;searchValueName&quot;:&quot;11575&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11576&quot;,&quot;searchValueName&quot;:&quot;11576&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11577&quot;,&quot;searchValueName&quot;:&quot;11577&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11578&quot;,&quot;searchValueName&quot;:&quot;11578&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11579&quot;,&quot;searchValueName&quot;:&quot;11579&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11580&quot;,&quot;searchValueName&quot;:&quot;11580&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11581&quot;,&quot;searchValueName&quot;:&quot;11581&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11582&quot;,&quot;searchValueName&quot;:&quot;11582&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11583&quot;,&quot;searchValueName&quot;:&quot;11583&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11584&quot;,&quot;searchValueName&quot;:&quot;11584&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11585&quot;,&quot;searchValueName&quot;:&quot;11585&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11586&quot;,&quot;searchValueName&quot;:&quot;11586&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11587&quot;,&quot;searchValueName&quot;:&quot;11587&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11588&quot;,&quot;searchValueName&quot;:&quot;11588&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11589&quot;,&quot;searchValueName&quot;:&quot;11589&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11615&quot;,&quot;searchValueName&quot;:&quot;11615&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11616&quot;,&quot;searchValueName&quot;:&quot;11616&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11617&quot;,&quot;searchValueName&quot;:&quot;11617&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11618&quot;,&quot;searchValueName&quot;:&quot;11618&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11619&quot;,&quot;searchValueName&quot;:&quot;11619&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11620&quot;,&quot;searchValueName&quot;:&quot;11620&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11621&quot;,&quot;searchValueName&quot;:&quot;11621&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11622&quot;,&quot;searchValueName&quot;:&quot;11622&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11623&quot;,&quot;searchValueName&quot;:&quot;11623&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11624&quot;,&quot;searchValueName&quot;:&quot;11624&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11625&quot;,&quot;searchValueName&quot;:&quot;11625&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11626&quot;,&quot;searchValueName&quot;:&quot;11626&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11627&quot;,&quot;searchValueName&quot;:&quot;11627&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11628&quot;,&quot;searchValueName&quot;:&quot;11628&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11629&quot;,&quot;searchValueName&quot;:&quot;11629&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11630&quot;,&quot;searchValueName&quot;:&quot;11630&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11631&quot;,&quot;searchValueName&quot;:&quot;11631&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11632&quot;,&quot;searchValueName&quot;:&quot;11632&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11633&quot;,&quot;searchValueName&quot;:&quot;11633&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11634&quot;,&quot;searchValueName&quot;:&quot;11634&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11635&quot;,&quot;searchValueName&quot;:&quot;11635&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11636&quot;,&quot;searchValueName&quot;:&quot;11636&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11637&quot;,&quot;searchValueName&quot;:&quot;11637&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11638&quot;,&quot;searchValueName&quot;:&quot;11638&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11639&quot;,&quot;searchValueName&quot;:&quot;11639&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11664&quot;,&quot;searchValueName&quot;:&quot;11664&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11665&quot;,&quot;searchValueName&quot;:&quot;11665&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11666&quot;,&quot;searchValueName&quot;:&quot;11666&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11667&quot;,&quot;searchValueName&quot;:&quot;11667&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11668&quot;,&quot;searchValueName&quot;:&quot;11668&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11669&quot;,&quot;searchValueName&quot;:&quot;11669&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11670&quot;,&quot;searchValueName&quot;:&quot;11670&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11671&quot;,&quot;searchValueName&quot;:&quot;11671&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11672&quot;,&quot;searchValueName&quot;:&quot;11672&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11673&quot;,&quot;searchValueName&quot;:&quot;11673&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11674&quot;,&quot;searchValueName&quot;:&quot;11674&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11675&quot;,&quot;searchValueName&quot;:&quot;11675&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11676&quot;,&quot;searchValueName&quot;:&quot;11676&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11677&quot;,&quot;searchValueName&quot;:&quot;11677&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11678&quot;,&quot;searchValueName&quot;:&quot;11678&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11679&quot;,&quot;searchValueName&quot;:&quot;11679&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11680&quot;,&quot;searchValueName&quot;:&quot;11680&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11681&quot;,&quot;searchValueName&quot;:&quot;11681&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11682&quot;,&quot;searchValueName&quot;:&quot;11682&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11683&quot;,&quot;searchValueName&quot;:&quot;11683&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11684&quot;,&quot;searchValueName&quot;:&quot;11684&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11685&quot;,&quot;searchValueName&quot;:&quot;11685&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11686&quot;,&quot;searchValueName&quot;:&quot;11686&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11687&quot;,&quot;searchValueName&quot;:&quot;11687&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11736&quot;,&quot;searchValueName&quot;:&quot;11736&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11737&quot;,&quot;searchValueName&quot;:&quot;11737&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11738&quot;,&quot;searchValueName&quot;:&quot;11738&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11739&quot;,&quot;searchValueName&quot;:&quot;11739&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11740&quot;,&quot;searchValueName&quot;:&quot;11740&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11741&quot;,&quot;searchValueName&quot;:&quot;11741&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11742&quot;,&quot;searchValueName&quot;:&quot;11742&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11743&quot;,&quot;searchValueName&quot;:&quot;11743&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11744&quot;,&quot;searchValueName&quot;:&quot;11744&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11745&quot;,&quot;searchValueName&quot;:&quot;11745&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11746&quot;,&quot;searchValueName&quot;:&quot;11746&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11747&quot;,&quot;searchValueName&quot;:&quot;11747&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11748&quot;,&quot;searchValueName&quot;:&quot;11748&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11749&quot;,&quot;searchValueName&quot;:&quot;11749&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11750&quot;,&quot;searchValueName&quot;:&quot;11750&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11751&quot;,&quot;searchValueName&quot;:&quot;11751&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11752&quot;,&quot;searchValueName&quot;:&quot;11752&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11753&quot;,&quot;searchValueName&quot;:&quot;11753&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11754&quot;,&quot;searchValueName&quot;:&quot;11754&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11755&quot;,&quot;searchValueName&quot;:&quot;11755&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11756&quot;,&quot;searchValueName&quot;:&quot;11756&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11757&quot;,&quot;searchValueName&quot;:&quot;11757&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11758&quot;,&quot;searchValueName&quot;:&quot;11758&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11784&quot;,&quot;searchValueName&quot;:&quot;11784&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11785&quot;,&quot;searchValueName&quot;:&quot;11785&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11786&quot;,&quot;searchValueName&quot;:&quot;11786&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11787&quot;,&quot;searchValueName&quot;:&quot;11787&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11788&quot;,&quot;searchValueName&quot;:&quot;11788&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11789&quot;,&quot;searchValueName&quot;:&quot;11789&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11790&quot;,&quot;searchValueName&quot;:&quot;11790&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11791&quot;,&quot;searchValueName&quot;:&quot;11791&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11792&quot;,&quot;searchValueName&quot;:&quot;11792&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11793&quot;,&quot;searchValueName&quot;:&quot;11793&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11794&quot;,&quot;searchValueName&quot;:&quot;11794&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11795&quot;,&quot;searchValueName&quot;:&quot;11795&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11796&quot;,&quot;searchValueName&quot;:&quot;11796&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11797&quot;,&quot;searchValueName&quot;:&quot;11797&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11798&quot;,&quot;searchValueName&quot;:&quot;11798&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11799&quot;,&quot;searchValueName&quot;:&quot;11799&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11800&quot;,&quot;searchValueName&quot;:&quot;11800&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11801&quot;,&quot;searchValueName&quot;:&quot;11801&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11802&quot;,&quot;searchValueName&quot;:&quot;11802&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11803&quot;,&quot;searchValueName&quot;:&quot;11803&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11804&quot;,&quot;searchValueName&quot;:&quot;11804&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11805&quot;,&quot;searchValueName&quot;:&quot;11805&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11806&quot;,&quot;searchValueName&quot;:&quot;11806&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11807&quot;,&quot;searchValueName&quot;:&quot;11807&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11830&quot;,&quot;searchValueName&quot;:&quot;11830&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11831&quot;,&quot;searchValueName&quot;:&quot;11831&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11832&quot;,&quot;searchValueName&quot;:&quot;11832&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11833&quot;,&quot;searchValueName&quot;:&quot;11833&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11834&quot;,&quot;searchValueName&quot;:&quot;11834&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11835&quot;,&quot;searchValueName&quot;:&quot;11835&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11836&quot;,&quot;searchValueName&quot;:&quot;11836&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11837&quot;,&quot;searchValueName&quot;:&quot;11837&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11838&quot;,&quot;searchValueName&quot;:&quot;11838&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11839&quot;,&quot;searchValueName&quot;:&quot;11839&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11840&quot;,&quot;searchValueName&quot;:&quot;11840&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11841&quot;,&quot;searchValueName&quot;:&quot;11841&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11842&quot;,&quot;searchValueName&quot;:&quot;11842&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11843&quot;,&quot;searchValueName&quot;:&quot;11843&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11844&quot;,&quot;searchValueName&quot;:&quot;11844&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11845&quot;,&quot;searchValueName&quot;:&quot;11845&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11846&quot;,&quot;searchValueName&quot;:&quot;11846&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11847&quot;,&quot;searchValueName&quot;:&quot;11847&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11848&quot;,&quot;searchValueName&quot;:&quot;11848&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11849&quot;,&quot;searchValueName&quot;:&quot;11849&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11877&quot;,&quot;searchValueName&quot;:&quot;11877&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11878&quot;,&quot;searchValueName&quot;:&quot;11878&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11879&quot;,&quot;searchValueName&quot;:&quot;11879&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11880&quot;,&quot;searchValueName&quot;:&quot;11880&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11881&quot;,&quot;searchValueName&quot;:&quot;11881&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11882&quot;,&quot;searchValueName&quot;:&quot;11882&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11883&quot;,&quot;searchValueName&quot;:&quot;11883&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11884&quot;,&quot;searchValueName&quot;:&quot;11884&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11885&quot;,&quot;searchValueName&quot;:&quot;11885&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11886&quot;,&quot;searchValueName&quot;:&quot;11886&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11887&quot;,&quot;searchValueName&quot;:&quot;11887&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11888&quot;,&quot;searchValueName&quot;:&quot;11888&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11889&quot;,&quot;searchValueName&quot;:&quot;11889&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11890&quot;,&quot;searchValueName&quot;:&quot;11890&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11891&quot;,&quot;searchValueName&quot;:&quot;11891&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11892&quot;,&quot;searchValueName&quot;:&quot;11892&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11893&quot;,&quot;searchValueName&quot;:&quot;11893&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11894&quot;,&quot;searchValueName&quot;:&quot;11894&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11895&quot;,&quot;searchValueName&quot;:&quot;11895&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11896&quot;,&quot;searchValueName&quot;:&quot;11896&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11897&quot;,&quot;searchValueName&quot;:&quot;11897&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11898&quot;,&quot;searchValueName&quot;:&quot;11898&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11925&quot;,&quot;searchValueName&quot;:&quot;11925&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11926&quot;,&quot;searchValueName&quot;:&quot;11926&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11927&quot;,&quot;searchValueName&quot;:&quot;11927&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11928&quot;,&quot;searchValueName&quot;:&quot;11928&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11929&quot;,&quot;searchValueName&quot;:&quot;11929&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11930&quot;,&quot;searchValueName&quot;:&quot;11930&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11931&quot;,&quot;searchValueName&quot;:&quot;11931&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11932&quot;,&quot;searchValueName&quot;:&quot;11932&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11933&quot;,&quot;searchValueName&quot;:&quot;11933&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11934&quot;,&quot;searchValueName&quot;:&quot;11934&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11935&quot;,&quot;searchValueName&quot;:&quot;11935&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11936&quot;,&quot;searchValueName&quot;:&quot;11936&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11937&quot;,&quot;searchValueName&quot;:&quot;11937&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11938&quot;,&quot;searchValueName&quot;:&quot;11938&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11939&quot;,&quot;searchValueName&quot;:&quot;11939&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11940&quot;,&quot;searchValueName&quot;:&quot;11940&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11941&quot;,&quot;searchValueName&quot;:&quot;11941&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11942&quot;,&quot;searchValueName&quot;:&quot;11942&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11943&quot;,&quot;searchValueName&quot;:&quot;11943&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11944&quot;,&quot;searchValueName&quot;:&quot;11944&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11945&quot;,&quot;searchValueName&quot;:&quot;11945&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11946&quot;,&quot;searchValueName&quot;:&quot;11946&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11947&quot;,&quot;searchValueName&quot;:&quot;11947&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11948&quot;,&quot;searchValueName&quot;:&quot;11948&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11949&quot;,&quot;searchValueName&quot;:&quot;11949&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11950&quot;,&quot;searchValueName&quot;:&quot;11950&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11973&quot;,&quot;searchValueName&quot;:&quot;11973&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11974&quot;,&quot;searchValueName&quot;:&quot;11974&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11975&quot;,&quot;searchValueName&quot;:&quot;11975&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11976&quot;,&quot;searchValueName&quot;:&quot;11976&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11977&quot;,&quot;searchValueName&quot;:&quot;11977&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11978&quot;,&quot;searchValueName&quot;:&quot;11978&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11979&quot;,&quot;searchValueName&quot;:&quot;11979&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11980&quot;,&quot;searchValueName&quot;:&quot;11980&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11981&quot;,&quot;searchValueName&quot;:&quot;11981&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11982&quot;,&quot;searchValueName&quot;:&quot;11982&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11983&quot;,&quot;searchValueName&quot;:&quot;11983&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Person ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;11984&quot;,&quot;searchValueName&quot;:&quot;11984&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;}]}],&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/PersonAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-11-05T13:09:30.131</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">sites.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-11-05T13:09:30.131</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T016z_Person_FirstName&amp;LastName_10" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;resultOptions&quot;:{&quot;showColumns&quot;:[&quot;licenses&quot;,&quot;id&quot;,&quot;personType&quot;,&quot;firstName&quot;,&quot;lastName&quot;,&quot;middleName&quot;,&quot;productionStatus&quot;,&quot;specialties&quot;,&quot;siteName&quot;,&quot;emailAddress&quot;,&quot;country&quot;]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;firstname&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;firstname&quot;,&quot;categoryName&quot;:&quot;First Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Star&quot;,&quot;searchValueName&quot;:&quot;Star&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;firstname&quot;},{&quot;columnName&quot;:&quot;firstname&quot;,&quot;categoryName&quot;:&quot;First Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;William&quot;,&quot;searchValueName&quot;:&quot;William&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;firstname&quot;},{&quot;columnName&quot;:&quot;firstname&quot;,&quot;categoryName&quot;:&quot;First Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Schmoo&quot;,&quot;searchValueName&quot;:&quot;Schmoo&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;firstname&quot;},{&quot;columnName&quot;:&quot;firstname&quot;,&quot;categoryName&quot;:&quot;First Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Brian&quot;,&quot;searchValueName&quot;:&quot;Brian&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;firstname&quot;},{&quot;columnName&quot;:&quot;firstname&quot;,&quot;categoryName&quot;:&quot;First Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Anthony&quot;,&quot;searchValueName&quot;:&quot;Anthony&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;firstname&quot;},{&quot;columnName&quot;:&quot;firstname&quot;,&quot;categoryName&quot;:&quot;First Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Bharat&quot;,&quot;searchValueName&quot;:&quot;Bharat&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;firstname&quot;},{&quot;columnName&quot;:&quot;firstname&quot;,&quot;categoryName&quot;:&quot;First Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Sandeep&quot;,&quot;searchValueName&quot;:&quot;Sandeep&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;firstname&quot;},{&quot;columnName&quot;:&quot;firstname&quot;,&quot;categoryName&quot;:&quot;First Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Masakatsu&quot;,&quot;searchValueName&quot;:&quot;Masakatsu&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;firstname&quot;},{&quot;columnName&quot;:&quot;firstname&quot;,&quot;categoryName&quot;:&quot;First Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Danielle&quot;,&quot;searchValueName&quot;:&quot;Danielle&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;firstname&quot;},{&quot;columnName&quot;:&quot;firstname&quot;,&quot;categoryName&quot;:&quot;First Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Thaw Dar&quot;,&quot;searchValueName&quot;:&quot;Thaw Dar&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;firstname&quot;}]},{&quot;groupName&quot;:&quot;lastname&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;lastname&quot;,&quot;categoryName&quot;:&quot;Last Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Student&quot;,&quot;searchValueName&quot;:&quot;Student&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;lastname&quot;},{&quot;columnName&quot;:&quot;lastname&quot;,&quot;categoryName&quot;:&quot;Last Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Klein&quot;,&quot;searchValueName&quot;:&quot;Klein&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;lastname&quot;},{&quot;columnName&quot;:&quot;lastname&quot;,&quot;categoryName&quot;:&quot;Last Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;McPoo&quot;,&quot;searchValueName&quot;:&quot;McPoo&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;lastname&quot;},{&quot;columnName&quot;:&quot;lastname&quot;,&quot;categoryName&quot;:&quot;Last Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Budoff&quot;,&quot;searchValueName&quot;:&quot;Budoff&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;lastname&quot;},{&quot;columnName&quot;:&quot;lastname&quot;,&quot;categoryName&quot;:&quot;Last Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Ragava&quot;,&quot;searchValueName&quot;:&quot;Ragava&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;lastname&quot;},{&quot;columnName&quot;:&quot;lastname&quot;,&quot;categoryName&quot;:&quot;Last Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Jain&quot;,&quot;searchValueName&quot;:&quot;Jain&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;lastname&quot;},{&quot;columnName&quot;:&quot;lastname&quot;,&quot;categoryName&quot;:&quot;Last Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Katiyar&quot;,&quot;searchValueName&quot;:&quot;Katiyar&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;lastname&quot;},{&quot;columnName&quot;:&quot;lastname&quot;,&quot;categoryName&quot;:&quot;Last Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Sone&quot;,&quot;searchValueName&quot;:&quot;Sone&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;lastname&quot;},{&quot;columnName&quot;:&quot;lastname&quot;,&quot;categoryName&quot;:&quot;Last Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Gregorio&quot;,&quot;searchValueName&quot;:&quot;Gregorio&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;lastname&quot;},{&quot;columnName&quot;:&quot;lastname&quot;,&quot;categoryName&quot;:&quot;Last Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Htet&quot;,&quot;searchValueName&quot;:&quot;Htet&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;lastname&quot;}]}],&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/PersonAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T10:18:22.849</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">sites.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T10:18:22.849</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T017z_Person_Email&amp;Notes" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;resultOptions&quot;:{&quot;showColumns&quot;:[&quot;licenses&quot;,&quot;id&quot;,&quot;personType&quot;,&quot;firstName&quot;,&quot;lastName&quot;,&quot;middleName&quot;,&quot;productionStatus&quot;,&quot;specialties&quot;,&quot;siteName&quot;,&quot;emailAddress&quot;,&quot;country&quot;]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;email&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;email&quot;,&quot;categoryName&quot;:&quot;E-mail Address&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;(&quot;,&quot;searchValueName&quot;:&quot;(&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;email&quot;},{&quot;columnName&quot;:&quot;email&quot;,&quot;categoryName&quot;:&quot;E-mail Address&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;fax&quot;,&quot;searchValueName&quot;:&quot;fax&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;email&quot;},{&quot;columnName&quot;:&quot;email&quot;,&quot;categoryName&quot;:&quot;E-mail Address&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;phone&quot;,&quot;searchValueName&quot;:&quot;phone&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;email&quot;},{&quot;columnName&quot;:&quot;email&quot;,&quot;categoryName&quot;:&quot;E-mail Address&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;%&quot;,&quot;searchValueName&quot;:&quot;%&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;email&quot;},{&quot;columnName&quot;:&quot;email&quot;,&quot;categoryName&quot;:&quot;E-mail Address&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;+&quot;,&quot;searchValueName&quot;:&quot;+&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;email&quot;},{&quot;columnName&quot;:&quot;email&quot;,&quot;categoryName&quot;:&quot;E-mail Address&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;n/a&quot;,&quot;searchValueName&quot;:&quot;n/a&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;email&quot;},{&quot;columnName&quot;:&quot;email&quot;,&quot;categoryName&quot;:&quot;E-mail Address&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;http&quot;,&quot;searchValueName&quot;:&quot;http&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;email&quot;}]},{&quot;groupName&quot;:&quot;note&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;note&quot;,&quot;categoryName&quot;:&quot;Notes&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Test&quot;,&quot;searchValueName&quot;:&quot;Test&quot;,&quot;condition&quot;:0,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;note&quot;}]}],&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/PersonAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-11-07T20:42:17.345</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">sites.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-11-07T20:42:17.345</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T018z_Person_MultipleCategories" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;resultOptions&quot;:{&quot;showColumns&quot;:[&quot;licenses&quot;,&quot;id&quot;,&quot;personType&quot;,&quot;firstName&quot;,&quot;lastName&quot;,&quot;middleName&quot;,&quot;productionStatus&quot;,&quot;specialties&quot;,&quot;siteName&quot;,&quot;emailAddress&quot;,&quot;country&quot;]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;prodstatusid&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;prodstatusid&quot;,&quot;categoryName&quot;:&quot;Production Status&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:1,&quot;searchValueName&quot;:&quot;In Production&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;prodstatusid&quot;}]},{&quot;groupName&quot;:&quot;degreeid&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;degreeid&quot;,&quot;categoryName&quot;:&quot;Degree(s)&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:8,&quot;searchValueName&quot;:&quot;MB BS&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;degreeid&quot;},{&quot;columnName&quot;:&quot;degreeid&quot;,&quot;categoryName&quot;:&quot;Degree(s)&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:17,&quot;searchValueName&quot;:&quot;PHARM&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;degreeid&quot;}]},{&quot;groupName&quot;:&quot;persontypeid&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;persontypeid&quot;,&quot;categoryName&quot;:&quot;Person Type&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:3,&quot;searchValueName&quot;:&quot;Clinical Investigator&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;persontypeid&quot;}]},{&quot;groupName&quot;:&quot;specialityid&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;specialityid&quot;,&quot;categoryName&quot;:&quot;Specialties&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:6,&quot;searchValueName&quot;:&quot;Oncology&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;specialityid&quot;}]},{&quot;groupName&quot;:&quot;countryid&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;countryid&quot;,&quot;categoryName&quot;:&quot;Country&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:98,&quot;searchValueName&quot;:&quot;India&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;countryid&quot;}]},{&quot;groupName&quot;:&quot;firstname&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;firstname&quot;,&quot;categoryName&quot;:&quot;First Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;QA&quot;,&quot;searchValueName&quot;:&quot;QA&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;firstname&quot;}]}],&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/PersonAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T09:40:19.146</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">sites.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T09:40:19.146</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T019z_Org_Site_Ids_500Plus" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;resultOptions&quot;:{&quot;showColumns&quot;:[&quot;id&quot;,&quot;organizationName&quot;,&quot;organizationType&quot;,&quot;productionStatusId&quot;,&quot;street1&quot;,&quot;city&quot;,&quot;state&quot;,&quot;postalCode&quot;,&quot;country&quot;]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;id&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284433&quot;,&quot;searchValueName&quot;:&quot;284433&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284431&quot;,&quot;searchValueName&quot;:&quot;284431&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284430&quot;,&quot;searchValueName&quot;:&quot;284430&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284429&quot;,&quot;searchValueName&quot;:&quot;284429&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284428&quot;,&quot;searchValueName&quot;:&quot;284428&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284427&quot;,&quot;searchValueName&quot;:&quot;284427&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284426&quot;,&quot;searchValueName&quot;:&quot;284426&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284425&quot;,&quot;searchValueName&quot;:&quot;284425&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284424&quot;,&quot;searchValueName&quot;:&quot;284424&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284423&quot;,&quot;searchValueName&quot;:&quot;284423&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284422&quot;,&quot;searchValueName&quot;:&quot;284422&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284421&quot;,&quot;searchValueName&quot;:&quot;284421&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284420&quot;,&quot;searchValueName&quot;:&quot;284420&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284418&quot;,&quot;searchValueName&quot;:&quot;284418&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284417&quot;,&quot;searchValueName&quot;:&quot;284417&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284416&quot;,&quot;searchValueName&quot;:&quot;284416&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284415&quot;,&quot;searchValueName&quot;:&quot;284415&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284414&quot;,&quot;searchValueName&quot;:&quot;284414&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284413&quot;,&quot;searchValueName&quot;:&quot;284413&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284412&quot;,&quot;searchValueName&quot;:&quot;284412&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284411&quot;,&quot;searchValueName&quot;:&quot;284411&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284410&quot;,&quot;searchValueName&quot;:&quot;284410&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284409&quot;,&quot;searchValueName&quot;:&quot;284409&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284408&quot;,&quot;searchValueName&quot;:&quot;284408&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284407&quot;,&quot;searchValueName&quot;:&quot;284407&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284406&quot;,&quot;searchValueName&quot;:&quot;284406&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284405&quot;,&quot;searchValueName&quot;:&quot;284405&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284404&quot;,&quot;searchValueName&quot;:&quot;284404&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284403&quot;,&quot;searchValueName&quot;:&quot;284403&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284402&quot;,&quot;searchValueName&quot;:&quot;284402&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284401&quot;,&quot;searchValueName&quot;:&quot;284401&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284400&quot;,&quot;searchValueName&quot;:&quot;284400&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284399&quot;,&quot;searchValueName&quot;:&quot;284399&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284398&quot;,&quot;searchValueName&quot;:&quot;284398&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284396&quot;,&quot;searchValueName&quot;:&quot;284396&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284395&quot;,&quot;searchValueName&quot;:&quot;284395&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284394&quot;,&quot;searchValueName&quot;:&quot;284394&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284393&quot;,&quot;searchValueName&quot;:&quot;284393&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284392&quot;,&quot;searchValueName&quot;:&quot;284392&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284391&quot;,&quot;searchValueName&quot;:&quot;284391&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284390&quot;,&quot;searchValueName&quot;:&quot;284390&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284383&quot;,&quot;searchValueName&quot;:&quot;284383&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284382&quot;,&quot;searchValueName&quot;:&quot;284382&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284381&quot;,&quot;searchValueName&quot;:&quot;284381&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284380&quot;,&quot;searchValueName&quot;:&quot;284380&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284379&quot;,&quot;searchValueName&quot;:&quot;284379&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284378&quot;,&quot;searchValueName&quot;:&quot;284378&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284377&quot;,&quot;searchValueName&quot;:&quot;284377&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284376&quot;,&quot;searchValueName&quot;:&quot;284376&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284375&quot;,&quot;searchValueName&quot;:&quot;284375&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284374&quot;,&quot;searchValueName&quot;:&quot;284374&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284373&quot;,&quot;searchValueName&quot;:&quot;284373&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284372&quot;,&quot;searchValueName&quot;:&quot;284372&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284371&quot;,&quot;searchValueName&quot;:&quot;284371&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284370&quot;,&quot;searchValueName&quot;:&quot;284370&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284369&quot;,&quot;searchValueName&quot;:&quot;284369&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284368&quot;,&quot;searchValueName&quot;:&quot;284368&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284367&quot;,&quot;searchValueName&quot;:&quot;284367&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284366&quot;,&quot;searchValueName&quot;:&quot;284366&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284365&quot;,&quot;searchValueName&quot;:&quot;284365&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284364&quot;,&quot;searchValueName&quot;:&quot;284364&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284363&quot;,&quot;searchValueName&quot;:&quot;284363&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284362&quot;,&quot;searchValueName&quot;:&quot;284362&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284361&quot;,&quot;searchValueName&quot;:&quot;284361&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284360&quot;,&quot;searchValueName&quot;:&quot;284360&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284359&quot;,&quot;searchValueName&quot;:&quot;284359&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284358&quot;,&quot;searchValueName&quot;:&quot;284358&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284357&quot;,&quot;searchValueName&quot;:&quot;284357&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284356&quot;,&quot;searchValueName&quot;:&quot;284356&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284355&quot;,&quot;searchValueName&quot;:&quot;284355&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284354&quot;,&quot;searchValueName&quot;:&quot;284354&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284353&quot;,&quot;searchValueName&quot;:&quot;284353&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284352&quot;,&quot;searchValueName&quot;:&quot;284352&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284351&quot;,&quot;searchValueName&quot;:&quot;284351&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284350&quot;,&quot;searchValueName&quot;:&quot;284350&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284349&quot;,&quot;searchValueName&quot;:&quot;284349&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284348&quot;,&quot;searchValueName&quot;:&quot;284348&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284347&quot;,&quot;searchValueName&quot;:&quot;284347&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284346&quot;,&quot;searchValueName&quot;:&quot;284346&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284345&quot;,&quot;searchValueName&quot;:&quot;284345&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284344&quot;,&quot;searchValueName&quot;:&quot;284344&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284343&quot;,&quot;searchValueName&quot;:&quot;284343&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284342&quot;,&quot;searchValueName&quot;:&quot;284342&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284341&quot;,&quot;searchValueName&quot;:&quot;284341&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284340&quot;,&quot;searchValueName&quot;:&quot;284340&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284339&quot;,&quot;searchValueName&quot;:&quot;284339&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284338&quot;,&quot;searchValueName&quot;:&quot;284338&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284337&quot;,&quot;searchValueName&quot;:&quot;284337&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284336&quot;,&quot;searchValueName&quot;:&quot;284336&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284335&quot;,&quot;searchValueName&quot;:&quot;284335&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284334&quot;,&quot;searchValueName&quot;:&quot;284334&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284333&quot;,&quot;searchValueName&quot;:&quot;284333&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284332&quot;,&quot;searchValueName&quot;:&quot;284332&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284331&quot;,&quot;searchValueName&quot;:&quot;284331&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284330&quot;,&quot;searchValueName&quot;:&quot;284330&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284329&quot;,&quot;searchValueName&quot;:&quot;284329&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284328&quot;,&quot;searchValueName&quot;:&quot;284328&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284327&quot;,&quot;searchValueName&quot;:&quot;284327&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284326&quot;,&quot;searchValueName&quot;:&quot;284326&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284325&quot;,&quot;searchValueName&quot;:&quot;284325&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284324&quot;,&quot;searchValueName&quot;:&quot;284324&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284323&quot;,&quot;searchValueName&quot;:&quot;284323&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284322&quot;,&quot;searchValueName&quot;:&quot;284322&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284321&quot;,&quot;searchValueName&quot;:&quot;284321&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284320&quot;,&quot;searchValueName&quot;:&quot;284320&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284319&quot;,&quot;searchValueName&quot;:&quot;284319&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284318&quot;,&quot;searchValueName&quot;:&quot;284318&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284317&quot;,&quot;searchValueName&quot;:&quot;284317&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284316&quot;,&quot;searchValueName&quot;:&quot;284316&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284315&quot;,&quot;searchValueName&quot;:&quot;284315&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284314&quot;,&quot;searchValueName&quot;:&quot;284314&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284313&quot;,&quot;searchValueName&quot;:&quot;284313&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284312&quot;,&quot;searchValueName&quot;:&quot;284312&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284311&quot;,&quot;searchValueName&quot;:&quot;284311&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284310&quot;,&quot;searchValueName&quot;:&quot;284310&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284309&quot;,&quot;searchValueName&quot;:&quot;284309&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284307&quot;,&quot;searchValueName&quot;:&quot;284307&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284306&quot;,&quot;searchValueName&quot;:&quot;284306&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284305&quot;,&quot;searchValueName&quot;:&quot;284305&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284304&quot;,&quot;searchValueName&quot;:&quot;284304&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284303&quot;,&quot;searchValueName&quot;:&quot;284303&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284302&quot;,&quot;searchValueName&quot;:&quot;284302&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284301&quot;,&quot;searchValueName&quot;:&quot;284301&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284300&quot;,&quot;searchValueName&quot;:&quot;284300&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284299&quot;,&quot;searchValueName&quot;:&quot;284299&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284298&quot;,&quot;searchValueName&quot;:&quot;284298&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284297&quot;,&quot;searchValueName&quot;:&quot;284297&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284296&quot;,&quot;searchValueName&quot;:&quot;284296&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284295&quot;,&quot;searchValueName&quot;:&quot;284295&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284294&quot;,&quot;searchValueName&quot;:&quot;284294&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284293&quot;,&quot;searchValueName&quot;:&quot;284293&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284292&quot;,&quot;searchValueName&quot;:&quot;284292&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284291&quot;,&quot;searchValueName&quot;:&quot;284291&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284290&quot;,&quot;searchValueName&quot;:&quot;284290&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284289&quot;,&quot;searchValueName&quot;:&quot;284289&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284288&quot;,&quot;searchValueName&quot;:&quot;284288&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284287&quot;,&quot;searchValueName&quot;:&quot;284287&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284286&quot;,&quot;searchValueName&quot;:&quot;284286&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284285&quot;,&quot;searchValueName&quot;:&quot;284285&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284284&quot;,&quot;searchValueName&quot;:&quot;284284&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284283&quot;,&quot;searchValueName&quot;:&quot;284283&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284282&quot;,&quot;searchValueName&quot;:&quot;284282&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284281&quot;,&quot;searchValueName&quot;:&quot;284281&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284280&quot;,&quot;searchValueName&quot;:&quot;284280&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284279&quot;,&quot;searchValueName&quot;:&quot;284279&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284278&quot;,&quot;searchValueName&quot;:&quot;284278&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284277&quot;,&quot;searchValueName&quot;:&quot;284277&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284276&quot;,&quot;searchValueName&quot;:&quot;284276&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284275&quot;,&quot;searchValueName&quot;:&quot;284275&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284274&quot;,&quot;searchValueName&quot;:&quot;284274&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284273&quot;,&quot;searchValueName&quot;:&quot;284273&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284272&quot;,&quot;searchValueName&quot;:&quot;284272&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284271&quot;,&quot;searchValueName&quot;:&quot;284271&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284270&quot;,&quot;searchValueName&quot;:&quot;284270&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284269&quot;,&quot;searchValueName&quot;:&quot;284269&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284268&quot;,&quot;searchValueName&quot;:&quot;284268&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284267&quot;,&quot;searchValueName&quot;:&quot;284267&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284266&quot;,&quot;searchValueName&quot;:&quot;284266&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284265&quot;,&quot;searchValueName&quot;:&quot;284265&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284264&quot;,&quot;searchValueName&quot;:&quot;284264&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284263&quot;,&quot;searchValueName&quot;:&quot;284263&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284262&quot;,&quot;searchValueName&quot;:&quot;284262&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284261&quot;,&quot;searchValueName&quot;:&quot;284261&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284260&quot;,&quot;searchValueName&quot;:&quot;284260&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284259&quot;,&quot;searchValueName&quot;:&quot;284259&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284258&quot;,&quot;searchValueName&quot;:&quot;284258&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284257&quot;,&quot;searchValueName&quot;:&quot;284257&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284256&quot;,&quot;searchValueName&quot;:&quot;284256&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284255&quot;,&quot;searchValueName&quot;:&quot;284255&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284254&quot;,&quot;searchValueName&quot;:&quot;284254&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284253&quot;,&quot;searchValueName&quot;:&quot;284253&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284252&quot;,&quot;searchValueName&quot;:&quot;284252&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284251&quot;,&quot;searchValueName&quot;:&quot;284251&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284250&quot;,&quot;searchValueName&quot;:&quot;284250&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284249&quot;,&quot;searchValueName&quot;:&quot;284249&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284248&quot;,&quot;searchValueName&quot;:&quot;284248&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284247&quot;,&quot;searchValueName&quot;:&quot;284247&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284246&quot;,&quot;searchValueName&quot;:&quot;284246&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284245&quot;,&quot;searchValueName&quot;:&quot;284245&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284244&quot;,&quot;searchValueName&quot;:&quot;284244&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284243&quot;,&quot;searchValueName&quot;:&quot;284243&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284242&quot;,&quot;searchValueName&quot;:&quot;284242&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284241&quot;,&quot;searchValueName&quot;:&quot;284241&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284240&quot;,&quot;searchValueName&quot;:&quot;284240&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284239&quot;,&quot;searchValueName&quot;:&quot;284239&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284238&quot;,&quot;searchValueName&quot;:&quot;284238&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284237&quot;,&quot;searchValueName&quot;:&quot;284237&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284236&quot;,&quot;searchValueName&quot;:&quot;284236&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284235&quot;,&quot;searchValueName&quot;:&quot;284235&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284234&quot;,&quot;searchValueName&quot;:&quot;284234&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284233&quot;,&quot;searchValueName&quot;:&quot;284233&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284232&quot;,&quot;searchValueName&quot;:&quot;284232&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284231&quot;,&quot;searchValueName&quot;:&quot;284231&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284230&quot;,&quot;searchValueName&quot;:&quot;284230&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284229&quot;,&quot;searchValueName&quot;:&quot;284229&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284228&quot;,&quot;searchValueName&quot;:&quot;284228&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284227&quot;,&quot;searchValueName&quot;:&quot;284227&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284226&quot;,&quot;searchValueName&quot;:&quot;284226&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284225&quot;,&quot;searchValueName&quot;:&quot;284225&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284224&quot;,&quot;searchValueName&quot;:&quot;284224&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284223&quot;,&quot;searchValueName&quot;:&quot;284223&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284222&quot;,&quot;searchValueName&quot;:&quot;284222&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284221&quot;,&quot;searchValueName&quot;:&quot;284221&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284220&quot;,&quot;searchValueName&quot;:&quot;284220&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284219&quot;,&quot;searchValueName&quot;:&quot;284219&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284218&quot;,&quot;searchValueName&quot;:&quot;284218&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284217&quot;,&quot;searchValueName&quot;:&quot;284217&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284216&quot;,&quot;searchValueName&quot;:&quot;284216&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284215&quot;,&quot;searchValueName&quot;:&quot;284215&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284214&quot;,&quot;searchValueName&quot;:&quot;284214&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284213&quot;,&quot;searchValueName&quot;:&quot;284213&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284212&quot;,&quot;searchValueName&quot;:&quot;284212&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284211&quot;,&quot;searchValueName&quot;:&quot;284211&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284210&quot;,&quot;searchValueName&quot;:&quot;284210&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284209&quot;,&quot;searchValueName&quot;:&quot;284209&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284208&quot;,&quot;searchValueName&quot;:&quot;284208&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284207&quot;,&quot;searchValueName&quot;:&quot;284207&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284206&quot;,&quot;searchValueName&quot;:&quot;284206&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284205&quot;,&quot;searchValueName&quot;:&quot;284205&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284204&quot;,&quot;searchValueName&quot;:&quot;284204&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284203&quot;,&quot;searchValueName&quot;:&quot;284203&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284202&quot;,&quot;searchValueName&quot;:&quot;284202&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284201&quot;,&quot;searchValueName&quot;:&quot;284201&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284200&quot;,&quot;searchValueName&quot;:&quot;284200&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284199&quot;,&quot;searchValueName&quot;:&quot;284199&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284198&quot;,&quot;searchValueName&quot;:&quot;284198&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284197&quot;,&quot;searchValueName&quot;:&quot;284197&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284196&quot;,&quot;searchValueName&quot;:&quot;284196&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284195&quot;,&quot;searchValueName&quot;:&quot;284195&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284194&quot;,&quot;searchValueName&quot;:&quot;284194&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284193&quot;,&quot;searchValueName&quot;:&quot;284193&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284192&quot;,&quot;searchValueName&quot;:&quot;284192&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284191&quot;,&quot;searchValueName&quot;:&quot;284191&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284190&quot;,&quot;searchValueName&quot;:&quot;284190&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284189&quot;,&quot;searchValueName&quot;:&quot;284189&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284188&quot;,&quot;searchValueName&quot;:&quot;284188&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284187&quot;,&quot;searchValueName&quot;:&quot;284187&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284186&quot;,&quot;searchValueName&quot;:&quot;284186&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284185&quot;,&quot;searchValueName&quot;:&quot;284185&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284184&quot;,&quot;searchValueName&quot;:&quot;284184&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284183&quot;,&quot;searchValueName&quot;:&quot;284183&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284182&quot;,&quot;searchValueName&quot;:&quot;284182&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284181&quot;,&quot;searchValueName&quot;:&quot;284181&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284180&quot;,&quot;searchValueName&quot;:&quot;284180&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284179&quot;,&quot;searchValueName&quot;:&quot;284179&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284178&quot;,&quot;searchValueName&quot;:&quot;284178&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284177&quot;,&quot;searchValueName&quot;:&quot;284177&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284175&quot;,&quot;searchValueName&quot;:&quot;284175&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284174&quot;,&quot;searchValueName&quot;:&quot;284174&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284173&quot;,&quot;searchValueName&quot;:&quot;284173&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284172&quot;,&quot;searchValueName&quot;:&quot;284172&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284171&quot;,&quot;searchValueName&quot;:&quot;284171&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284170&quot;,&quot;searchValueName&quot;:&quot;284170&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284169&quot;,&quot;searchValueName&quot;:&quot;284169&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284168&quot;,&quot;searchValueName&quot;:&quot;284168&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284167&quot;,&quot;searchValueName&quot;:&quot;284167&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284166&quot;,&quot;searchValueName&quot;:&quot;284166&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284165&quot;,&quot;searchValueName&quot;:&quot;284165&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284164&quot;,&quot;searchValueName&quot;:&quot;284164&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284163&quot;,&quot;searchValueName&quot;:&quot;284163&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284162&quot;,&quot;searchValueName&quot;:&quot;284162&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284161&quot;,&quot;searchValueName&quot;:&quot;284161&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284160&quot;,&quot;searchValueName&quot;:&quot;284160&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284159&quot;,&quot;searchValueName&quot;:&quot;284159&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284158&quot;,&quot;searchValueName&quot;:&quot;284158&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284157&quot;,&quot;searchValueName&quot;:&quot;284157&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284156&quot;,&quot;searchValueName&quot;:&quot;284156&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284155&quot;,&quot;searchValueName&quot;:&quot;284155&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284154&quot;,&quot;searchValueName&quot;:&quot;284154&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284153&quot;,&quot;searchValueName&quot;:&quot;284153&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284152&quot;,&quot;searchValueName&quot;:&quot;284152&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284151&quot;,&quot;searchValueName&quot;:&quot;284151&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284150&quot;,&quot;searchValueName&quot;:&quot;284150&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284149&quot;,&quot;searchValueName&quot;:&quot;284149&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284148&quot;,&quot;searchValueName&quot;:&quot;284148&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284147&quot;,&quot;searchValueName&quot;:&quot;284147&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284146&quot;,&quot;searchValueName&quot;:&quot;284146&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284145&quot;,&quot;searchValueName&quot;:&quot;284145&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284144&quot;,&quot;searchValueName&quot;:&quot;284144&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284143&quot;,&quot;searchValueName&quot;:&quot;284143&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284142&quot;,&quot;searchValueName&quot;:&quot;284142&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284141&quot;,&quot;searchValueName&quot;:&quot;284141&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284140&quot;,&quot;searchValueName&quot;:&quot;284140&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284139&quot;,&quot;searchValueName&quot;:&quot;284139&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284138&quot;,&quot;searchValueName&quot;:&quot;284138&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284137&quot;,&quot;searchValueName&quot;:&quot;284137&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284136&quot;,&quot;searchValueName&quot;:&quot;284136&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284135&quot;,&quot;searchValueName&quot;:&quot;284135&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284134&quot;,&quot;searchValueName&quot;:&quot;284134&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284133&quot;,&quot;searchValueName&quot;:&quot;284133&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284132&quot;,&quot;searchValueName&quot;:&quot;284132&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284131&quot;,&quot;searchValueName&quot;:&quot;284131&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284130&quot;,&quot;searchValueName&quot;:&quot;284130&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284129&quot;,&quot;searchValueName&quot;:&quot;284129&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284128&quot;,&quot;searchValueName&quot;:&quot;284128&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284127&quot;,&quot;searchValueName&quot;:&quot;284127&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284126&quot;,&quot;searchValueName&quot;:&quot;284126&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284125&quot;,&quot;searchValueName&quot;:&quot;284125&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284124&quot;,&quot;searchValueName&quot;:&quot;284124&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284123&quot;,&quot;searchValueName&quot;:&quot;284123&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284122&quot;,&quot;searchValueName&quot;:&quot;284122&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284121&quot;,&quot;searchValueName&quot;:&quot;284121&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284120&quot;,&quot;searchValueName&quot;:&quot;284120&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284119&quot;,&quot;searchValueName&quot;:&quot;284119&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284118&quot;,&quot;searchValueName&quot;:&quot;284118&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284117&quot;,&quot;searchValueName&quot;:&quot;284117&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284116&quot;,&quot;searchValueName&quot;:&quot;284116&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284115&quot;,&quot;searchValueName&quot;:&quot;284115&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284114&quot;,&quot;searchValueName&quot;:&quot;284114&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284113&quot;,&quot;searchValueName&quot;:&quot;284113&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284112&quot;,&quot;searchValueName&quot;:&quot;284112&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284111&quot;,&quot;searchValueName&quot;:&quot;284111&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284110&quot;,&quot;searchValueName&quot;:&quot;284110&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284109&quot;,&quot;searchValueName&quot;:&quot;284109&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284108&quot;,&quot;searchValueName&quot;:&quot;284108&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284107&quot;,&quot;searchValueName&quot;:&quot;284107&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284106&quot;,&quot;searchValueName&quot;:&quot;284106&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284105&quot;,&quot;searchValueName&quot;:&quot;284105&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284104&quot;,&quot;searchValueName&quot;:&quot;284104&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284103&quot;,&quot;searchValueName&quot;:&quot;284103&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284102&quot;,&quot;searchValueName&quot;:&quot;284102&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284101&quot;,&quot;searchValueName&quot;:&quot;284101&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284100&quot;,&quot;searchValueName&quot;:&quot;284100&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284099&quot;,&quot;searchValueName&quot;:&quot;284099&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284098&quot;,&quot;searchValueName&quot;:&quot;284098&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284097&quot;,&quot;searchValueName&quot;:&quot;284097&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284096&quot;,&quot;searchValueName&quot;:&quot;284096&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284095&quot;,&quot;searchValueName&quot;:&quot;284095&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284094&quot;,&quot;searchValueName&quot;:&quot;284094&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284093&quot;,&quot;searchValueName&quot;:&quot;284093&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284092&quot;,&quot;searchValueName&quot;:&quot;284092&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284091&quot;,&quot;searchValueName&quot;:&quot;284091&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284090&quot;,&quot;searchValueName&quot;:&quot;284090&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284089&quot;,&quot;searchValueName&quot;:&quot;284089&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284088&quot;,&quot;searchValueName&quot;:&quot;284088&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284087&quot;,&quot;searchValueName&quot;:&quot;284087&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284086&quot;,&quot;searchValueName&quot;:&quot;284086&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284085&quot;,&quot;searchValueName&quot;:&quot;284085&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284084&quot;,&quot;searchValueName&quot;:&quot;284084&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284083&quot;,&quot;searchValueName&quot;:&quot;284083&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284082&quot;,&quot;searchValueName&quot;:&quot;284082&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284081&quot;,&quot;searchValueName&quot;:&quot;284081&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284080&quot;,&quot;searchValueName&quot;:&quot;284080&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284079&quot;,&quot;searchValueName&quot;:&quot;284079&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284078&quot;,&quot;searchValueName&quot;:&quot;284078&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284077&quot;,&quot;searchValueName&quot;:&quot;284077&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284076&quot;,&quot;searchValueName&quot;:&quot;284076&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284075&quot;,&quot;searchValueName&quot;:&quot;284075&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284074&quot;,&quot;searchValueName&quot;:&quot;284074&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284073&quot;,&quot;searchValueName&quot;:&quot;284073&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284072&quot;,&quot;searchValueName&quot;:&quot;284072&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284071&quot;,&quot;searchValueName&quot;:&quot;284071&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284070&quot;,&quot;searchValueName&quot;:&quot;284070&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284069&quot;,&quot;searchValueName&quot;:&quot;284069&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284068&quot;,&quot;searchValueName&quot;:&quot;284068&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284067&quot;,&quot;searchValueName&quot;:&quot;284067&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284066&quot;,&quot;searchValueName&quot;:&quot;284066&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284065&quot;,&quot;searchValueName&quot;:&quot;284065&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284064&quot;,&quot;searchValueName&quot;:&quot;284064&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284063&quot;,&quot;searchValueName&quot;:&quot;284063&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284062&quot;,&quot;searchValueName&quot;:&quot;284062&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284061&quot;,&quot;searchValueName&quot;:&quot;284061&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284060&quot;,&quot;searchValueName&quot;:&quot;284060&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284059&quot;,&quot;searchValueName&quot;:&quot;284059&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284058&quot;,&quot;searchValueName&quot;:&quot;284058&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284057&quot;,&quot;searchValueName&quot;:&quot;284057&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284056&quot;,&quot;searchValueName&quot;:&quot;284056&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284055&quot;,&quot;searchValueName&quot;:&quot;284055&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284054&quot;,&quot;searchValueName&quot;:&quot;284054&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284053&quot;,&quot;searchValueName&quot;:&quot;284053&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284052&quot;,&quot;searchValueName&quot;:&quot;284052&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284051&quot;,&quot;searchValueName&quot;:&quot;284051&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284050&quot;,&quot;searchValueName&quot;:&quot;284050&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284049&quot;,&quot;searchValueName&quot;:&quot;284049&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284048&quot;,&quot;searchValueName&quot;:&quot;284048&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284047&quot;,&quot;searchValueName&quot;:&quot;284047&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284046&quot;,&quot;searchValueName&quot;:&quot;284046&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284045&quot;,&quot;searchValueName&quot;:&quot;284045&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284044&quot;,&quot;searchValueName&quot;:&quot;284044&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284043&quot;,&quot;searchValueName&quot;:&quot;284043&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284042&quot;,&quot;searchValueName&quot;:&quot;284042&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284041&quot;,&quot;searchValueName&quot;:&quot;284041&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284040&quot;,&quot;searchValueName&quot;:&quot;284040&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284039&quot;,&quot;searchValueName&quot;:&quot;284039&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284038&quot;,&quot;searchValueName&quot;:&quot;284038&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284037&quot;,&quot;searchValueName&quot;:&quot;284037&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284036&quot;,&quot;searchValueName&quot;:&quot;284036&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284035&quot;,&quot;searchValueName&quot;:&quot;284035&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284034&quot;,&quot;searchValueName&quot;:&quot;284034&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284033&quot;,&quot;searchValueName&quot;:&quot;284033&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284032&quot;,&quot;searchValueName&quot;:&quot;284032&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284031&quot;,&quot;searchValueName&quot;:&quot;284031&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284030&quot;,&quot;searchValueName&quot;:&quot;284030&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284029&quot;,&quot;searchValueName&quot;:&quot;284029&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284028&quot;,&quot;searchValueName&quot;:&quot;284028&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284027&quot;,&quot;searchValueName&quot;:&quot;284027&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284026&quot;,&quot;searchValueName&quot;:&quot;284026&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284025&quot;,&quot;searchValueName&quot;:&quot;284025&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284024&quot;,&quot;searchValueName&quot;:&quot;284024&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284023&quot;,&quot;searchValueName&quot;:&quot;284023&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284022&quot;,&quot;searchValueName&quot;:&quot;284022&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284021&quot;,&quot;searchValueName&quot;:&quot;284021&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284020&quot;,&quot;searchValueName&quot;:&quot;284020&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284019&quot;,&quot;searchValueName&quot;:&quot;284019&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284018&quot;,&quot;searchValueName&quot;:&quot;284018&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284017&quot;,&quot;searchValueName&quot;:&quot;284017&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284016&quot;,&quot;searchValueName&quot;:&quot;284016&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284015&quot;,&quot;searchValueName&quot;:&quot;284015&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284014&quot;,&quot;searchValueName&quot;:&quot;284014&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284013&quot;,&quot;searchValueName&quot;:&quot;284013&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284012&quot;,&quot;searchValueName&quot;:&quot;284012&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284011&quot;,&quot;searchValueName&quot;:&quot;284011&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284010&quot;,&quot;searchValueName&quot;:&quot;284010&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284009&quot;,&quot;searchValueName&quot;:&quot;284009&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284008&quot;,&quot;searchValueName&quot;:&quot;284008&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284007&quot;,&quot;searchValueName&quot;:&quot;284007&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284006&quot;,&quot;searchValueName&quot;:&quot;284006&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284005&quot;,&quot;searchValueName&quot;:&quot;284005&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284004&quot;,&quot;searchValueName&quot;:&quot;284004&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284003&quot;,&quot;searchValueName&quot;:&quot;284003&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284002&quot;,&quot;searchValueName&quot;:&quot;284002&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284001&quot;,&quot;searchValueName&quot;:&quot;284001&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;284000&quot;,&quot;searchValueName&quot;:&quot;284000&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283999&quot;,&quot;searchValueName&quot;:&quot;283999&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283998&quot;,&quot;searchValueName&quot;:&quot;283998&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283997&quot;,&quot;searchValueName&quot;:&quot;283997&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283996&quot;,&quot;searchValueName&quot;:&quot;283996&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283995&quot;,&quot;searchValueName&quot;:&quot;283995&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283994&quot;,&quot;searchValueName&quot;:&quot;283994&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283993&quot;,&quot;searchValueName&quot;:&quot;283993&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283991&quot;,&quot;searchValueName&quot;:&quot;283991&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283990&quot;,&quot;searchValueName&quot;:&quot;283990&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283989&quot;,&quot;searchValueName&quot;:&quot;283989&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283988&quot;,&quot;searchValueName&quot;:&quot;283988&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283987&quot;,&quot;searchValueName&quot;:&quot;283987&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283986&quot;,&quot;searchValueName&quot;:&quot;283986&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283985&quot;,&quot;searchValueName&quot;:&quot;283985&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283984&quot;,&quot;searchValueName&quot;:&quot;283984&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283983&quot;,&quot;searchValueName&quot;:&quot;283983&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283982&quot;,&quot;searchValueName&quot;:&quot;283982&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283981&quot;,&quot;searchValueName&quot;:&quot;283981&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283980&quot;,&quot;searchValueName&quot;:&quot;283980&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283979&quot;,&quot;searchValueName&quot;:&quot;283979&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283978&quot;,&quot;searchValueName&quot;:&quot;283978&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283977&quot;,&quot;searchValueName&quot;:&quot;283977&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283976&quot;,&quot;searchValueName&quot;:&quot;283976&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283975&quot;,&quot;searchValueName&quot;:&quot;283975&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283974&quot;,&quot;searchValueName&quot;:&quot;283974&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283973&quot;,&quot;searchValueName&quot;:&quot;283973&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283972&quot;,&quot;searchValueName&quot;:&quot;283972&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283971&quot;,&quot;searchValueName&quot;:&quot;283971&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283970&quot;,&quot;searchValueName&quot;:&quot;283970&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283969&quot;,&quot;searchValueName&quot;:&quot;283969&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283968&quot;,&quot;searchValueName&quot;:&quot;283968&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283967&quot;,&quot;searchValueName&quot;:&quot;283967&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283966&quot;,&quot;searchValueName&quot;:&quot;283966&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283965&quot;,&quot;searchValueName&quot;:&quot;283965&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283964&quot;,&quot;searchValueName&quot;:&quot;283964&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283963&quot;,&quot;searchValueName&quot;:&quot;283963&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283962&quot;,&quot;searchValueName&quot;:&quot;283962&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283961&quot;,&quot;searchValueName&quot;:&quot;283961&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283960&quot;,&quot;searchValueName&quot;:&quot;283960&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283959&quot;,&quot;searchValueName&quot;:&quot;283959&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283958&quot;,&quot;searchValueName&quot;:&quot;283958&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283957&quot;,&quot;searchValueName&quot;:&quot;283957&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283956&quot;,&quot;searchValueName&quot;:&quot;283956&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283955&quot;,&quot;searchValueName&quot;:&quot;283955&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283954&quot;,&quot;searchValueName&quot;:&quot;283954&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283953&quot;,&quot;searchValueName&quot;:&quot;283953&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283952&quot;,&quot;searchValueName&quot;:&quot;283952&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283951&quot;,&quot;searchValueName&quot;:&quot;283951&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283950&quot;,&quot;searchValueName&quot;:&quot;283950&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283949&quot;,&quot;searchValueName&quot;:&quot;283949&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283948&quot;,&quot;searchValueName&quot;:&quot;283948&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283947&quot;,&quot;searchValueName&quot;:&quot;283947&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283946&quot;,&quot;searchValueName&quot;:&quot;283946&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283945&quot;,&quot;searchValueName&quot;:&quot;283945&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283944&quot;,&quot;searchValueName&quot;:&quot;283944&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283943&quot;,&quot;searchValueName&quot;:&quot;283943&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283942&quot;,&quot;searchValueName&quot;:&quot;283942&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283941&quot;,&quot;searchValueName&quot;:&quot;283941&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283940&quot;,&quot;searchValueName&quot;:&quot;283940&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283939&quot;,&quot;searchValueName&quot;:&quot;283939&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283938&quot;,&quot;searchValueName&quot;:&quot;283938&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283937&quot;,&quot;searchValueName&quot;:&quot;283937&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283936&quot;,&quot;searchValueName&quot;:&quot;283936&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283935&quot;,&quot;searchValueName&quot;:&quot;283935&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283934&quot;,&quot;searchValueName&quot;:&quot;283934&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283933&quot;,&quot;searchValueName&quot;:&quot;283933&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283932&quot;,&quot;searchValueName&quot;:&quot;283932&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283931&quot;,&quot;searchValueName&quot;:&quot;283931&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283930&quot;,&quot;searchValueName&quot;:&quot;283930&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283929&quot;,&quot;searchValueName&quot;:&quot;283929&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283928&quot;,&quot;searchValueName&quot;:&quot;283928&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283927&quot;,&quot;searchValueName&quot;:&quot;283927&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283926&quot;,&quot;searchValueName&quot;:&quot;283926&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283925&quot;,&quot;searchValueName&quot;:&quot;283925&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283924&quot;,&quot;searchValueName&quot;:&quot;283924&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283923&quot;,&quot;searchValueName&quot;:&quot;283923&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283922&quot;,&quot;searchValueName&quot;:&quot;283922&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283921&quot;,&quot;searchValueName&quot;:&quot;283921&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283920&quot;,&quot;searchValueName&quot;:&quot;283920&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283919&quot;,&quot;searchValueName&quot;:&quot;283919&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283918&quot;,&quot;searchValueName&quot;:&quot;283918&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283917&quot;,&quot;searchValueName&quot;:&quot;283917&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283916&quot;,&quot;searchValueName&quot;:&quot;283916&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283915&quot;,&quot;searchValueName&quot;:&quot;283915&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283914&quot;,&quot;searchValueName&quot;:&quot;283914&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283913&quot;,&quot;searchValueName&quot;:&quot;283913&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;},{&quot;columnName&quot;:&quot;id&quot;,&quot;categoryName&quot;:&quot;Site ID&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:&quot;283912&quot;,&quot;searchValueName&quot;:&quot;283912&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;id&quot;}]}],&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/OrganizationAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-11-05T13:15:38.351</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">sites.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-11-05T13:15:38.351</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T020z_Org_SiteName_10" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;resultOptions&quot;:{&quot;showColumns&quot;:[&quot;id&quot;,&quot;organizationName&quot;,&quot;organizationType&quot;,&quot;productionStatusId&quot;,&quot;street1&quot;,&quot;city&quot;,&quot;state&quot;,&quot;postalCode&quot;,&quot;country&quot;]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;organizationname&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;organizationname&quot;,&quot;categoryName&quot;:&quot;Site Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Clinic for Healthy Volunteer Studies&quot;,&quot;searchValueName&quot;:&quot;Clinic for Healthy Volunteer Studies&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;organizationname&quot;},{&quot;columnName&quot;:&quot;organizationname&quot;,&quot;categoryName&quot;:&quot;Site Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Medical University of South Carolina (MUSoCaro) - Biomedical Informatics Center&quot;,&quot;searchValueName&quot;:&quot;Medical University of South Carolina (MUSoCaro) - Biomedical Informatics Center&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;organizationname&quot;},{&quot;columnName&quot;:&quot;organizationname&quot;,&quot;categoryName&quot;:&quot;Site Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Rip Van Winkle Podiatry&quot;,&quot;searchValueName&quot;:&quot;Rip Van Winkle Podiatry&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;organizationname&quot;},{&quot;columnName&quot;:&quot;organizationname&quot;,&quot;categoryName&quot;:&quot;Site Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Fuzzy ENT&quot;,&quot;searchValueName&quot;:&quot;Fuzzy ENT&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;organizationname&quot;},{&quot;columnName&quot;:&quot;organizationname&quot;,&quot;categoryName&quot;:&quot;Site Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Schmoo Q. McPoo Dermatology PC&quot;,&quot;searchValueName&quot;:&quot;Schmoo Q. McPoo Dermatology PC&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;organizationname&quot;},{&quot;columnName&quot;:&quot;organizationname&quot;,&quot;categoryName&quot;:&quot;Site Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Ronald L Burkes Oncology PC&quot;,&quot;searchValueName&quot;:&quot;Ronald L Burkes Oncology PC&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;organizationname&quot;},{&quot;columnName&quot;:&quot;organizationname&quot;,&quot;categoryName&quot;:&quot;Site Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;J L LICHTOR DERM&quot;,&quot;searchValueName&quot;:&quot;J L LICHTOR DERM&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;organizationname&quot;},{&quot;columnName&quot;:&quot;organizationname&quot;,&quot;categoryName&quot;:&quot;Site Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Edward J Frink Jr Dermatology PC&quot;,&quot;searchValueName&quot;:&quot;Edward J Frink Jr Dermatology PC&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;organizationname&quot;},{&quot;columnName&quot;:&quot;organizationname&quot;,&quot;categoryName&quot;:&quot;Site Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;James S Forrester Jr Dermatology PC&quot;,&quot;searchValueName&quot;:&quot;James S Forrester Jr Dermatology PC&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;organizationname&quot;},{&quot;columnName&quot;:&quot;organizationname&quot;,&quot;categoryName&quot;:&quot;Site Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Farragut Dermatolology PC&quot;,&quot;searchValueName&quot;:&quot;Farragut Dermatolology PC&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;organizationname&quot;}]}],&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/OrganizationAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T10:10:35.794</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">sites.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T10:10:35.794</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T021z_Org_CoutryStateCity" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;resultOptions&quot;:{&quot;showColumns&quot;:[&quot;id&quot;,&quot;organizationName&quot;,&quot;organizationType&quot;,&quot;productionStatusId&quot;,&quot;street1&quot;,&quot;city&quot;,&quot;state&quot;,&quot;postalCode&quot;,&quot;country&quot;]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;countryid&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;countryid&quot;,&quot;categoryName&quot;:&quot;Country&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:98,&quot;searchValueName&quot;:&quot;India&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;countryid&quot;}]},{&quot;groupName&quot;:&quot;stateid&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;stateid&quot;,&quot;categoryName&quot;:&quot;State&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:549,&quot;searchValueName&quot;:&quot;Karnataka&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;stateid&quot;}]},{&quot;groupName&quot;:&quot;cityid&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;cityid&quot;,&quot;categoryName&quot;:&quot;City&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:7138,&quot;searchValueName&quot;:&quot;Bengaluru Area &quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;cityid&quot;},{&quot;columnName&quot;:&quot;cityid&quot;,&quot;categoryName&quot;:&quot;City&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:7362,&quot;searchValueName&quot;:&quot;Bengaluru&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;cityid&quot;}]}],&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/OrganizationAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T11:14:10.381</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">sites.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T11:14:10.381</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S09_ComplexSearch_T022z_Org_MultipleCategories" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;resultOptions&quot;:{&quot;showColumns&quot;:[&quot;id&quot;,&quot;organizationName&quot;,&quot;organizationType&quot;,&quot;productionStatusId&quot;,&quot;street1&quot;,&quot;city&quot;,&quot;state&quot;,&quot;postalCode&quot;,&quot;country&quot;]},&quot;searchCriteriaGroups&quot;:[{&quot;groupName&quot;:&quot;organizationname&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;organizationname&quot;,&quot;categoryName&quot;:&quot;Site Name&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Medical&quot;,&quot;searchValueName&quot;:&quot;Medical&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;organizationname&quot;}]},{&quot;groupName&quot;:&quot;organizationtypeid&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;organizationtypeid&quot;,&quot;categoryName&quot;:&quot;Site Type&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:4,&quot;searchValueName&quot;:&quot;Medical Practice&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;organizationtypeid&quot;},{&quot;columnName&quot;:&quot;organizationtypeid&quot;,&quot;categoryName&quot;:&quot;Site Type&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:3,&quot;searchValueName&quot;:&quot;Academic Hospital / Clinic&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;organizationtypeid&quot;}]},{&quot;groupName&quot;:&quot;prodstatusid&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;prodstatusid&quot;,&quot;categoryName&quot;:&quot;Production Status&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:1,&quot;searchValueName&quot;:&quot;In Production&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;prodstatusid&quot;},{&quot;columnName&quot;:&quot;prodstatusid&quot;,&quot;categoryName&quot;:&quot;Production Status&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:4,&quot;searchValueName&quot;:&quot;Data Check&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;prodstatusid&quot;}]},{&quot;groupName&quot;:&quot;countryid&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;countryid&quot;,&quot;categoryName&quot;:&quot;Country&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:98,&quot;searchValueName&quot;:&quot;India&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;countryid&quot;}]},{&quot;groupName&quot;:&quot;stateid&quot;,&quot;searchGroupCondition&quot;:0,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;stateid&quot;,&quot;categoryName&quot;:&quot;State&quot;,&quot;operator&quot;:0,&quot;searchValue&quot;:549,&quot;searchValueName&quot;:&quot;Karnataka&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;number&quot;,&quot;groupName&quot;:&quot;stateid&quot;}]},{&quot;groupName&quot;:&quot;notetext&quot;,&quot;searchGroupCondition&quot;:1,&quot;searchCriteria&quot;:[{&quot;columnName&quot;:&quot;notetext&quot;,&quot;categoryName&quot;:&quot;Notes&quot;,&quot;operator&quot;:2,&quot;searchValue&quot;:&quot;Test&quot;,&quot;searchValueName&quot;:&quot;Test&quot;,&quot;condition&quot;:1,&quot;dataType&quot;:&quot;text&quot;,&quot;groupName&quot;:&quot;notetext&quot;}]}],&quot;pageIndex&quot;:1,&quot;pageSize&quot;:50}</stringProp>
                <stringProp name="Argument.metadata"></stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sites.prd.dna.informa-labs.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/OrganizationAdvanceSearch/advanceSearch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T09:52:14.063</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="authority" elementType="Header">
                <stringProp name="Header.name">authority</stringProp>
                <stringProp name="Header.value">sites.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://ui1.prd.dna.informa-labs.com/</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2021-11-09T09:52:14.063</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Error Output" enabled="false">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">${__P(pErroroutputfile)}</stringProp>
      </ResultCollector>
      <hashTree/>
      <com.github.johrstrom.listener.PrometheusListener guiclass="com.github.johrstrom.listener.gui.PrometheusListenerGui" testclass="com.github.johrstrom.listener.PrometheusListener" testname="Prometheus Listener" enabled="false">
        <collectionProp name="prometheus.collector_definitions">
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">Sample Response Time</stringProp>
            <stringProp name="collector.metric_name">Response Time</stringProp>
            <stringProp name="collector.type">SUMMARY</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
            <stringProp name="listener.collector.listen_to">samples</stringProp>
            <stringProp name="listener.collector.measuring">ResponseTime</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">Success and Failure ratio</stringProp>
            <stringProp name="collector.metric_name">Ratio</stringProp>
            <stringProp name="collector.type">SUCCESS_RATIO</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.measuring">SuccessRatio</stringProp>
          </elementProp>
        </collectionProp>
      </com.github.johrstrom.listener.PrometheusListener>
      <hashTree/>
      <com.github.johrstrom.listener.PrometheusListener guiclass="com.github.johrstrom.listener.gui.PrometheusListenerGui" testclass="com.github.johrstrom.listener.PrometheusListener" testname="Prometheus Listener" enabled="false">
        <collectionProp name="prometheus.collector_definitions">
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">default help string</stringProp>
            <stringProp name="collector.metric_name">jmeter_summary</stringProp>
            <stringProp name="collector.type">SUMMARY</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="50511102">category</stringProp>
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">default help string</stringProp>
            <stringProp name="collector.metric_name">jmeter_count_total</stringProp>
            <stringProp name="collector.type">COUNTER</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.measuring">CountTotal</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">default help string</stringProp>
            <stringProp name="collector.metric_name">jmeter_success_total</stringProp>
            <stringProp name="collector.type">COUNTER</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="50511102">category</stringProp>
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.listen_to">samples</stringProp>
            <stringProp name="listener.collector.measuring">SuccessTotal</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">default help string</stringProp>
            <stringProp name="collector.metric_name">jmeter_rsize</stringProp>
            <stringProp name="collector.type">HISTOGRAM</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">100,500,1000,3000</stringProp>
            <stringProp name="listener.collector.measuring">ResponseSize</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">default help string</stringProp>
            <stringProp name="collector.metric_name">jmeter_success_ratio</stringProp>
            <stringProp name="collector.type">SUCCESS_RATIO</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.measuring">SuccessRatio</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">default help string</stringProp>
            <stringProp name="collector.metric_name">jmeter_latency</stringProp>
            <stringProp name="collector.type">SUMMARY</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">100,500,1000,3000</stringProp>
            <stringProp name="listener.collector.measuring">Latency</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">default help string</stringProp>
            <stringProp name="collector.metric_name">jmeter_idle_time</stringProp>
            <stringProp name="collector.type">SUMMARY</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
            <stringProp name="listener.collector.measuring">IdleTime</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">default help string</stringProp>
            <stringProp name="collector.metric_name">jmeter_failure_total</stringProp>
            <stringProp name="collector.type">COUNTER</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="50511102">category</stringProp>
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.measuring">FailureTotal</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">default help string</stringProp>
            <stringProp name="collector.metric_name">jmeter_connect_time</stringProp>
            <stringProp name="collector.type">COUNTER</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.measuring">ConnectTime</stringProp>
          </elementProp>
        </collectionProp>
      </com.github.johrstrom.listener.PrometheusListener>
      <hashTree/>
      <com.github.johrstrom.listener.PrometheusListener guiclass="com.github.johrstrom.listener.gui.PrometheusListenerGui" testclass="com.github.johrstrom.listener.PrometheusListener" testname="Main prometheus listener" enabled="false">
        <collectionProp name="prometheus.collector_definitions">
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">the response time for a jsr223 sampler</stringProp>
            <stringProp name="collector.metric_name">jsr223_rt_as_hist</stringProp>
            <stringProp name="collector.type">HISTOGRAM</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">100,500,1000,3000</stringProp>
            <stringProp name="listener.collector.listen_to">samples</stringProp>
            <stringProp name="listener.collector.measuring">ResponseTime</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">the response time for a jsr223 sampler</stringProp>
            <stringProp name="collector.metric_name">jsr223_rt_as_summary</stringProp>
            <stringProp name="collector.type">SUMMARY</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="50511102">category</stringProp>
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
            <stringProp name="listener.collector.measuring">ResponseTime</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">the total number of samplers</stringProp>
            <stringProp name="collector.metric_name">jsr223_count_total</stringProp>
            <stringProp name="collector.type">COUNTER</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.measuring">CountTotal</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">the total number of successful samplers</stringProp>
            <stringProp name="collector.metric_name">jsr223_success_total</stringProp>
            <stringProp name="collector.type">COUNTER</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.measuring">SuccessTotal</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">the response size for a jsr223 sampler</stringProp>
            <stringProp name="collector.metric_name">jsr223_rsize_as_hist</stringProp>
            <stringProp name="collector.type">HISTOGRAM</stringProp>
            <collectionProp name="collector.labels"/>
            <stringProp name="collector.quantiles_or_buckets">100,500,1000,3000</stringProp>
            <stringProp name="listener.collector.measuring">ResponseSize</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">success ratio of the can_fail_sampler</stringProp>
            <stringProp name="collector.metric_name">jsr223_can_fail</stringProp>
            <stringProp name="collector.type">SUCCESS_RATIO</stringProp>
            <collectionProp name="collector.labels"/>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.measuring">SuccessRatio</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">the latency (ttfb) for a jsr223 sampler</stringProp>
            <stringProp name="collector.metric_name">jsr223_latency_as_hist</stringProp>
            <stringProp name="collector.type">HISTOGRAM</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">100,500,1000,3000</stringProp>
            <stringProp name="listener.collector.measuring">Latency</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">the idle time for a jsr223 sampler</stringProp>
            <stringProp name="collector.metric_name">jsr223_idle_time</stringProp>
            <stringProp name="collector.type">SUMMARY</stringProp>
            <collectionProp name="collector.labels"/>
            <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
            <stringProp name="listener.collector.measuring">IdleTime</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">default help string</stringProp>
            <stringProp name="collector.metric_name">jsr223_assertions</stringProp>
            <stringProp name="collector.type">SUCCESS_RATIO</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="102727412">label</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.measuring">SuccessRatio</stringProp>
            <stringProp name="listener.collector.listen_to">assertions</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">This listener &quot;measures&quot; everything, sometimes in summaries, sometimes in histograms.</stringProp>
      </com.github.johrstrom.listener.PrometheusListener>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="false">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="influxdbMetricsSender" elementType="Argument">
              <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
              <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="influxdbUrl" elementType="Argument">
              <stringProp name="Argument.name">influxdbUrl</stringProp>
              <stringProp name="Argument.value">https://influxdb.prd.dna.informa-labs.com:443/write?db=jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="application" elementType="Argument">
              <stringProp name="Argument.name">application</stringProp>
              <stringProp name="Argument.value">STAR</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="measurement" elementType="Argument">
              <stringProp name="Argument.name">measurement</stringProp>
              <stringProp name="Argument.value">jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="summaryOnly" elementType="Argument">
              <stringProp name="Argument.name">summaryOnly</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersRegex" elementType="Argument">
              <stringProp name="Argument.name">samplersRegex</stringProp>
              <stringProp name="Argument.value">.*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="percentiles" elementType="Argument">
              <stringProp name="Argument.name">percentiles</stringProp>
              <stringProp name="Argument.value">99;95;90</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testTitle" elementType="Argument">
              <stringProp name="Argument.name">testTitle</stringProp>
              <stringProp name="Argument.value">Test name</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventTags" elementType="Argument">
              <stringProp name="Argument.name">eventTags</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
      </BackendListener>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
